{"version":3,"names":["stylesCss","ZSelectStyle0","ZSelect","class_1","hostRef","this","itemsList","concat","randomId","ControlSize","BIG","toggleSelectUl","bind","selectItem","handleSelectFocus","prototype","watchItems","getInitialItemsArray","selectedItem","find","item","selected","getFocusedItemHandler","e","focusedItemId","target","id","getSelectedItem","getValue","getSelectedValue","setValue","value","values","push","includes","emitOptionSelect","optionSelect","emit","htmlid","emitResetSelect","resetSelect","componentWillLoad","componentWillRender","filterItems","searchString","items","JSON","parse","mapSelectedItemToItemsArray","_this","initialItemsList","map","_a","prevList","length","filter","name","toUpperCase","start","indexOf","end","newName","substring","hasAutocomplete","boolean","autocomplete","handleInputChange","detail","isOpen","disabled","i","arrowsSelectNav","key","showResetIcon","resetItem","arrows","KeyboardCode","ARROW_DOWN","ARROW_UP","preventDefault","stopPropagation","index","focusSelectItem","focusElem","element","querySelector","focus","selfFocusOnClose","readonly","document","addEventListener","removeEventListener","handleInputClick","cp","composedPath","clearIcon","classList","contains","KeyboardEvent","ESC","TAB","ENTER","tree","getElementTree","getClickedElement","parent","elem","nodeName","toLowerCase","MouseEvent","scrollToLetter","letter","foundItem","charAt","renderInput","h","class","placeholder","replace","label","ariaLabel","icon","hasclearicon","message","status","undefined","role","size","onClick","onKeyUp","keyCode","handleKeyboardSubmit","onKeyDown","onInputChange","onKeyPress","String","fromCharCode","renderSelectUl","tabindex","fixed","isfixed","listSizeType","_b","filled","renderResetItem","renderSelectUlItems","hide","hasGroupItems","clickable","dividerType","ListDividerType","ELEMENT","onClickItem","renderItem","lastItem","HEADER","innerHTML","SMALL","X_SMALL","ListSize","MEDIUM","renderNoSearchResults","renderSelectGroupItems","array","itemKey","newData","reduce","group","category","zListItem","Object","entries","slot","color","fill","noresultslabel","renderMessage","render"],"sources":["src/components/z-select/styles.css?tag=z-select&encapsulation=scoped","src/components/z-select/index.tsx"],"sourcesContent":[":host {\n  display: inline-block;\n  width: inherit;\n  color: var(--color-default-text);\n  font-family: var(--font-family-sans);\n  font-size: var(--font-size-3);\n  font-weight: var(--font-rg);\n}\n\n:host([size=\"small\"]),\n:host([size=\"x-small\"]) {\n  font-size: var(--font-size-2);\n}\n\n.select-wrapper > z-input {\n  width: 100%;\n}\n\n.select-wrapper > div {\n  position: relative;\n}\n\n.select-wrapper > div.closed {\n  overflow: hidden;\n  height: 0;\n}\n\n.select-wrapper .ul-scroll-wrapper {\n  position: absolute;\n  width: 100%;\n  box-sizing: border-box;\n  padding: calc(var(--space-unit) * 0.5) var(--space-unit);\n  border: var(--border-size-small) solid var(--gray200);\n  border-top: none;\n  background: var(--color-surface01);\n  outline: none;\n}\n\n.select-wrapper .closed .ul-scroll-wrapper {\n  z-index: 10;\n}\n\n.select-wrapper .open .ul-scroll-wrapper {\n  z-index: 20;\n}\n\n.select-wrapper .ul-scroll-wrapper.fixed {\n  position: static;\n}\n\n.select-wrapper .ul-scroll-wrapper > z-list {\n  position: relative;\n  overflow: auto;\n  max-height: 240px;\n  padding: calc(var(--space-unit) * 0.5);\n  outline: none;\n\n  /* Firefox scrollbar */\n  scrollbar-color: var(--color-primary01) transparent;\n}\n\n.select-wrapper .ul-scroll-wrapper > z-list::-webkit-scrollbar {\n  width: 10px;\n  background: linear-gradient(to right, transparent 0 3px, var(--gray200) 3px 7px, transparent 7px 10px);\n  border-radius: var(--border-radius);\n}\n\n.select-wrapper .ul-scroll-wrapper > z-list::-webkit-scrollbar-track {\n  background-color: transparent;\n}\n\n.select-wrapper .ul-scroll-wrapper > z-list::-webkit-scrollbar-thumb {\n  width: 10px;\n  background-color: var(--color-primary01);\n  border-radius: var(--border-radius);\n}\n\n.select-wrapper .ul-scroll-wrapper > z-list::-webkit-scrollbar-thumb:hover {\n  background-color: var(--color-hover-primary);\n}\n\n.select-wrapper .ul-scroll-wrapper z-list z-list-element .list-element-container {\n  display: flex;\n  align-items: center;\n  padding-left: calc(var(--space-unit) * 1.5);\n}\n\n.select-wrapper .ul-scroll-wrapper z-list z-list-element .list-element-container .list-element-content {\n  display: block;\n  padding: calc(var(--space-unit) * 0.5) 0;\n}\n\n.select-wrapper .ul-scroll-wrapper z-list z-list-element .list-element-container > z-icon + .list-element-content {\n  display: block;\n  padding: calc(var(--space-unit) * 0.5) var(--space-unit);\n}\n\n:host([size=\"x-small\"])\n  .select-wrapper\n  .ul-scroll-wrapper\n  z-list\n  z-list-element\n  .list-element-container\n  .list-element-content {\n  padding: 0;\n}\n\n:host([size=\"small\"]) .select-wrapper .ul-scroll-wrapper z-list z-list-element .list-element-container > z-icon {\n  --z-icon-width: 16px;\n  --z-icon-height: 16px;\n}\n\n:host([size=\"x-small\"]) .select-wrapper .ul-scroll-wrapper z-list z-list-element .list-element-container > z-icon {\n  --z-icon-width: 14px;\n  --z-icon-height: 14px;\n}\n\n:host([size=\"x-small\"])\n  .select-wrapper\n  .ul-scroll-wrapper\n  z-list\n  z-list-element\n  .list-element-container\n  > z-icon\n  + .list-element-content {\n  padding: 0 var(--space-unit);\n}\n\n.select-wrapper .ul-scroll-wrapper z-list z-list-element .list-element-container .list-element-content.selected {\n  font-weight: bold;\n}\n\n.select-wrapper .ul-scroll-wrapper .no-results z-icon {\n  margin-right: var(--space-unit);\n}\n\n.z-list-group-title {\n  color: var(--gray800);\n}\n\n.reset-item {\n  color: var(--color-primary01);\n  fill: var(--color-primary01);\n}\n\n.reset-item-content {\n  display: flex;\n  align-items: center;\n}\n\n.reset-item.reset-item-margin .reset-item-content {\n  margin-left: calc(var(--space-unit));\n}\n\n.reset-item .reset-item-content > z-icon {\n  margin-right: var(--space-unit);\n}\n\n.reset-item.hide {\n  display: none;\n}\n","import {Component, Element, Event, EventEmitter, Listen, Method, Prop, State, Watch, h} from \"@stencil/core\";\nimport {ControlSize, InputStatus, KeyboardCode, ListDividerType, ListSize, SelectItem} from \"../../beans\";\nimport {boolean, getClickedElement, getElementTree, handleKeyboardSubmit, randomId} from \"../../utils/utils\";\n\n@Component({\n  tag: \"z-select\",\n  styleUrl: \"styles.css\",\n  shadow: false,\n  scoped: true,\n})\nexport class ZSelect {\n  @Element() element: HTMLZSelectElement;\n\n  /** the id of the input element */\n  @Prop()\n  htmlid = `id-${randomId()}`;\n\n  /** the input select options */\n  @Prop()\n  items: SelectItem[] | string;\n\n  /** the input name */\n  @Prop()\n  name?: string;\n\n  /** the input label */\n  @Prop()\n  label?: string;\n\n  /** the input aria-label */\n  @Prop()\n  ariaLabel = \"\";\n\n  /** the input is disabled */\n  @Prop()\n  disabled?: boolean = false;\n\n  /** the input is readonly */\n  @Prop()\n  readonly?: boolean = false;\n\n  /** the input placeholder (optional) */\n  @Prop()\n  placeholder?: string;\n\n  /** the input html title (optional) */\n  @Prop()\n  htmltitle?: string;\n\n  /** the input status (optional) */\n  @Prop()\n  status?: InputStatus;\n\n  /** input helper message (optional) - if set to `false` message won't be displayed */\n  @Prop()\n  message?: string | boolean = true;\n\n  /** the input has autocomplete option */\n  @Prop()\n  autocomplete?: boolean = false;\n\n  /** no result text message */\n  @Prop()\n  noresultslabel?: string = \"Nessun risultato\";\n\n  /** */\n  @Prop()\n  hasGroupItems?: boolean;\n\n  /** When fixed, it occupies space and pushes down next elements. */\n  @Prop()\n  isfixed?: boolean = false;\n\n  /** */\n  @Prop()\n  resetItem?: string;\n\n  /** Available sizes: `big`, `small` and `x-small`. Defaults to `big`. */\n  @Prop()\n  size?: ControlSize = ControlSize.BIG;\n\n  @State()\n  isOpen = false;\n\n  @State()\n  selectedItem: null | SelectItem = null;\n\n  @State()\n  focusedItemId: string;\n\n  @State()\n  searchString: null | string;\n\n  private itemsList: SelectItem[] = [];\n\n  constructor() {\n    this.toggleSelectUl = this.toggleSelectUl.bind(this);\n    this.selectItem = this.selectItem.bind(this);\n    this.handleSelectFocus = this.handleSelectFocus.bind(this);\n  }\n\n  @Watch(\"items\")\n  watchItems(): void {\n    this.itemsList = this.getInitialItemsArray();\n    this.selectedItem = this.itemsList.find((item: SelectItem) => item.selected);\n  }\n\n  @Listen(\"ariaDescendantFocus\")\n  getFocusedItemHandler(e: CustomEvent): void {\n    this.focusedItemId = (e.target as Element).id;\n  }\n\n  /** get the input selected options */\n  @Method()\n  async getSelectedItem(): Promise<SelectItem> {\n    return this.selectedItem;\n  }\n\n  /** get the input value */\n  @Method()\n  async getValue(): Promise<string> {\n    return this.getSelectedValue();\n  }\n\n  /** set the input value */\n  @Method()\n  async setValue(value: string | string[]): Promise<void> {\n    let values: string[] = [];\n    if (typeof value === \"string\") {\n      values.push(value);\n    } else {\n      values = value;\n    }\n\n    this.selectedItem = this.itemsList.find((item: SelectItem) => values.includes(item.id));\n  }\n\n  /** Emitted on select option selection, returns select id, selected item id */\n  @Event()\n  optionSelect: EventEmitter;\n\n  private emitOptionSelect(): void {\n    this.optionSelect.emit({\n      id: this.htmlid,\n      selected: this.getSelectedValue(),\n    });\n  }\n\n  /** Emitted on reset selected item, returns select id, selected item id */\n  @Event()\n  resetSelect: EventEmitter;\n\n  private emitResetSelect(): void {\n    this.resetSelect.emit({\n      id: this.htmlid,\n    });\n  }\n\n  componentWillLoad(): void {\n    this.watchItems();\n  }\n\n  componentWillRender(): void {\n    this.filterItems(this.searchString);\n  }\n\n  private getInitialItemsArray(): SelectItem[] {\n    return typeof this.items === \"string\" ? JSON.parse(this.items) : this.items;\n  }\n\n  private mapSelectedItemToItemsArray(): SelectItem[] {\n    const initialItemsList = this.getInitialItemsArray();\n\n    return initialItemsList.map((item: SelectItem) => {\n      item.selected = item.id === this.selectedItem?.id;\n\n      return item;\n    });\n  }\n\n  private getSelectedValue(): string {\n    return this.selectedItem?.id;\n  }\n\n  private filterItems(searchString: string): void {\n    const prevList = this.mapSelectedItemToItemsArray();\n    if (!searchString?.length) {\n      this.itemsList = prevList;\n    } else {\n      this.itemsList = prevList\n        .filter((item: SelectItem) => {\n          return item.name.toUpperCase().includes(searchString.toUpperCase());\n        })\n        .map((item: SelectItem) => {\n          const start = item.name.toUpperCase().indexOf(searchString.toUpperCase());\n          const end = start + searchString.length;\n          const newName =\n            item.name.substring(0, start) +\n            `<strong>${item.name.substring(start, end)}</strong>` +\n            item.name.substring(end, item.name.length);\n          item.name = newName;\n\n          return item;\n        });\n    }\n  }\n\n  private hasAutocomplete(): boolean {\n    return boolean(this.autocomplete) === true;\n  }\n\n  private handleInputChange(e: CustomEvent): void {\n    this.searchString = e.detail.value;\n    if (!this.isOpen) {\n      this.toggleSelectUl();\n    }\n  }\n\n  private selectItem(item: null | SelectItem, selected: boolean): void {\n    if (item && item.disabled) {\n      return;\n    }\n\n    this.itemsList = this.mapSelectedItemToItemsArray();\n    this.itemsList = this.itemsList.map((i: SelectItem) => {\n      i.selected = false;\n      if (i.id === item?.id) {\n        i.selected = selected;\n      }\n\n      return i;\n    });\n\n    this.selectedItem = this.itemsList.find((item: SelectItem) => item.selected);\n\n    this.emitOptionSelect();\n\n    if (this.searchString) {\n      this.searchString = null;\n    }\n  }\n\n  private arrowsSelectNav(e: KeyboardEvent, key: number): void {\n    const showResetIcon = this.resetItem && !!this.selectedItem;\n    const arrows = [KeyboardCode.ARROW_DOWN, KeyboardCode.ARROW_UP];\n    if (!arrows.includes(e.key as KeyboardCode)) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (!this.isOpen) {\n      this.toggleSelectUl();\n    }\n\n    let index: number;\n\n    if (this.resetItem) {\n      if (e.key === KeyboardCode.ARROW_DOWN) {\n        index = key + 1 === this.itemsList.length + 1 ? +!showResetIcon : key + 1;\n      } else if (e.key === KeyboardCode.ARROW_UP) {\n        index = key <= +!showResetIcon ? this.itemsList.length : key - 1;\n      }\n    }\n\n    if (!this.resetItem) {\n      if (e.key === KeyboardCode.ARROW_DOWN) {\n        index = key + 1 === this.itemsList.length ? 0 : key + 1;\n      } else if (e.key === KeyboardCode.ARROW_UP) {\n        index = key <= 0 ? this.itemsList.length - 1 : key - 1;\n      }\n    }\n\n    this.focusSelectItem(index);\n  }\n\n  private focusSelectItem(index: number): void {\n    const focusElem: HTMLLIElement = this.element.querySelector(`#${this.htmlid}_${index}`);\n    if (focusElem) {\n      focusElem.focus();\n    }\n  }\n\n  private toggleSelectUl(selfFocusOnClose = false): void {\n    if (this.disabled || this.readonly) {\n      return;\n    }\n\n    if (!this.isOpen) {\n      document.addEventListener(\"click\", this.handleSelectFocus);\n      document.addEventListener(\"keyup\", this.handleSelectFocus);\n    } else {\n      document.removeEventListener(\"click\", this.handleSelectFocus);\n      document.removeEventListener(\"keyup\", this.handleSelectFocus);\n      if (selfFocusOnClose) {\n        (this.element.querySelector(`#${this.htmlid}_input`) as HTMLInputElement).focus();\n      }\n    }\n\n    this.focusedItemId = \"\";\n    this.isOpen = !this.isOpen;\n  }\n\n  private handleInputClick(e: MouseEvent | KeyboardEvent): void {\n    const cp = e.composedPath();\n    const clearIcon = cp.find((item: HTMLElement) => item.classList && item.classList.contains(\"reset-icon\"));\n    if (clearIcon) {\n      e.stopPropagation();\n\n      return;\n    }\n\n    this.toggleSelectUl();\n  }\n\n  private handleSelectFocus(e: MouseEvent | KeyboardEvent): void {\n    if (e instanceof KeyboardEvent && e.key === KeyboardCode.ESC) {\n      e.stopPropagation();\n\n      return this.toggleSelectUl(true);\n    }\n\n    if (e instanceof KeyboardEvent && e.key !== KeyboardCode.TAB && e.key !== KeyboardCode.ENTER) {\n      return;\n    }\n\n    const tree = getElementTree(getClickedElement());\n    const parent = tree.find((elem: HTMLElement) => {\n      return elem.nodeName.toLowerCase() === \"z-input\" && elem.id === `${this.htmlid}_input`;\n    });\n\n    if (!parent) {\n      this.toggleSelectUl(e instanceof MouseEvent ? true : false);\n    }\n  }\n\n  private scrollToLetter(letter: string): void {\n    const foundItem = this.itemsList.find((item: SelectItem) => item.name.charAt(0) === letter);\n    if (foundItem) {\n      this.focusSelectItem(this.itemsList.indexOf(foundItem));\n    }\n  }\n\n  private renderInput(): HTMLZInputElement {\n    return (\n      <z-input\n        class={{\n          \"active-select\": this.isOpen,\n          \"cursor-select\": !this.autocomplete,\n        }}\n        id={`${this.htmlid}_input`}\n        htmlid={`${this.htmlid}_select_input`}\n        placeholder={this.placeholder}\n        value={!this.isOpen && this.selectedItem ? this.selectedItem.name.replace(/<[^>]+>/g, \"\") : null}\n        label={this.label}\n        aria-expanded={this.isOpen ? \"true\" : \"false\"}\n        aria-label={this.ariaLabel}\n        aria-controls={`${this.htmlid}_list`}\n        aria-autocomplete={this.hasAutocomplete() ? \"list\" : \"none\"}\n        aria-activedescendant={this.isOpen ? this.focusedItemId : \"\"}\n        icon={this.isOpen ? \"caret-up\" : \"caret-down\"}\n        hasclearicon={this.hasAutocomplete()}\n        message={false}\n        disabled={this.disabled}\n        readonly={this.readonly || (!this.hasAutocomplete() && this.isOpen)}\n        status={this.isOpen ? undefined : this.status}\n        role=\"combobox\"\n        size={this.size}\n        onClick={(e: MouseEvent) => {\n          this.handleInputClick(e);\n        }}\n        onKeyUp={(e: KeyboardEvent) => {\n          if (e.keyCode !== 13) {\n            e.preventDefault();\n          }\n          handleKeyboardSubmit(e, this.toggleSelectUl);\n        }}\n        onKeyDown={(e: KeyboardEvent) => {\n          return this.arrowsSelectNav(\n            e,\n            this.selectedItem ? this.itemsList.indexOf(this.selectedItem) : this.resetItem ? 0 : -1\n          );\n        }}\n        onInputChange={(e: CustomEvent) => {\n          this.handleInputChange(e);\n        }}\n        onKeyPress={(e: KeyboardEvent) => {\n          if (!this.hasAutocomplete()) {\n            e.preventDefault();\n            this.scrollToLetter(String.fromCharCode(e.keyCode));\n          }\n        }}\n      />\n    );\n  }\n\n  private renderSelectUl(): HTMLDivElement {\n    return (\n      <div\n        class={this.isOpen ? \"open\" : \"closed\"}\n        tabindex=\"-1\"\n      >\n        <div\n          class={{\n            \"ul-scroll-wrapper\": true,\n            \"fixed\": this.isfixed,\n          }}\n          tabindex=\"-1\"\n        >\n          <z-list\n            role=\"listbox\"\n            aria-label={this.ariaLabel || this.label}\n            tabindex={this.disabled || this.readonly || !this.isOpen ? -1 : 0}\n            id={`${this.htmlid}_list`}\n            aria-multiselectable={false}\n            size={this.listSizeType()}\n            class={{\n              disabled: this.disabled,\n              readonly: this.readonly,\n              filled: !!this.selectedItem,\n              [`input-${this.status}`]: !this.isOpen && !!this.status,\n            }}\n          >\n            {this.resetItem && this.renderResetItem()}\n            {this.renderSelectUlItems()}\n          </z-list>\n        </div>\n      </div>\n    );\n  }\n\n  private renderResetItem(): HTMLZListElementElement {\n    return (\n      <z-list-element\n        class={{\n          \"hide\": !this.selectedItem || !this.resetItem,\n          \"reset-item\": true,\n          \"reset-item-margin\": !this.hasGroupItems,\n        }}\n        clickable={true}\n        disabled={false}\n        dividerType={ListDividerType.ELEMENT}\n        role=\"option\"\n        tabindex=\"0\"\n        aria-selected=\"false\"\n        id={`${this.htmlid}_${this.resetItem ? \"0\" : \"none\"}`}\n        size={this.listSizeType()}\n        onClickItem={() => {\n          this.selectedItem = null;\n          this.searchString = null;\n          this.emitResetSelect();\n        }}\n        onKeyDown={(e: KeyboardEvent) => this.arrowsSelectNav(e, 0)}\n      >\n        <div class=\"reset-item-content\">\n          <z-icon name=\"multiply-circled\" />\n          <span>{this.resetItem}</span>\n        </div>\n      </z-list-element>\n    );\n  }\n\n  private renderItem(item: SelectItem, key: number, lastItem: boolean): HTMLZListElementElement {\n    return (\n      <z-list-element\n        clickable={!item.disabled}\n        disabled={item.disabled}\n        dividerType={lastItem ? ListDividerType.HEADER : ListDividerType.ELEMENT}\n        role=\"option\"\n        tabindex={item.disabled || !this.isOpen ? -1 : 0}\n        aria-selected={item.selected ? \"true\" : \"false\"}\n        id={`${this.htmlid}_${key}`}\n        size={this.listSizeType()}\n        onClickItem={() => this.selectItem(item, true)}\n        onKeyDown={(e: KeyboardEvent) => this.arrowsSelectNav(e, key)}\n      >\n        <div class=\"list-element-container\">\n          {item.icon && <z-icon name={item.icon} />}\n          <span\n            class={{\n              \"selected\": !!item.selected,\n              \"list-element-content\": true,\n            }}\n            innerHTML={item.name}\n          />\n        </div>\n      </z-list-element>\n    );\n  }\n\n  private listSizeType(): ListSize {\n    if (this.size === ControlSize.SMALL || this.size === ControlSize.X_SMALL) {\n      return ListSize.SMALL;\n    }\n\n    return ListSize.MEDIUM;\n  }\n\n  private renderSelectUlItems(): HTMLZListElementElement | HTMLZListElementElement[] {\n    if (!this.itemsList.length) {\n      return this.renderNoSearchResults();\n    }\n\n    if (this.hasGroupItems) {\n      return this.renderSelectGroupItems();\n    }\n\n    return this.itemsList.map((item: SelectItem, key, array) => {\n      const lastItem = array.length === key + 1;\n      const itemKey = this.resetItem ? key + 1 : key;\n\n      return this.renderItem(item, itemKey, lastItem);\n    });\n  }\n\n  private renderSelectGroupItems(): HTMLZListElementElement | HTMLZListElementElement[] {\n    const newData = this.itemsList.reduce((group, item, index, array) => {\n      const {category} = item;\n      const lastItem = array.length === index + 1;\n      const itemKey = this.resetItem ? index + 1 : index;\n      const zListItem = this.renderItem(item, itemKey, lastItem);\n\n      group[category] = group[category] ?? [];\n      group[category].push(zListItem);\n\n      return group;\n    }, {});\n\n    return Object.entries(newData as {[key: string]: HTMLZListElementElement[]}).map(([key, value]) => {\n      return (\n        <z-list-group divider-type={ListDividerType.ELEMENT}>\n          <span\n            class=\"body-3-sb z-list-group-title\"\n            slot=\"header-title\"\n          >\n            {key}\n          </span>\n          {value.map((item) => item)}\n        </z-list-group>\n      );\n    });\n  }\n\n  private renderNoSearchResults(): HTMLZListElementElement {\n    return (\n      <z-list-element\n        color=\"blue500\"\n        class=\"no-results\"\n        size={this.listSizeType()}\n      >\n        <z-icon\n          name=\"multiply-circle\"\n          fill=\"blue500\"\n        />\n        {this.noresultslabel}\n      </z-list-element>\n    );\n  }\n\n  private renderMessage(): HTMLZInputMessageElement {\n    if (boolean(this.message) === false) {\n      return;\n    }\n\n    return (\n      <z-input-message\n        message={boolean(this.message) === true ? undefined : (this.message as string)}\n        status={this.status}\n        class={this.size}\n      />\n    );\n  }\n\n  render(): HTMLDivElement {\n    return (\n      <div class=\"select-wrapper\">\n        {this.renderInput()}\n        {this.renderSelectUl()}\n        {this.renderMessage()}\n      </div>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}