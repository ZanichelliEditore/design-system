{"version":3,"names":["stylesCss","ZPaginationStyle0","ZPagination","this","visiblePages","prototype","setPagesContainerWidth","_visiblePages","split","host","style","setProperty","pagesContainerStyle","window","getComputedStyle","pageButtonWidth","getPropertyValue","concat","setVisiblePages","Math","min","totalPages","onPageChanged","pageChanged","emit","currentPage","scrollToPage","onSplitChanged","edges","onResize","setMobile","mobileMediaQuery","isMobile","matchMedia","matches","getPagesChunks","pages","Array","from","length","_","i","chunks","chunksCount","ceil","index","push","slice","pageBtn","querySelector","scrollIntoView","behavior","block","inline","selectPage","page","max","renderPage","_this","h","class","type","title","onClick","renderEllipsisButton","renderPages","pagesChunks","map","chunk","renderSplitPages","__spreadArray","renderBackButton","disabled","name","renderForwardButton","renderMobile","label","goToPage","role","tabIndex","onSubmit","ev","preventDefault","goToPageValue","InputType","NUMBER","message","onInput","target","value","placeholder","toString","hasclearicon","componentDidLoad","componentDidRender","render","Host","skip","navArrows","onKeyDown","key"],"sources":["src/components/z-pagination/styles.css?tag=z-pagination","src/components/z-pagination/index.tsx"],"sourcesContent":["z-pagination {\n  --z-pagination--page-button-width: 64px;\n  --z-pagination--pages-container-max-width: 100%;\n\n  display: flex;\n  max-width: 100%;\n  flex-flow: column wrap;\n  font-family: var(--font-family-sans);\n  font-weight: var(--font-rg);\n  gap: calc(var(--space-unit) * 2) calc(var(--space-unit) * 4);\n}\n\nz-pagination,\nz-pagination * {\n  box-sizing: border-box;\n}\n\nz-pagination button {\n  height: 100%;\n}\n\nz-pagination z-icon {\n  fill: var(--color-primary01-icon);\n}\n\nz-pagination *:disabled z-icon {\n  fill: var(--color-disabled03);\n}\n\nz-pagination .page-label {\n  margin-right: calc(var(--space-unit) * 3);\n  color: var(--color-default-text);\n}\n\nz-pagination .pagination-bar {\n  display: flex;\n  max-width: 100%;\n  height: 48px;\n  align-items: center;\n}\n\nz-pagination .pagination-bar button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  margin: 0;\n  background-color: var(--color-surface03);\n  color: var(--color-primary01);\n  cursor: pointer;\n  font-family: inherit;\n  font-weight: inherit;\n  transition:\n    background-color 0.15s ease-out,\n    color 0.15s ease-out,\n    border-bottom-color 0.15s ease-out,\n    font-size 0.15s ease-in-out,\n    font-weight 0.15s ease-in-out;\n}\n\nz-pagination .pagination-bar button:focus-visible {\n  background-color: var(--color-hover-surface);\n  box-shadow: inset var(--shadow-focus-primary);\n  outline: none;\n}\n\nz-pagination .pagination-bar .pagination-button {\n  padding: calc(var(--space-unit) * 2);\n  font-weight: var(--font-sb);\n  text-transform: uppercase;\n  white-space: nowrap;\n}\n\nz-pagination .pagination-bar .navigation-button {\n  padding: calc(var(--space-unit) * 2) calc(var(--space-unit) * 1.5);\n}\n\nz-pagination .pagination-bar .pagination-button:disabled,\nz-pagination .pagination-bar .navigation-button:disabled {\n  background-color: var(--color-disabled01);\n  color: var(--color-disabled03);\n  cursor: default;\n  pointer-events: none;\n}\n\nz-pagination .pagination-bar .page-button,\nz-pagination .pagination-bar .ellipsis-button {\n  width: var(--z-pagination--page-button-width);\n}\n\nz-pagination .pages-container {\n  position: relative;\n  display: inline-flex;\n  max-width: 100%;\n  height: 100%;\n  overflow-x: auto;\n  scroll-behavior: smooth;\n  scroll-snap-align: center;\n\n  /* hide scrollbar in Firefox */\n  scrollbar-width: none;\n}\n\nz-pagination .pages-container::-webkit-scrollbar {\n  display: none;\n}\n\nz-pagination .pages-chunk {\n  display: flex;\n  scroll-snap-align: center;\n}\n\nz-pagination .pagination-bar .page-button {\n  padding-top: var(--border-size-large) solid transparent;\n  border-bottom: var(--border-size-large) solid transparent;\n  font-size: var(--font-size-2);\n  font-weight: var(--font-sb);\n}\n\nz-pagination .pagination-bar .page-button:focus-visible {\n  border-bottom-color: var(--color-hover-light);\n}\n\nz-pagination .pagination-bar .page-button[data-current] {\n  border-bottom-color: var(--color-primary01);\n  font-size: var(--font-size-7);\n}\n\nz-pagination .go-to-page {\n  display: flex;\n  flex-direction: column;\n  row-gap: var(--space-unit);\n}\n\nz-pagination .go-to-page .label {\n  color: var(--color-default-text);\n  text-transform: uppercase;\n}\n\nz-pagination .go-to-page .inputs {\n  display: flex;\n  column-gap: var(--space-unit);\n}\n\nz-pagination .go-to-page .inputs z-input {\n  width: calc(var(--space-unit) * 11);\n}\n\nz-pagination .go-to-page .inputs z-input input,\nz-pagination .mobile-go-to-page z-input input {\n  padding: 0 calc(var(--space-unit) * 1.5) !important;\n  appearance: none;\n}\n\nz-pagination .mobile-go-to-page {\n  display: flex;\n  height: 100%;\n  flex: 1 auto;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--color-surface03);\n}\n\nz-pagination .mobile-go-to-page z-input {\n  width: var(--z-pagination--page-button-width);\n  margin-right: var(--space-unit);\n}\n\nz-pagination .mobile-go-to-page z-input input {\n  text-align: center;\n}\n\nz-pagination .mobile-go-to-page z-input input::-webkit-outer-spin-button,\nz-pagination .mobile-go-to-page z-input input::-webkit-inner-spin-button {\n  appearance: none;\n}\n\nz-pagination .mobile-go-to-page > span {\n  font-size: var(--font-size-2);\n}\n\n@media (hover: hover) {\n  z-pagination .pagination-bar button:hover {\n    background-color: var(--color-hover-surface);\n  }\n\n  z-pagination .pagination-bar .page-button:hover {\n    border-bottom-color: var(--color-hover-light);\n  }\n}\n\n@media (min-width: 768px) {\n  z-pagination {\n    --z-pagination--page-button-width: 88px;\n\n    flex-direction: row;\n    align-items: flex-end;\n  }\n\n  z-pagination .pages-container {\n    max-width: var(--z-pagination--pages-container-max-width);\n  }\n}\n","import {Component, Element, Event, EventEmitter, Host, Listen, Prop, State, Watch, h} from \"@stencil/core\";\nimport {InputType} from \"../../beans\";\n\n/**\n * Pagination bar component.\n */\n@Component({\n  tag: \"z-pagination\",\n  styleUrl: \"styles.css\",\n})\nexport class ZPagination {\n  @Element() host: HTMLZPaginationElement;\n\n  /** Pagination label placed before the bar. */\n  @Prop()\n  label?: string;\n\n  /** Enable navigation arrows. */\n  @Prop()\n  navArrows = true;\n\n  /** Total number of pages. Required. */\n  @Prop()\n  totalPages!: number;\n\n  /** Number of pages to skip. */\n  @Prop()\n  skip = 0;\n\n  /** Enable buttons to go to the first and last pages. */\n  @Prop()\n  edges = false;\n\n  /** Number of pages to show left/right of the current, before showing \"load more\" symbol (â€¦). */\n  @Prop()\n  split?: number;\n\n  /** Number of pages to show at a time. If not set, all pages will be shown. */\n  @Prop()\n  visiblePages?: number;\n\n  /** Current page. */\n  @Prop({mutable: true})\n  currentPage = 1;\n\n  /** Whether to show \"go to page\" feature. */\n  @Prop()\n  goToPage: boolean;\n\n  /**\n   * Internal visible pages variable.\n   * Needed to better handle conflicting props like `visiblePages` and `split`.\n   * This state will change based on props values and validation,\n   * keeping original `visiblePages` value intact.\n   */\n  @State()\n  private _visiblePages = this.visiblePages;\n\n  /** Used to hides/change some functionalities on smaller screen sizes */\n  @State()\n  isMobile = false;\n\n  /** Value of the go to page input */\n  @State()\n  goToPageValue = null;\n\n  /** Event emitted when the current page has changed. */\n  @Event()\n  pageChanged: EventEmitter;\n\n  /**\n   * Set the max width of the pages container.\n   */\n  @Watch(\"_visiblePages\")\n  setPagesContainerWidth(): void {\n    if (!this._visiblePages || this.split) {\n      this.host.style.setProperty(\"--z-pagination--pages-container-max-width\", \"100%\");\n\n      return;\n    }\n\n    const pagesContainerStyle = window.getComputedStyle(this.host);\n    const pageButtonWidth = pagesContainerStyle.getPropertyValue(\"--z-pagination--page-button-width\");\n    this.host.style.setProperty(\n      \"--z-pagination--pages-container-max-width\",\n      `calc(${pageButtonWidth} * ${this._visiblePages})`\n    );\n  }\n\n  /**\n   * Set visible pages.\n   * Ensure that the visible pages are always <= the total pages.\n   * If `visiblePages` isn't set, fallback to the total pages.\n   */\n  @Watch(\"visiblePages\")\n  setVisiblePages(): void {\n    this._visiblePages = Math.min(this.visiblePages || this.totalPages, this.totalPages);\n  }\n\n  /**\n   * On page changed.\n   * @emits pageChanged\n   */\n  @Watch(\"currentPage\")\n  onPageChanged(): void {\n    this.pageChanged.emit(this.currentPage);\n    this.scrollToPage();\n  }\n\n  /**\n   * On split changed.\n   * Empty `edges` value. The split feature wins over the pages chunks and edges.\n   */\n  @Watch(\"split\")\n  onSplitChanged(): void {\n    if (this.split) {\n      this.edges = false;\n    }\n  }\n\n  /**\n   * Hide stuff on mobile.\n   */\n  @Listen(\"resize\", {target: \"window\", passive: true})\n  onResize(): void {\n    this.setMobile();\n  }\n\n  /**\n   * Set functionalities according to screen size.\n   */\n  private setMobile(): void {\n    const mobileMediaQuery = \"screen and (max-width: 767px)\";\n    this.isMobile = window.matchMedia(mobileMediaQuery).matches;\n  }\n\n  /**\n   * Get a list of pages chunks, each of `visiblePages` length.\n   * @returns {number[][]}\n   */\n  private getPagesChunks(): number[][] {\n    // array of numbers from 1 to `totalPages`\n    const pages = Array.from({length: this.totalPages}, (_, i) => i + 1);\n\n    const chunks = [];\n    const chunksCount = Math.ceil(pages.length / this._visiblePages);\n    for (let index = 0; index < chunksCount; index++) {\n      chunks.push(pages.slice(index * this._visiblePages, (index + 1) * this._visiblePages));\n    }\n\n    return chunks;\n  }\n\n  /**\n   * Scroll to the left the chunk of pages containing the current page.\n   */\n  private scrollToPage(): void {\n    const pageBtn = this.host.querySelector(`[data-page=\"${this.currentPage}\"]`) as HTMLElement;\n\n    if (!pageBtn) {\n      return;\n    }\n\n    pageBtn.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"nearest\",\n      inline: \"center\",\n    });\n  }\n\n  /**\n   * Select a page.\n   * Do validations on the passed value before assigning it to `currentPage`.\n   * @param {number} page Page number to set\n   */\n  private selectPage(page): void {\n    this.currentPage = Math.min(Math.max(page, 1), this.totalPages);\n  }\n\n  /**\n   * Render page number button.\n   * @param {number} page Page number to render\n   * @returns {HTMLButtonElement}\n   */\n  private renderPage(page): HTMLButtonElement {\n    return (\n      <button\n        class=\"page-button\"\n        type=\"button\"\n        aria-current={this.currentPage === page ? \"page\" : \"false\"}\n        title={`Vai alla pagina ${page}`}\n        data-page={page}\n        data-current={this.currentPage === page}\n        onClick={() => this.selectPage(page)}\n      >\n        {page}\n      </button>\n    );\n  }\n\n  /**\n   * Render split button.\n   * @param {number} page Page to select on click.\n   * @returns {HTMLButtonElement}\n   */\n  private renderEllipsisButton(page): HTMLButtonElement {\n    return (\n      <button\n        class=\"ellipsis-button\"\n        type=\"button\"\n        title={`Vai alla pagina ${page}`}\n        onClick={() => this.selectPage(page)}\n      >\n        â€¦\n      </button>\n    );\n  }\n\n  /**\n   * Render chunked page buttons.\n   * @returns {HTMLDivElement[]}\n   */\n  private renderPages(): HTMLDivElement[] {\n    const pagesChunks = this.getPagesChunks();\n    if (pagesChunks.length <= 0) {\n      return;\n    }\n\n    return pagesChunks.map((chunk) => <div class=\"pages-chunk\">{chunk.map((page) => this.renderPage(page))}</div>);\n  }\n\n  /**\n   * Render page buttons when split feature is enabled.\n   * @returns {HTMLButtonElement[]}\n   */\n  private renderSplitPages(): HTMLButtonElement[] {\n    // left and right split pages, current page, first and last page, left and right ellipsis button\n    if (this.totalPages <= this.split * 2 + 5) {\n      // Too few pages: ellipsis will never be rendered, so let's just render all pages and that's it.\n      return Array.from({length: this.totalPages}, (_, i) => this.renderPage(i + 1));\n    }\n\n    if (this.currentPage <= this.split * 2 + 2) {\n      // Render first (2 * split + 3) pages, ellipsis, then last page.\n      return [\n        ...Array.from({length: this.split * 2 + 3}, (_, i) => this.renderPage(i + 1)),\n        this.renderEllipsisButton(this.split * 2 + 4),\n        this.renderPage(this.totalPages),\n      ];\n    }\n\n    if (this.currentPage > this.split * 2 + 2 && this.currentPage < this.totalPages - this.split * 2 - 1) {\n      // Render first page, ellipsis, current page surrounded by (split) pages both before and after, another ellipsis, then last page.\n      return [\n        this.renderPage(1),\n        this.renderEllipsisButton(this.currentPage - this.split - 1),\n        ...Array.from({length: this.split * 2 + 1}, (_, i) => this.renderPage(this.currentPage - this.split + i)),\n        this.renderEllipsisButton(this.currentPage + this.split + 1),\n        this.renderPage(this.totalPages),\n      ];\n    }\n\n    // Render first page, ellipsis, then last (2 * split + 3) pages.\n    return [\n      this.renderPage(1),\n      this.renderEllipsisButton(this.totalPages - this.split * 2 - 3),\n      ...Array.from({length: this.split * 2 + 3}, (_, i) => this.renderPage(this.totalPages - this.split * 2 - 2 + i)),\n    ];\n  }\n\n  private renderBackButton(): HTMLButtonElement {\n    return (\n      <button\n        class=\"navigation-button\"\n        type=\"button\"\n        title=\"Vai alla pagina precedente\"\n        disabled={this.currentPage === 1}\n        onClick={() => this.selectPage(this.currentPage - 1)}\n      >\n        <z-icon name=\"chevron-left\"></z-icon>\n      </button>\n    );\n  }\n\n  private renderForwardButton(): HTMLButtonElement {\n    return (\n      <button\n        class=\"navigation-button\"\n        type=\"button\"\n        title=\"Vai alla prossima pagina\"\n        disabled={this.currentPage === this.totalPages}\n        onClick={() => this.selectPage(this.currentPage + 1)}\n      >\n        <z-icon name=\"chevron-right\"></z-icon>\n      </button>\n    );\n  }\n\n  private renderMobile(): HTMLElement[] {\n    const pagesChunks = this.getPagesChunks();\n\n    return [\n      this.label && <span class=\"page-label body-1-sb\">{this.label}</span>,\n\n      <div class=\"pagination-bar\">\n        {this.renderBackButton()}\n\n        {!this.goToPage && (\n          <div\n            class=\"pages-container\"\n            role=\"navigation\"\n            tabIndex={-1}\n          >\n            {pagesChunks.length > 0 &&\n              pagesChunks.map((chunk) => <div class=\"pages-chunk\">{chunk.map((page) => this.renderPage(page))}</div>)}\n          </div>\n        )}\n\n        {this.goToPage && (\n          <form\n            class=\"mobile-go-to-page\"\n            onSubmit={(ev) => {\n              ev.preventDefault();\n              this.selectPage(this.goToPageValue);\n            }}\n          >\n            <z-input\n              class=\"go-to-page-input\"\n              type={InputType.NUMBER}\n              min={1}\n              max={this.totalPages}\n              message={false}\n              onInput={(ev: InputEvent) => {\n                this.goToPageValue = (ev.target as HTMLZInputElement).value;\n              }}\n              placeholder={this.currentPage.toString()}\n              hasclearicon={false}\n            ></z-input>\n            <span>{`/${this.totalPages}`}</span>\n          </form>\n        )}\n\n        {this.renderForwardButton()}\n      </div>,\n    ];\n  }\n\n  componentDidLoad(): void {\n    this.setVisiblePages();\n  }\n\n  componentDidRender(): void {\n    if (this.split) {\n      this.edges = false;\n    }\n\n    this.setPagesContainerWidth();\n    this.setMobile();\n  }\n\n  render(): HTMLZPaginationElement {\n    if (this.isMobile) {\n      return <Host>{this.renderMobile()}</Host>;\n    }\n\n    return (\n      <Host>\n        <div class=\"pagination-bar\">\n          {this.label && <span class=\"page-label body-1-sb\">{this.label}</span>}\n\n          {this.edges && (\n            <button\n              class=\"pagination-button\"\n              type=\"button\"\n              title=\"Vai alla pagina 1\"\n              disabled={this.currentPage === 1}\n              onClick={() => this.selectPage(1)}\n            >\n              Pagina 1\n            </button>\n          )}\n\n          {this.skip < this.totalPages && this.skip > 1 && (\n            <button\n              class=\"pagination-button\"\n              type=\"button\"\n              title={`Vai alla pagina ${this.currentPage - this.skip}`}\n              disabled={this.currentPage <= this.skip}\n              onClick={() => this.selectPage(this.currentPage - this.skip)}\n            >\n              -{this.skip}\n            </button>\n          )}\n\n          {this.navArrows && this.renderBackButton()}\n\n          <div\n            class=\"pages-container\"\n            role=\"navigation\"\n            tabIndex={-1}\n          >\n            {this.split ? this.renderSplitPages() : this.renderPages()}\n          </div>\n\n          {this.navArrows && this.renderForwardButton()}\n\n          {this.skip < this.totalPages && this.skip > 1 && (\n            <button\n              class=\"pagination-button\"\n              type=\"button\"\n              title={`Vai alla pagina ${this.currentPage + this.skip}`}\n              disabled={this.currentPage > this.totalPages - this.skip}\n              onClick={() => this.selectPage(this.currentPage + this.skip)}\n            >\n              +{this.skip}\n            </button>\n          )}\n\n          {this.edges && (\n            <button\n              class=\"pagination-button\"\n              type=\"button\"\n              title={`Vai alla pagina ${this.totalPages}`}\n              disabled={this.currentPage === this.totalPages}\n              onClick={() => this.selectPage(this.totalPages)}\n            >\n              Pagina {this.totalPages}\n            </button>\n          )}\n        </div>\n        {this.goToPage && (\n          <div class=\"go-to-page\">\n            <span class=\"label body-5-sb\">Vai a pagina:</span>\n            <div class=\"inputs\">\n              <z-input\n                class=\"go-to-page-input\"\n                type={InputType.NUMBER}\n                min={1}\n                max={this.totalPages}\n                message={false}\n                placeholder=\"2\"\n                hasclearicon={false}\n                onInput={(ev: InputEvent) => {\n                  this.goToPageValue = (ev.target as HTMLZInputElement).value;\n                }}\n                onKeyDown={(ev) => ev.key === \"Enter\" && this.selectPage(this.goToPageValue)}\n              ></z-input>\n              <z-button\n                disabled={!this.goToPageValue}\n                title=\"Vai alla pagina inserita\"\n                onClick={() => this.selectPage(this.goToPageValue)}\n              >\n                vai\n              </z-button>\n            </div>\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}