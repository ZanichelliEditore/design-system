{"version":3,"names":["stylesCss","ZMyzCardAlertStyle0","ZMyzCardAlert","prototype","emitUndoAction","this","undoAction","emit","actionType","type","handleSpaceKeyPress","e","keyCode","preventDefault","handleActionButtonClick","retrieveClass","className","getAlertType","AlertType","SUCCESS","WARNING","render","_this","h","key","class","name","iconname","width","height","contenttext","actiontext","trim","length","role","tabindex","onClick","onKeyPress"],"sources":["src/snowflakes/myz/card/z-myz-card-alert/styles.css?tag=z-myz-card-alert&encapsulation=shadow","src/snowflakes/myz/card/z-myz-card-alert/index.tsx"],"sourcesContent":[":host {\n  position: absolute;\n  z-index: 2;\n  top: 0;\n  left: 0;\n  width: 100%;\n  font-family: var(--font-family-sans);\n  font-weight: var(--font-rg);\n}\n\n:host > z-alert {\n  height: calc(var(--space-unit) * 6);\n}\n\n.relative-container {\n  position: relative;\n  display: grid;\n  align-items: center;\n  padding: 0;\n  grid-column-gap: var(--space-unit);\n  grid-template-columns: 18px auto 46px;\n  grid-template-rows: 1fr;\n  outline: none;\n}\n\n.relative-container::-moz-focus-inner {\n  border: 0;\n}\n\n.alert-external-wrapper.remove-alert {\n  border: var(--border-size-medium) solid var(--color-surface02);\n  border-top: none;\n}\n\n:host div.add-alert {\n  background: var(--color-success-inverse);\n}\n\n:host div.remove-alert {\n  background: var(--color-warning-inverse);\n}\n\n:host div > .content-text {\n  color: var(--color-surface05);\n  font-size: 14px;\n  letter-spacing: 0.16px;\n  line-height: 20px;\n}\n\n:host div > .content-action {\n  height: 20px;\n  color: var(--color-primary01);\n  cursor: pointer;\n  font-size: 12px;\n  font-weight: var(--font-sb);\n  letter-spacing: 0.32px;\n  line-height: 20px;\n}\n\n:host div > z-icon {\n  justify-self: center;\n}\n","import {Component, Event, EventEmitter, Prop, h} from \"@stencil/core\";\nimport {AlertType} from \"../../../../beans\";\n\n@Component({\n  tag: \"z-myz-card-alert\",\n  styleUrl: \"styles.css\",\n  shadow: true,\n})\nexport class ZMyzCardAlert {\n  /** icon name */\n  @Prop()\n  iconname: string;\n\n  /** content text */\n  @Prop()\n  contenttext: string;\n\n  /** action button text */\n  @Prop()\n  actiontext?: string;\n\n  /** alert variant type */\n  @Prop()\n  type: string;\n\n  /** undo action click/keyboard event, returns actionType */\n  @Event()\n  undoAction: EventEmitter;\n\n  private emitUndoAction(): void {\n    this.undoAction.emit({actionType: this.type});\n  }\n\n  private handleSpaceKeyPress(e: KeyboardEvent): void {\n    if (e.keyCode == 32 || e.keyCode == 13) {\n      e.preventDefault();\n      this.emitUndoAction();\n    }\n  }\n\n  private handleActionButtonClick(e: MouseEvent): void {\n    e.preventDefault();\n    this.emitUndoAction();\n  }\n\n  private retrieveClass(): string {\n    let className = \"\";\n    switch (this.type) {\n      case \"add\":\n        className = \"add-alert\";\n        break;\n      case \"remove\":\n        className = \"remove-alert\";\n        break;\n      default:\n        className = \"\";\n        break;\n    }\n\n    return className;\n  }\n\n  private getAlertType(): AlertType {\n    switch (this.type) {\n      case \"add\":\n        return AlertType.SUCCESS;\n      case \"remove\":\n        return AlertType.WARNING;\n      default:\n        return null;\n    }\n  }\n\n  render(): HTMLDivElement {\n    return (\n      <div class={\"alert-external-wrapper \" + this.retrieveClass()}>\n        <z-alert type={this.getAlertType()}>\n          <div class=\"relative-container\">\n            <z-icon\n              name={this.iconname}\n              width={18}\n              height={18}\n              class={this.retrieveClass()}\n            ></z-icon>\n            <span class=\"content-text\">{this.contenttext}</span>\n            {this.actiontext && !!this.actiontext.trim().length && (\n              <span\n                role=\"button\"\n                tabindex=\"0\"\n                class=\"content-action\"\n                onClick={(e: MouseEvent) => {\n                  this.handleActionButtonClick(e);\n                }}\n                onKeyPress={(e: KeyboardEvent) => {\n                  this.handleSpaceKeyPress(e);\n                }}\n              >\n                {this.actiontext}\n              </span>\n            )}\n          </div>\n        </z-alert>\n      </div>\n    );\n  }\n}\n"],"mappings":"0HAAA,IAAMA,UAAY,88BAClB,IAAAC,oBAAeD,U,ICOFE,cAAa,W,yLAqBhBA,EAAAC,UAAAC,eAAA,WACNC,KAAKC,WAAWC,KAAK,CAACC,WAAYH,KAAKI,M,EAGjCP,EAAAC,UAAAO,oBAAA,SAAoBC,GAC1B,GAAIA,EAAEC,SAAW,IAAMD,EAAEC,SAAW,GAAI,CACtCD,EAAEE,iBACFR,KAAKD,gB,GAIDF,EAAAC,UAAAW,wBAAA,SAAwBH,GAC9BA,EAAEE,iBACFR,KAAKD,gB,EAGCF,EAAAC,UAAAY,cAAA,WACN,IAAIC,EAAY,GAChB,OAAQX,KAAKI,MACX,IAAK,MACHO,EAAY,YACZ,MACF,IAAK,SACHA,EAAY,eACZ,MACF,QACEA,EAAY,GACZ,MAGJ,OAAOA,C,EAGDd,EAAAC,UAAAc,aAAA,WACN,OAAQZ,KAAKI,MACX,IAAK,MACH,OAAOS,UAAUC,QACnB,IAAK,SACH,OAAOD,UAAUE,QACnB,QACE,OAAO,K,EAIblB,EAAAC,UAAAkB,OAAA,eAAAC,EAAAjB,KACE,OACEkB,EAAA,OAAAC,IAAA,2CAAKC,MAAO,0BAA4BpB,KAAKU,iBAC3CQ,EAAA,WAAAC,IAAA,2CAASf,KAAMJ,KAAKY,gBAClBM,EAAA,OAAAC,IAAA,2CAAKC,MAAM,sBACTF,EAAA,UAAAC,IAAA,2CACEE,KAAMrB,KAAKsB,SACXC,MAAO,GACPC,OAAQ,GACRJ,MAAOpB,KAAKU,kBAEdQ,EAAA,QAAAC,IAAA,2CAAMC,MAAM,gBAAgBpB,KAAKyB,aAChCzB,KAAK0B,cAAgB1B,KAAK0B,WAAWC,OAAOC,QAC3CV,EAAA,QAAAC,IAAA,2CACEU,KAAK,SACLC,SAAS,IACTV,MAAM,iBACNW,QAAS,SAACzB,GACRW,EAAKR,wBAAwBH,E,EAE/B0B,WAAY,SAAC1B,GACXW,EAAKZ,oBAAoBC,E,GAG1BN,KAAK0B,c,WAzFI,G","ignoreList":[]}