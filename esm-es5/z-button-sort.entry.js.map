{"version":3,"names":["stylesCss","ZButtonSortStyle0","ZButtonSort","prototype","emitButtonSortClick","this","isselected","sortasc","buttonSortClick","emit","buttonid","sortAsc","componentDidLoad","elementHasEllipsis","window","innerWidth","tabletBreakpoint","allowTooltip","setButtonTitle","concat","label","desclabel","ellipsis","offsetWidth","scrollWidth","render","_this","h","key","title","id","class","selected","onClick","ref","el","counter","sortlabelasc","sortlabeldesc","name","width","height"],"sources":["src/components/z-button-sort/styles.css?tag=z-button-sort&encapsulation=shadow","src/components/z-button-sort/index.tsx"],"sourcesContent":["button {\n  display: flex;\n  max-width: 100%;\n  height: 36px;\n  align-items: center;\n  padding: 0 var(--space-unit);\n  border: var(--border-size-medium) solid var(--color-primary01);\n  background-color: var(--color-surface01);\n  border-radius: var(--border-radius);\n  color: var(--color-primary01);\n  cursor: pointer;\n  fill: var(--color-primary01);\n  font-family: var(--font-family-sans);\n  font-size: 14px;\n  font-weight: var(--font-sb);\n  outline: none;\n}\n\nbutton::-moz-focus-inner {\n  border: 0;\n}\n\nbutton:hover {\n  border-color: var(--color-hover-primary);\n  color: var(--color-hover-primary);\n  fill: var(--color-hover-primary);\n}\n\nbutton:focus {\n  border-color: var(--color-primary01);\n  box-shadow: var(--shadow-focus-primary);\n  color: var(--color-primary01);\n  fill: var(--color-primary01);\n}\n\nbutton:active {\n  border-color: var(--color-pressed-primary);\n  box-shadow: var(--shadow-2);\n  color: var(--color-pressed-primary);\n  fill: var(--color-pressed-primary);\n}\n\nbutton.selected {\n  border-color: var(--color-active-primary);\n  background-color: var(--color-active-primary);\n  color: var(--color-text-inverse);\n  fill: var(--color-text-inverse);\n}\n\nbutton > span.ellipsis {\n  overflow: hidden;\n  padding: 0;\n  margin: 0;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\nbutton > span.counter {\n  margin-right: calc(var(--space-unit) * 2);\n  margin-left: calc(var(--space-unit) / 2);\n}\n\nbutton > span.sort {\n  margin-right: calc(var(--space-unit) / 2);\n  white-space: nowrap;\n}\n\nbutton > span {\n  margin-right: calc(var(--space-unit) / 2);\n}\n\n/* Tablet breakpoint */\n@media (min-width: 768px) {\n  button {\n    max-width: 325px;\n  }\n}\n\n/* Desktop breakpoint */\n@media (min-width: 1152px) {\n  button {\n    max-width: 490px;\n  }\n}\n","import {Component, Event, EventEmitter, Prop, State, h} from \"@stencil/core\";\nimport {tabletBreakpoint} from \"../../constants/breakpoints\";\n@Component({\n  tag: \"z-button-sort\",\n  styleUrl: \"styles.css\",\n  shadow: true,\n})\nexport class ZButtonSort {\n  /** id, should be unique */\n  @Prop()\n  buttonid: string;\n\n  /** label content (ascending) */\n  @Prop()\n  label: string;\n\n  /** label content (descending) */\n  @Prop()\n  desclabel?: string;\n\n  /** occurrences counter (optional) */\n  @Prop()\n  counter?: number;\n\n  /** sort label content (ascending) (optional) */\n  @Prop()\n  sortlabelasc?: string = \"A-Z\";\n\n  /** sort label content (descending) (optional) */\n  @Prop()\n  sortlabeldesc?: string = \"Z-A\";\n\n  /** selected flag (optional) */\n  @Prop({mutable: true})\n  isselected?: boolean = false;\n\n  /** sortable flag (optional) */\n  @Prop({mutable: true})\n  sortasc?: boolean = true;\n\n  @State()\n  allowTooltip = false;\n\n  private ellipsis?: HTMLSpanElement;\n\n  /** sorting direction click event, returns `buttonid` and `sortAsc` */\n  @Event()\n  buttonSortClick: EventEmitter;\n\n  private emitButtonSortClick(): void {\n    if (!this.isselected) {\n      this.isselected = true;\n    } else {\n      this.sortasc = !this.sortasc;\n    }\n    this.buttonSortClick.emit({\n      buttonid: this.buttonid,\n      sortAsc: this.sortasc,\n    });\n  }\n\n  componentDidLoad(): void {\n    if (this.elementHasEllipsis() && window.innerWidth > tabletBreakpoint) {\n      this.allowTooltip = true;\n    }\n  }\n\n  private setButtonTitle(): string {\n    return this.allowTooltip ? `${this.sortasc ? this.label : this.desclabel}` : \"\";\n  }\n\n  private elementHasEllipsis(): boolean {\n    return this.ellipsis.offsetWidth < this.ellipsis.scrollWidth;\n  }\n\n  render(): HTMLButtonElement {\n    return (\n      <button\n        title={this.setButtonTitle()}\n        id={this.buttonid}\n        class={{selected: this.isselected}}\n        onClick={() => this.emitButtonSortClick()}\n      >\n        <span\n          ref={(el) => (this.ellipsis = el as HTMLSpanElement)}\n          class=\"ellipsis\"\n        >\n          {!this.sortasc && this.desclabel ? this.desclabel : this.label}\n        </span>\n        <span class=\"counter\">{this.counter && ` (${this.counter})`}</span>\n        <span class=\"sort\">{this.sortasc ? this.sortlabelasc : this.sortlabeldesc}</span>\n        <z-icon\n          name=\"caret-up-down\"\n          width={16}\n          height={16}\n        />\n      </button>\n    );\n  }\n}\n"],"mappings":"uIAAA,IAAMA,UAAY,6hDAClB,IAAAC,kBAAeD,U,ICMFE,YAAW,W,iNAmBE,M,mBAIC,M,gBAIF,M,aAIH,K,kBAGL,K,CAQPA,EAAAC,UAAAC,oBAAA,WACN,IAAKC,KAAKC,WAAY,CACpBD,KAAKC,WAAa,I,KACb,CACLD,KAAKE,SAAWF,KAAKE,O,CAEvBF,KAAKG,gBAAgBC,KAAK,CACxBC,SAAUL,KAAKK,SACfC,QAASN,KAAKE,S,EAIlBL,EAAAC,UAAAS,iBAAA,WACE,GAAIP,KAAKQ,sBAAwBC,OAAOC,WAAaC,iBAAkB,CACrEX,KAAKY,aAAe,I,GAIhBf,EAAAC,UAAAe,eAAA,WACN,OAAOb,KAAKY,aAAe,GAAAE,OAAGd,KAAKE,QAAUF,KAAKe,MAAQf,KAAKgB,WAAc,E,EAGvEnB,EAAAC,UAAAU,mBAAA,WACN,OAAOR,KAAKiB,SAASC,YAAclB,KAAKiB,SAASE,W,EAGnDtB,EAAAC,UAAAsB,OAAA,eAAAC,EAAArB,KACE,OACEsB,EAAA,UAAAC,IAAA,2CACEC,MAAOxB,KAAKa,iBACZY,GAAIzB,KAAKK,SACTqB,MAAO,CAACC,SAAU3B,KAAKC,YACvB2B,QAAS,WAAM,OAAAP,EAAKtB,qBAAL,GAEfuB,EAAA,QAAAC,IAAA,2CACEM,IAAK,SAACC,GAAE,OAAMT,EAAKJ,SAAWa,CAAtB,EACRJ,MAAM,aAEJ1B,KAAKE,SAAWF,KAAKgB,UAAYhB,KAAKgB,UAAYhB,KAAKe,OAE3DO,EAAA,QAAAC,IAAA,2CAAMG,MAAM,WAAW1B,KAAK+B,SAAW,KAAAjB,OAAKd,KAAK+B,QAAO,MACxDT,EAAA,QAAAC,IAAA,2CAAMG,MAAM,QAAQ1B,KAAKE,QAAUF,KAAKgC,aAAehC,KAAKiC,eAC5DX,EAAA,UAAAC,IAAA,2CACEW,KAAK,gBACLC,MAAO,GACPC,OAAQ,K,WAvFM,G","ignoreList":[]}