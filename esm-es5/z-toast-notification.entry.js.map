{"version":3,"names":["window","document","exportName","undefined","VENDOR_PREFIXES","TEST_ELEMENT","createElement","TYPE_FUNCTION","round","Math","abs","now","Date","setTimeoutContext","fn","timeout","context","setTimeout","bindFn","invokeArrayArg","arg","Array","isArray","each","obj","iterator","i","forEach","length","call","hasOwnProperty","deprecate","method","name","message","deprecationMessage","e","Error","stack","replace","log","console","warn","apply","this","arguments","assign","Object","target","TypeError","output","index","source","nextKey","extend","dest","src","merge","keys","inherit","child","base","properties","baseP","prototype","childP","create","constructor","_super","boundFn","boolOrFn","val","args","ifUndefined","val1","val2","addEventListeners","types","handler","splitStr","type","addEventListener","removeEventListeners","removeEventListener","hasParent","node","parent","parentNode","inStr","str","find","indexOf","trim","split","inArray","findByKey","toArray","slice","uniqueArray","key","sort","results","values","push","sortUniqueArray","a","b","prefixed","property","prefix","prop","camelProp","toUpperCase","_uniqueId","uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","MOBILE_REGEX","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","test","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_PEN","INPUT_TYPE_MOUSE","INPUT_TYPE_KINECT","COMPUTE_INTERVAL","INPUT_START","INPUT_MOVE","INPUT_END","INPUT_CANCEL","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","PROPS_XY","PROPS_CLIENT_XY","Input","manager","callback","self","options","inputTarget","domHandler","ev","enable","init","evEl","evTarget","evWin","destroy","createInputInstance","Type","inputClass","PointerEventInput","TouchInput","MouseInput","TouchMouseInput","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","isFinal","session","computeInputData","emit","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","deltaTime","angle","getAngle","distance","getDistance","computeDeltaXY","offsetDirection","getDirection","deltaX","deltaY","overallVelocity","getVelocity","overallVelocityX","x","overallVelocityY","y","scale","getScale","rotation","getRotation","maxPointers","computeIntervalInputData","srcEvent","offset","offsetDelta","prevDelta","last","lastInterval","velocity","velocityX","velocityY","direction","v","clientX","clientY","p1","p2","props","sqrt","atan2","PI","start","end","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MOUSE_ELEMENT_EVENTS","MOUSE_WINDOW_EVENTS","pressed","MEhandler","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","MSPointerEvent","PointerEvent","store","pointerEvents","PEhandler","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","splice","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","SingleTouchInput","started","TEhandler","touches","normalizeSingleTouches","all","changed","changedTouches","concat","TOUCH_INPUT_MAP","TOUCH_TARGET_EVENTS","targetIds","MTEhandler","getTouches","allTouches","identifier","targetTouches","changedTargetTouches","filter","touch","DEDUP_TIMEOUT","DEDUP_DISTANCE","mouse","primaryTouch","lastTouches","TMEhandler","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","recordTouches","isSyntheticEvent","eventData","setLastTouch","lastTouch","lts","removeLastTouch","t","dx","dy","PREFIXED_TOUCH_ACTION","style","NATIVE_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_AUTO","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","getTouchActionProps","TouchAction","value","set","compute","actions","update","touchAction","recognizers","recognizer","getTouchAction","cleanTouchActions","join","preventDefaults","prevented","preventDefault","hasNone","hasPanY","hasPanX","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","touchMap","cssSupports","CSS","supports","STATE_POSSIBLE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","STATE_FAILED","Recognizer","defaults","id","state","simultaneous","requireFail","recognizeWith","otherRecognizer","getRecognizerByNameIfManager","dropRecognizeWith","requireFailure","dropRequireFailure","hasRequireFailures","canRecognizeWith","event","stateStr","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","directionStr","get","AttrRecognizer","attrTest","optionPointers","isRecognized","isValid","PanRecognizer","pX","pY","threshold","directionTest","hasMoved","PinchRecognizer","inOut","PressRecognizer","_timer","_input","time","validPointers","validMovement","validTime","clearTimeout","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","Hammer","preset","Manager","VERSION","domEvents","cssProps","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","STOP","FORCED_STOP","handlers","oldCssProps","toggleCssProps","item","add","stop","force","stopped","curRecognizer","existing","remove","on","events","off","data","triggerDomEvent","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","Tap","Pan","Swipe","Pinch","Rotate","Press","freeGlobal","define","amd","module","exports","stylesCss","ZToastNotificationStyle0","ZToastNotification","isCloseEventCalled","watchPropIsdraggable","newValue","sliderManager","watchPropAutoclose","timeoutHandle","startClosingTimeout","watchPropPauseonfocusloss","autoclose","visibilityChangeEventHandler","emitToastClose","cssClass","elapsedTime","hostElement","classList","toastClose","componentWillLoad","isMobile","innerWidth","mobileBreakpoint","validateAutoclose","percentage","componentDidLoad","isTextLong","detectWrap","toastText","offsetHeight","startTime","pauseonfocusloss","isdraggable","handleSlideOutDragAnimation","visibilityState","onBlur","onFocus","closebutton","error","mapSlideOutClass","transition","ToastNotificationTransition","SLIDE_IN_DOWN","SLIDE_OUT_UP","SLIDE_IN_UP","SLIDE_OUT_DOWN","SLIDE_IN_LEFT","SLIDE_OUT_RIGHT","SLIDE_IN_RIGHT","SLIDE_OUT_LEFT","calculateDraggedPercentage","bounding","getBoundingClientRect","width","_this","translateObj","translate","translateBack","opacity","transform","draggablepercentage","parentWidth","container","offsetWidth","children","totalWidth","renderText","h","ref","el","class","heading","renderButton","renderCloseIcon","tabIndex","height","onClick","onKeyPress","keyCode","renderContainer","_a","renderMobileContainer","render","Host","onAnimationEnd","animationName","includes","removeChild"],"sources":["node_modules/hammerjs/hammer.js","src/components/z-toast-notification/styles.css?tag=z-toast-notification&encapsulation=shadow","src/components/z-toast-notification/index.tsx"],"sourcesContent":["/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n",":host {\n  display: inline-block;\n  width: 100vw;\n  min-width: 200px;\n\n  --percentuale: 0;\n}\n\n:host(.slide-in-left) {\n  animation: slideinleft 1s cubic-bezier(0.25, 0.1, 0.25, 0.1);\n  animation-fill-mode: forwards;\n}\n\n:host(.slide-in-right) {\n  animation: slideinright 1s cubic-bezier(0.25, 0.1, 0.25, 0.1);\n  animation-fill-mode: forwards;\n}\n\n:host(.slide-in-down) {\n  animation: slideindown 1s cubic-bezier(0.25, 0.1, 0.25, 0.1);\n  animation-fill-mode: forwards;\n}\n\n:host(.slide-in-up) {\n  animation: slideinup 1s cubic-bezier(0.25, 0.1, 0.25, 0.1);\n  animation-fill-mode: forwards;\n}\n\n:host(.slide-out-left) {\n  animation: slideoutleft 0.5s cubic-bezier(0.25, 0.1, 0.25, 0.1);\n  animation-fill-mode: forwards;\n}\n\n:host(.slide-out-right) {\n  animation: slideoutright 0.5s cubic-bezier(0.25, 0.1, 0.25, 0.1);\n  animation-fill-mode: forwards;\n}\n\n:host(.slide-out-down) {\n  animation: slideoutdown 0.5s cubic-bezier(0.25, 0.1, 0.25, 0.1);\n  animation-fill-mode: forwards;\n}\n\n:host(.slide-out-up) {\n  animation: slideoutup 0.5s cubic-bezier(0.25, 0.1, 0.25, 0.1);\n  animation-fill-mode: forwards;\n}\n\n@keyframes slideinleft {\n  0% {\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(0);\n  }\n}\n\n@keyframes slideinright {\n  0% {\n    transform: translateX(-100%);\n  }\n\n  100% {\n    transform: translateX(0);\n  }\n}\n\n@keyframes slideinup {\n  0% {\n    opacity: 0;\n    transform: translateY(100%);\n  }\n\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes slideindown {\n  0% {\n    opacity: 0;\n    transform: translateY(-100%);\n  }\n\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes slideoutleft {\n  0% {\n    /* stylelint-disable-next-line alpha-value-notation */\n    opacity: calc(100% - var(--percentuale));\n    transform: translateX(var(--percentuale));\n  }\n\n  100% {\n    opacity: 0;\n    transform: translateX(-100%);\n  }\n}\n\n@keyframes slideoutright {\n  0% {\n    /* stylelint-disable-next-line alpha-value-notation */\n    opacity: calc(100% - var(--percentuale));\n    transform: translateX(var(--percentuale));\n  }\n\n  100% {\n    opacity: 0;\n    transform: translateX(100%);\n  }\n}\n\n@keyframes slideoutup {\n  0% {\n    opacity: 1;\n    transform: translateY(var(--percentuale));\n  }\n\n  100% {\n    opacity: 0;\n    transform: translateY(-100%);\n  }\n}\n\n@keyframes slideoutdown {\n  0% {\n    opacity: 1;\n    transform: translateY(var(--percentuale));\n  }\n\n  100% {\n    opacity: 0;\n    transform: translateY(100%);\n  }\n}\n\n:host > #external-container {\n  display: flex;\n  min-height: 52px;\n  box-sizing: border-box;\n  align-items: center;\n  justify-content: space-between;\n  padding: calc(var(--space-unit) * 1) calc(var(--space-unit) * 2);\n  border-radius: 4px;\n  box-shadow: var(--shadow-3);\n  font-family: var(--font-family-sans);\n  font-size: 14px;\n  font-weight: var(--font-rg);\n  letter-spacing: 0.16px;\n}\n\n:host > #external-container.mobile-wrapped > #icon {\n  align-self: flex-start;\n}\n\n:host > #external-container.several-lines-padding {\n  padding: calc(var(--space-unit) * 2);\n}\n\n:host > #external-container > #flex-container {\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: space-between;\n}\n\n:host > #external-container #text {\n  margin-right: calc(var(--space-unit) * 2);\n  color: var(--color-white);\n  letter-spacing: 0.16px;\n  line-height: 20px;\n  text-align: left;\n}\n\n:host > #external-container #text > .title {\n  margin-right: 4px;\n  font-weight: 600;\n}\n\n:host > #external-container.mobile-wrapped #button ::slotted(z-button) {\n  margin-top: calc(var(--space-unit) * 2);\n}\n\n:host > #external-container #icon {\n  margin-left: calc(var(--space-unit) * 2);\n  cursor: pointer;\n  fill: var(--color-white);\n}\n\nz-icon {\n  display: inline-block;\n  vertical-align: 0;\n}\n\nz-icon:focus {\n  padding: calc(var(--space-unit) / 4);\n  border-radius: 50%;\n  box-shadow: var(--shadow-focus-primary);\n  outline: none !important;\n}\n\n:host > #external-container.dark {\n  background: var(--gray800);\n}\n\n:host > #external-container.light {\n  background: var(--color-background);\n}\n\n:host > #external-container.light #icon,\n:host > #external-container.warning #text,\n:host > #external-container.warning #icon {\n  fill: var(--color-primary01-icon);\n}\n\n:host > #external-container.light #text,\n:host > #external-container.warning #text {\n  color: var(--gray800);\n}\n\n:host > #external-container.accent {\n  background: var(--color-primary01);\n}\n\n:host > #external-container.error {\n  background: var(--color-error-default);\n}\n\n:host > #external-container.success {\n  background: var(--color-success-default);\n}\n\n:host > #external-container.warning {\n  background: var(--color-warning-default);\n}\n\n/* Tablet breakpoint */\n@media only screen and (min-width: 768px) {\n  :host {\n    width: unset;\n    max-width: 50vw;\n  }\n\n  :host > #external-container > #flex-container {\n    flex-wrap: nowrap;\n  }\n\n  :host > #external-container #text {\n    width: 100%;\n  }\n}\n\n/* Wide breakpoint */\n@media only screen and (min-width: 1366px) {\n  :host {\n    width: unset;\n    max-width: 33vw;\n  }\n}\n","import {Component, Element, Event, EventEmitter, Host, Prop, State, Watch, h} from \"@stencil/core\";\nimport {ToastNotification, ToastNotificationTransition} from \"../../beans\";\nimport {mobileBreakpoint} from \"../../constants/breakpoints\";\n\nimport Hammer from \"hammerjs\";\n\n@Component({\n  tag: \"z-toast-notification\",\n  styleUrl: \"styles.css\",\n  shadow: true,\n})\nexport class ZToastNotification {\n  @Element() hostElement: HTMLZToastNotificationElement;\n\n  /** toast notification's title */\n  @Prop()\n  heading?: string;\n\n  /** toast notification's message */\n  @Prop()\n  message: string;\n\n  /** toggles closing button rendering */\n  @Prop()\n  closebutton: boolean;\n\n  /** toast notification closing timeout (ms) */\n  @Prop()\n  autoclose?: number;\n\n  /** toast notification autoclose can be paused */\n  @Prop()\n  pauseonfocusloss?: boolean = true;\n\n  /** toast notification type: dark, light, accent, error, success, warning */\n  @Prop()\n  type?: ToastNotification;\n\n  /** toast notification can be draggable*/\n  @Prop()\n  isdraggable?: boolean = true;\n\n  /** toast notification draggable percentage*/\n  @Prop()\n  draggablepercentage?: number = 80;\n\n  /** toast notification animation type: slide-in-left, slide-in-right, slide-in-down, slide-in-up*/\n  @Prop()\n  transition?: ToastNotificationTransition;\n\n  @State()\n  percentage: number;\n\n  private isTextLong: boolean;\n\n  private container!: HTMLElement;\n\n  private toastText!: HTMLElement;\n\n  private sliderManager: HammerManager;\n\n  private elapsedTime: number;\n\n  private timeoutHandle: number;\n\n  private startTime: number;\n\n  private isMobile: boolean;\n\n  private isCloseEventCalled = false;\n\n  @Watch(\"isdraggable\")\n  watchPropIsdraggable(newValue: boolean): void {\n    if (newValue) {\n      this.sliderManager.get(\"pan\").set({enable: true});\n    } else {\n      this.sliderManager.get(\"pan\").set({enable: false});\n    }\n  }\n\n  @Watch(\"autoclose\")\n  watchPropAutoclose(newValue: number): void {\n    clearTimeout(this.timeoutHandle);\n    this.startClosingTimeout(newValue);\n  }\n\n  @Watch(\"pauseonfocusloss\")\n  watchPropPauseonfocusloss(newValue: boolean): void {\n    if (this.autoclose) {\n      if (newValue) {\n        document.addEventListener(\"visibilitychange\", this.visibilityChangeEventHandler);\n      } else {\n        document.removeEventListener(\"visibilitychange\", this.visibilityChangeEventHandler);\n      }\n    }\n  }\n\n  /** notification close event */\n  @Event()\n  toastClose: EventEmitter;\n\n  private emitToastClose(cssClass: string): void {\n    this.timeoutHandle = null;\n    this.elapsedTime = null;\n    this.hostElement.classList.add(cssClass);\n    this.toastClose.emit();\n  }\n\n  componentWillLoad(): void {\n    this.isMobile = window.innerWidth <= mobileBreakpoint;\n    this.validateAutoclose();\n    this.percentage = 0;\n  }\n\n  componentDidLoad(): void {\n    this.isTextLong = this.detectWrap() || this.toastText.offsetHeight > 20;\n    this.startTime = Date.now();\n    if (this.autoclose && this.pauseonfocusloss) {\n      document.addEventListener(\"visibilitychange\", this.visibilityChangeEventHandler);\n    }\n\n    this.isdraggable && this.handleSlideOutDragAnimation();\n  }\n\n  private visibilityChangeEventHandler(): void {\n    if (document.visibilityState === \"hidden\") {\n      this.timeoutHandle && this.onBlur();\n    } else {\n      this.elapsedTime && this.onFocus();\n    }\n  }\n\n  private validateAutoclose(): void {\n    if (!this.autoclose && !this.closebutton) {\n      console.error(\"At least one between autoclose and closebutton must be present\");\n    }\n  }\n\n  private mapSlideOutClass(): ToastNotificationTransition {\n    switch (this.transition) {\n      case ToastNotificationTransition.SLIDE_IN_DOWN:\n        return ToastNotificationTransition.SLIDE_OUT_UP;\n      case ToastNotificationTransition.SLIDE_IN_UP:\n        return ToastNotificationTransition.SLIDE_OUT_DOWN;\n      case ToastNotificationTransition.SLIDE_IN_LEFT:\n        return ToastNotificationTransition.SLIDE_OUT_RIGHT;\n      case ToastNotificationTransition.SLIDE_IN_RIGHT:\n        return ToastNotificationTransition.SLIDE_OUT_LEFT;\n    }\n  }\n\n  private calculateDraggedPercentage(e): number {\n    const bounding = this.hostElement.getBoundingClientRect();\n\n    return Math.round((100 * e.deltaX) / bounding.width);\n  }\n\n  private handleSlideOutDragAnimation(): void {\n    this.sliderManager = new Hammer(this.hostElement);\n    this.sliderManager.get(\"pan\").set({\n      direction: Hammer.DIRECTION_HORIZONTAL,\n    });\n\n    this.sliderManager.on(\"pan\", (e) => {\n      this.percentage = this.calculateDraggedPercentage(e);\n      this.hostElement.style.transition = \"none\";\n      this.hostElement.classList.remove(this.transition);\n      const translateObj = {\n        translate: `translateX(${this.percentage}%)`,\n        translateBack: \"translateX(0)\",\n      };\n\n      this.hostElement.style.opacity = `${100 - Math.abs(this.percentage)}%`;\n      if (e.eventType === Hammer.DIRECTION_LEFT || e.eventType === Hammer.DIRECTION_RIGHT) {\n        this.hostElement.style.transform = translateObj.translate;\n        if (Math.abs(this.percentage) > this.draggablepercentage && !this.isCloseEventCalled) {\n          this.isCloseEventCalled = true;\n          this.emitToastClose(e.direction === Hammer.DIRECTION_LEFT ? \"slide-out-left\" : \"slide-out-right\");\n        }\n      }\n\n      if (e.isFinal && Math.abs(this.percentage) < this.draggablepercentage) {\n        this.hostElement.style.transform = translateObj.translateBack;\n        this.hostElement.style.transition = \"all 1s\";\n        this.hostElement.style.opacity = \"100%\";\n        this.percentage = 0;\n      }\n    });\n  }\n\n  private onFocus(): void {\n    let time = this.autoclose;\n    if (this.elapsedTime) {\n      time = this.autoclose - this.elapsedTime;\n    }\n    if (time > 0) {\n      this.startClosingTimeout(time);\n    }\n  }\n\n  private onBlur(): void {\n    this.elapsedTime = Date.now() - this.startTime;\n    clearTimeout(this.timeoutHandle);\n  }\n\n  private startClosingTimeout(time: number): void {\n    this.timeoutHandle = window.setTimeout(() => this.emitToastClose(this.mapSlideOutClass()), time);\n  }\n\n  private detectWrap(): boolean {\n    const parentWidth = this.container.offsetWidth;\n    const children = this.container.children;\n    let totalWidth = 0;\n\n    for (let i = 0; i < children.length; i++) {\n      totalWidth += (children[i] as HTMLElement).offsetWidth;\n    }\n\n    return totalWidth > parentWidth;\n  }\n\n  private renderText(): HTMLDivElement {\n    return (\n      <div\n        id=\"text\"\n        ref={(el) => (this.toastText = el as HTMLElement)}\n      >\n        <span class=\"title\">{this.heading}</span>\n        <span class=\"message\">{this.message}</span>\n      </div>\n    );\n  }\n\n  private renderButton(): HTMLDivElement {\n    return (\n      <div id=\"button\">\n        <slot name=\"button\" />\n      </div>\n    );\n  }\n\n  private renderCloseIcon(): HTMLDivElement {\n    if (!this.closebutton) {\n      return;\n    }\n\n    return (\n      <div id=\"icon\">\n        <z-icon\n          tabIndex={0}\n          name=\"multiply-circled\"\n          width={15}\n          height={15}\n          onClick={() => this.emitToastClose(this.mapSlideOutClass())}\n          onKeyPress={(e) => {\n            if (e.keyCode == 32 || e.keyCode == 13) {\n              e.preventDefault();\n              this.emitToastClose(this.mapSlideOutClass());\n            }\n          }}\n        />\n      </div>\n    );\n  }\n\n  private renderContainer(): HTMLDivElement {\n    return (\n      <div\n        tabIndex={0}\n        id=\"external-container\"\n        class={{\n          [this.type]: !!this.type,\n          \"several-lines-padding\": this.isTextLong,\n        }}\n        ref={(el) => (this.container = el as HTMLElement)}\n      >\n        {this.renderText()}\n        {this.renderButton()}\n        {this.renderCloseIcon()}\n      </div>\n    );\n  }\n\n  private renderMobileContainer(): HTMLDivElement {\n    return (\n      <div\n        id=\"external-container\"\n        class={{\n          [this.type]: !!this.type,\n          \"several-lines-padding\": this.isTextLong,\n          \"mobile-wrapped\": this.isTextLong,\n        }}\n      >\n        <div\n          id=\"flex-container\"\n          ref={(el) => (this.container = el as HTMLElement)}\n        >\n          {this.renderText()}\n          {this.renderButton()}\n        </div>\n        {this.renderCloseIcon()}\n      </div>\n    );\n  }\n\n  render(): HTMLZToastNotificationElement {\n    return (\n      <Host\n        style={{\n          \"--percentuale\": `${this.percentage}%`,\n        }}\n        class={this.transition ? this.transition : ToastNotificationTransition.SLIDE_IN_DOWN}\n        onAnimationEnd={(e: AnimationEvent) => {\n          if (this.autoclose && e.animationName.includes(\"slidein\")) {\n            this.startClosingTimeout(this.autoclose);\n          }\n          if (e.animationName.includes(\"slideout\")) {\n            this.hostElement.parentNode.removeChild(this.hostElement);\n          }\n        }}\n      >\n        {this.isMobile ? this.renderMobileContainer() : this.renderContainer()}\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}