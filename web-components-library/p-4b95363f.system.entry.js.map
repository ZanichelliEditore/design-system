{"version":3,"names":["stylesCss","ZInfoRevealStyle0","ZInfoReveal","exports","InfoRevealPosition","BOTTOM_RIGHT","ControlSize","BIG","class_1","prototype","adjustPanelPosition","this","open","panel","rect","host","getBoundingClientRect","gridMargin","parseInt","getComputedStyle","document","documentElement","getPropertyValue","pageWidth","offsetWidth","availableSpace","Math","round","position","includes","left","right","style","maxWidth","concat","togglePanel","closePanel","handleEscapeKey","event","key","render","_this","h","Host","class","type","onClick","bind","label","ariaLabel","undefined","icon","name","id","ref","el","hidden"],"sources":["src/components/z-info-reveal/styles.css?tag=z-info-reveal&encapsulation=shadow","src/components/z-info-reveal/index.tsx"],"sourcesContent":[":host {\n  --z-info-reveal-panel-width: 384px; /* defaults half the size of the mobile breakpoint */\n  --trigger-size: 44px;\n\n  position: relative;\n}\n\n:host * {\n  box-sizing: border-box;\n}\n\nbutton {\n  --trigger-icon-size: calc(var(--trigger-size) / 2);\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n  font-family: inherit;\n  letter-spacing: inherit;\n}\n\nbutton:focus:focus-visible {\n  box-shadow: var(--shadow-focus-primary);\n  outline: none;\n}\n\n.z-info-reveal-trigger {\n  min-width: var(--trigger-size);\n  height: var(--trigger-size);\n  padding: calc((var(--trigger-size) - var(--trigger-icon-size)) / 2);\n  background-color: var(--color-surface05);\n  border-radius: var(--border-radius);\n  color: var(--color-text-inverse);\n  column-gap: var(--space-unit);\n  font-weight: var(--font-sb);\n  line-height: 1rem;\n}\n\n:host([size=\"big\"]) .z-info-reveal-trigger {\n  font-size: var(--font-size-2);\n}\n\n:host([size=\"small\"]) .z-info-reveal-trigger {\n  --trigger-size: 36px;\n\n  font-size: var(--font-size-2);\n}\n\n:host([size=\"x-small\"]) .z-info-reveal-trigger {\n  --trigger-size: 32px;\n\n  padding: var(--space-unit);\n  font-size: var(--font-size-1);\n}\n\n:host > .z-info-reveal-trigger z-icon {\n  --z-icon-width: var(--trigger-icon-size);\n  --z-icon-height: var(--trigger-icon-size);\n\n  display: flex;\n  fill: var(--color-inverse-icon);\n}\n\n:host([size=\"small\"]) > .z-info-reveal-trigger z-icon {\n  --trigger-icon-size: 18px;\n}\n\n:host([size=\"x-small\"]) > .z-info-reveal-trigger z-icon {\n  --trigger-icon-size: 16px;\n}\n\n.z-info-reveal-panel {\n  position: absolute;\n  display: flex;\n  width: var(--z-info-reveal-panel-width);\n  height: fit-content;\n  align-items: flex-start;\n  padding: calc(var(--space-unit) * 1.5);\n  background-color: var(--color-surface05);\n  border-radius: var(--border-radius);\n  box-shadow: var(--shadow-4);\n  color: var(--color-text-inverse);\n  column-gap: var(--space-unit);\n}\n\n.z-info-reveal-panel[hidden] {\n  display: none;\n}\n\n:host([position=\"top_left\"]) .z-info-reveal-panel,\n:host([position=\"top_right\"]) .z-info-reveal-panel {\n  top: 0;\n}\n\n:host([position=\"bottom_left\"]) .z-info-reveal-panel,\n:host([position=\"bottom_right\"]) .z-info-reveal-panel {\n  bottom: 0;\n}\n\n:host([position=\"top_right\"]) .z-info-reveal-panel,\n:host([position=\"bottom_right\"]) .z-info-reveal-panel {\n  right: 0;\n}\n\n:host([position=\"top_left\"]) .z-info-reveal-panel,\n:host([position=\"bottom_left\"]) .z-info-reveal-panel {\n  left: 0;\n}\n\n.z-info-reveal-panel .z-info-reveal-close {\n  margin-left: auto;\n}\n\n.z-info-reveal-panel z-icon {\n  fill: var(--color-inverse-icon);\n}\n\n@media (max-width: 767px) {\n  .z-info-reveal-panel {\n    position: fixed;\n    top: auto !important;\n    bottom: auto !important;\n    left: var(--grid-margin) !important;\n    width: calc(100% - (var(--grid-margin) * 2)) !important;\n    max-width: none !important;\n    margin-top: calc(var(--trigger-size) * -1);\n  }\n}\n","import {Component, Element, Host, Listen, Prop, State, Watch, h} from \"@stencil/core\";\nimport {ControlSize, InfoRevealPosition} from \"../../beans\";\n\n/**\n * Info reveal component.\n *\n * @slot - content of the info panel.\n * @cssprop --z-info-reveal-panel-width - Width of the info panel.\n */\n@Component({\n  tag: \"z-info-reveal\",\n  styleUrl: \"styles.css\",\n  shadow: true,\n})\nexport class ZInfoReveal {\n  /** Name of the icon for the trigger button */\n  @Prop()\n  icon? = \"informationsource\";\n\n  /**\n   * The position of the z-info-reveal in the page. This helps to correctly place the info panel.\n   * The panel will grow in the opposite direction of the position.\n   * For example, with the default position `BOTTOM_RIGHT`, the panel will grow vertically upwards and horizontally to the left.\n   */\n  @Prop({reflect: true})\n  position?: InfoRevealPosition = InfoRevealPosition.BOTTOM_RIGHT;\n\n  /** Label of the trigger button. */\n  @Prop()\n  label?: string;\n\n  /** Aria label of the trigger button. It will be only used when `label` prop is empty. */\n  @Prop()\n  ariaLabel = \"Apri pannello informazioni\";\n\n  /** Size of the trigger button */\n  @Prop({reflect: true})\n  size?: ControlSize = ControlSize.BIG;\n\n  /** Whether the info panel is open. */\n  @State()\n  open = false;\n\n  @Element() host: HTMLZInfoRevealElement;\n\n  private panel: HTMLDivElement;\n\n  /**\n   * Adjust the position of the info panel to prevent exiting the viewport.\n   */\n  @Watch(\"position\")\n  @Watch(\"open\")\n  @Listen(\"resize\", {target: \"window\", passive: true})\n  adjustPanelPosition(): void {\n    if (!this.open || !this.panel) {\n      return;\n    }\n\n    const rect = this.host.getBoundingClientRect();\n    const gridMargin = parseInt(getComputedStyle(document.documentElement).getPropertyValue(\"--grid-margin\"), 10);\n    const pageWidth = document.documentElement.offsetWidth;\n    // Available space for the info panel to grow towards the edge of the page, based on the `position` prop.\n    const availableSpace = Math.round(\n      (this.position.includes(\"left\") ? pageWidth - rect.left : rect.right) - gridMargin\n    );\n    this.panel.style.maxWidth = `${availableSpace}px`;\n  }\n\n  /**\n   * Toggle the open state of the info panel.\n   */\n  private togglePanel(): void {\n    this.open = !this.open;\n  }\n\n  /**\n   * Close the info panel.\n   */\n  private closePanel(): void {\n    this.open = false;\n  }\n\n  @Listen(\"keydown\", {target: \"window\", capture: true})\n  handleEscapeKey(event: KeyboardEvent): void {\n    if (event.key === \"Escape\" && this.open) {\n      this.closePanel();\n    }\n  }\n\n  render(): HTMLZInfoRevealElement {\n    return (\n      <Host open={this.open}>\n        <button\n          class=\"z-info-reveal-trigger\"\n          type=\"button\"\n          onClick={this.togglePanel.bind(this)}\n          aria-label={!this.label ? this.ariaLabel : undefined}\n          aria-expanded={this.open ? \"true\" : \"false\"}\n          aria-controls=\"z-info-reveal-panel\"\n        >\n          {this.icon && <z-icon name={this.icon} />}\n          {this.label && <span class=\"z-info-reveal-label\">{this.label}</span>}\n        </button>\n        <div\n          class=\"z-info-reveal-panel\"\n          id=\"z-info-reveal-panel\"\n          ref={(el) => (this.panel = el)}\n          hidden={!this.open}\n        >\n          <slot></slot>\n          <button\n            class=\"z-info-reveal-close\"\n            type=\"button\"\n            onClick={this.closePanel.bind(this)}\n            aria-label=\"Chiudi pannello informazioni\"\n          >\n            <z-icon name=\"multiply\" />\n          </button>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"gNAAA,IAAMA,EAAY,g6FAClB,IAAAC,EAAeD,E,ICaFE,EAAWC,EAAA,2B,kCAGd,oB,cAQwBC,EAAmBC,a,oCAQvC,6B,UAISC,EAAYC,I,UAI1B,K,CAYPC,EAAAC,UAAAC,oBAAA,WACE,IAAKC,KAAKC,OAASD,KAAKE,MAAO,CAC7B,M,CAGF,IAAMC,EAAOH,KAAKI,KAAKC,wBACvB,IAAMC,EAAaC,SAASC,iBAAiBC,SAASC,iBAAiBC,iBAAiB,iBAAkB,IAC1G,IAAMC,EAAYH,SAASC,gBAAgBG,YAE3C,IAAMC,EAAiBC,KAAKC,OACzBhB,KAAKiB,SAASC,SAAS,QAAUN,EAAYT,EAAKgB,KAAOhB,EAAKiB,OAASd,GAE1EN,KAAKE,MAAMmB,MAAMC,SAAW,GAAAC,OAAGT,EAAc,K,EAMvCjB,EAAAC,UAAA0B,YAAA,WACNxB,KAAKC,MAAQD,KAAKC,I,EAMZJ,EAAAC,UAAA2B,WAAA,WACNzB,KAAKC,KAAO,K,EAIdJ,EAAAC,UAAA4B,gBAAA,SAAgBC,GACd,GAAIA,EAAMC,MAAQ,UAAY5B,KAAKC,KAAM,CACvCD,KAAKyB,Y,GAIT5B,EAAAC,UAAA+B,OAAA,eAAAC,EAAA9B,KACE,OACE+B,EAACC,EAAI,CAAAJ,IAAA,2CAAC3B,KAAMD,KAAKC,MACf8B,EAAA,UAAAH,IAAA,2CACEK,MAAM,wBACNC,KAAK,SACLC,QAASnC,KAAKwB,YAAYY,KAAKpC,MAAK,cACvBA,KAAKqC,MAAQrC,KAAKsC,UAAYC,UAAS,gBACrCvC,KAAKC,KAAO,OAAS,QAAO,gBAC7B,uBAEbD,KAAKwC,MAAQT,EAAA,UAAAH,IAAA,2CAAQa,KAAMzC,KAAKwC,OAChCxC,KAAKqC,OAASN,EAAA,QAAAH,IAAA,2CAAMK,MAAM,uBAAuBjC,KAAKqC,QAEzDN,EAAA,OAAAH,IAAA,2CACEK,MAAM,sBACNS,GAAG,sBACHC,IAAK,SAACC,GAAE,OAAMd,EAAK5B,MAAQ0C,CAAnB,EACRC,QAAS7C,KAAKC,MAEd8B,EAAA,QAAAH,IAAA,6CACAG,EAAA,UAAAH,IAAA,2CACEK,MAAM,sBACNC,KAAK,SACLC,QAASnC,KAAKyB,WAAWW,KAAKpC,MAAK,aACxB,gCAEX+B,EAAA,UAAAH,IAAA,2CAAQa,KAAK,e,wRAtGD,I","ignoreList":[]}