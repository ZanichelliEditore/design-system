{"version":3,"names":["stylesCss","ZInfoBoxStyle0","ZInfoBox","emitInfoBoxClose","this","infoBoxClose","emit","boxid","render","h","key","id","name","isclosable","onClick"],"sources":["src/components/notification/z-info-box/styles.css?tag=z-info-box&encapsulation=shadow","src/components/notification/z-info-box/index.tsx"],"sourcesContent":[":host {\n  font-family: var(--font-family-sans);\n  font-weight: var(--font-rg);\n}\n\n:host > div {\n  display: flex;\n  width: inherit;\n  padding: calc(var(--space-unit) * 2);\n  background: var(--color-primary03);\n  border-radius: var(--border-radius);\n}\n\n:host > div > slot {\n  color: var(--color-default-text);\n  font-size: 14px;\n}\n\n:host > div > z-icon {\n  margin-left: calc(var(--space-unit) * 2);\n  cursor: pointer;\n  fill: var(--color-primary01);\n}\n","import {Component, Prop, h, Event, EventEmitter} from \"@stencil/core\";\n\n/**\n * @slot content - set the info box content\n */\n@Component({\n  tag: \"z-info-box\",\n  styleUrl: \"styles.css\",\n  shadow: true,\n})\nexport class ZInfoBox {\n  /** info box unique id */\n  @Prop()\n  boxid: string;\n\n  /** render close icon flag */\n  @Prop()\n  isclosable = true;\n\n  /** emitted on close icon click */\n  @Event()\n  infoBoxClose: EventEmitter;\n\n  private emitInfoBoxClose(): void {\n    this.infoBoxClose.emit({boxid: this.boxid});\n  }\n\n  render(): HTMLDivElement {\n    return (\n      <div id={this.boxid}>\n        <slot name=\"content\" />\n        {this.isclosable && (\n          <z-icon\n            name=\"multiply\"\n            data-action=\"infoBoxClose\"\n            onClick={() => this.emitInfoBoxClose()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n"],"mappings":"kDAAA,MAAMA,EAAY,wXAClB,MAAAC,EAAeD,E,MCSFE,EAAQ,M,yGAON,I,CAML,gBAAAC,GACNC,KAAKC,aAAaC,KAAK,CAACC,MAAOH,KAAKG,O,CAGtC,MAAAC,GACE,OACEC,EAAA,OAAAC,IAAA,2CAAKC,GAAIP,KAAKG,OACZE,EAAA,QAAAC,IAAA,2CAAME,KAAK,YACVR,KAAKS,YACJJ,EAAA,UACEG,KAAK,WAAU,cACH,eACZE,QAAS,IAAMV,KAAKD,qB"}