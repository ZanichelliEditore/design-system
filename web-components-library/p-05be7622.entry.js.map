{"version":3,"names":["stylesCss","ZAppHeaderStyle0","SUPPORT_INTERSECTION_OBSERVER","IntersectionObserver","ZAppHeader","constructor","hostRef","this","observer","entry","_stuck","isIntersecting","threshold","openDrawer","bind","closeDrawer","collectMenuElements","evaluateViewport","window","innerWidth","currentViewport","onStuck","scrollParent","sticking","emit","setMenuFloatingMode","menuElements","length","elements","forEach","element","open","floating","drawerOpen","verticalContext","title","titleElement","hostElement","querySelector","textContent","trim","parent","offsetParent","document","body","documentElement","canShowMenu","flow","canShowSearchbar","enableSearch","searchPageUrl","hasHero","hero","querySelectorAll","menuLength","enableStuckObserver","observe","container","disableStuckMode","unobserve","onStuckMode","stuck","renderSearchLinkButton","h","class","variant","ButtonVariant","SECONDARY","href","icon","size","ControlSize","X_SMALL","renderSeachbar","searchButtonIconOnly","value","searchString","placeholder","searchPlaceholder","showSearchButton","preventSubmit","onSearchTyping","e","detail","componentDidLoad","render","Host","key","name","alt","src","ref","el","onClick","onSlotchange","OffCanvasVariant","OVERLAY","transitiondirection","TransitionDirection","RIGHT","onCanvasOpenStatusChanged","ev","slot","disabled","ZButtonStyle0","ZButton","ButtonType","BUTTON","PRIMARY","BIG","getAttributes","id","htmlid","Object","assign","ariaLabel","target","type","role","ZDividerStyle0","ZDivider","DividerSize","SMALL","DividerOrientation","HORIZONTAL","orientation","style","backgroundColor","color","ZIconStyle0","ZIcon","selectPathOrPolygon","iconValue","startsWith","d","ICONS","points","viewBox","width","height","iconid","fill","ZInputStyle0","ZInput","typingtimeout","randomId","LabelPosition","inputCheckListener","data","InputType","RADIO","checked","isChecked","CHECKBOX","console","warn","emitInputChange","isTyping","emitStartTyping","validity","TEXTAREA","getValidity","inputChange","clearTimeout","timer","setTimeout","emitStopTyping","startTyping","stopTyping","emitInputCheck","inputCheck","input","getTextAttributes","readonly","required","htmltitle","minlength","maxlength","status","filled","autocomplete","onInput","getNumberAttributes","NUMBER","min","max","step","getPatternAttribute","PASSWORD","TEXT","TEL","SEARCH","URL","EMAIL","pattern","getRoleAttribute","getAriaAttrubutes","expanded","ariaExpanded","controls","ariaControls","ariaAutocomplete","activedescendant","ariaActivedescendant","renderInputText","attr","hasclearicon","renderLabel","passwordHidden","inputRef","renderIcons","renderMessage","label","htmlFor","renderResetIcon","renderIcon","renderShowHidePassword","tabIndex","hidden","boolean","message","undefined","renderTextarea","attributes","handleCheck","renderCheckbox","onChange","after","labelPosition","before","LEFT","innerHTML","renderRadio","ZInputMessageStyle0","ZInputMessage","statusIcons","success","error","warning","onMessageChange","statusRole","componentWillLoad","ZListStyle0","ZList","ListSize","MEDIUM","ListType","NONE","setChildrenSizeType","children","host","i","setAttribute","listType","toString","ZListElementStyle0","ZListElement","accessibleFocusHandler","listElementId","toFocus","shadowRoot","getElementById","focus","openElementConfig","accordion","close","menu","ExpandableListButtonAlign","ListDividerType","ExpandableListStyle","ACCORDION","handleClick","handleKeyDown","clickItem","expandable","showInnerContent","calculateClass","isContextualMenu","event","expandByKey","code","KeyboardCode","ENTER","ARROW_DOWN","preventDefault","accessibleFocus","ARROW_UP","renderExpandableButton","expandableStyle","renderExpandedContent","renderContent","ORDERED","listElementPosition","UNORDERED","onFocus","ariaDescendantFocus","onKeyDown","clickable","tabindex","part","dividerType","ELEMENT","dividerColor","dividerSize","ZListGroupStyle0","ZListGroup","hasHeader","HEADER","ZOffcanvasStyle0","ZOffcanvas","PUSHCONTENT","onOpenChanged","skipLoadAnimation","handlePageOverflow","canvasOpenStatusChanged","overflow","disconnectedCallback","onTransitionEnd","ZSearchbarStyle0","ZSearchbar","resultsItemsList","emitSearchSubmit","searchSubmit","emitSearchTyping","search","searchTyping","emitSearchItemClick","item","searchItemClick","watchItems","getResultsItemsList","watchResultsCount","currResultsCount","resultsCount","watchValue","watchSearchString","resizeObserver","disconnect","ResizeObserver","getDevice","Device","MOBILE","isMobile","resultsItems","JSON","parse","getGroupedItems","items","groupedItems","category","subcategory","_a","push","sortResultsItems","keys","sort","reduce","obj","a","b","nameA","toUpperCase","nameB","checkResultsCount","counter","handleStopTyping","stopPropagation","handleSubmit","handleOutsideClick","cp","composedPath","searchbar","find","elem","nodeName","showResults","classList","contains","renderInput","val","onStopTyping","onKeyUp","handleEnterKeydSubmit","renderButton","iconProp","buttonLabel","defaultProps","renderResults","autocompleteMinChars","renderResultsList","renderSearchHelper","_b","renderItems","renderShowAllResults","listGroups","values","groupItem","index","array","listGroupsElements","subindex","subarray","isLast","renderItem","renderItemCategory","divider","onClickItem","ellipsis","resultsEllipsis","renderItemLabel","tag","text","replace","RegExp","found","hasDivider","searchHelperLabel","ZTagStyle0","ZTag"],"sources":["src/components/navigation/z-app-header/styles.css?tag=z-app-header&encapsulation=shadow","src/components/navigation/z-app-header/index.tsx","src/components/buttons/z-button/styles.css?tag=z-button&encapsulation=scoped","src/components/buttons/z-button/index.tsx","src/components/z-divider/styles.css?tag=z-divider&encapsulation=scoped","src/components/z-divider/index.tsx","src/components/icons/z-icon/styles.css?tag=z-icon&encapsulation=shadow","src/components/icons/z-icon/index.tsx","src/components/inputs/z-input/styles.css?tag=z-input&encapsulation=scoped","src/components/inputs/z-input/index.tsx","src/components/inputs/z-input-message/styles.css?tag=z-input-message&encapsulation=shadow","src/components/inputs/z-input-message/index.tsx","src/components/list/z-list/styles.css?tag=z-list&encapsulation=shadow","src/components/list/z-list/index.tsx","src/components/list/z-list-element/styles.css?tag=z-list-element&encapsulation=shadow","src/components/list/z-list-element/index.tsx","src/components/list/z-list-group/styles.css?tag=z-list-group&encapsulation=shadow","src/components/list/z-list-group/index.tsx","src/components/z-offcanvas/styles.css?tag=z-offcanvas&encapsulation=scoped","src/components/z-offcanvas/index.tsx","src/components/inputs/z-searchbar/styles.css?tag=z-searchbar&encapsulation=shadow","src/components/inputs/z-searchbar/index.tsx","src/components/z-tag/styles.css?tag=z-tag&encapsulation=scoped","src/components/z-tag/index.tsx"],"sourcesContent":[":host {\n  --app-header-typography-1-size: 24px;\n  --app-header-typography-2-size: 28px;\n  --app-header-typography-3-size: 32px;\n  --app-header-typography-4-size: 36px;\n  --app-header-typography-5-size: 42px;\n  --app-header-typography-6-size: 48px;\n  --app-header-typography-7-size: 54px;\n  --app-header-typography-8-size: 60px;\n  --app-header-typography-9-size: 68px;\n  --app-header-typography-10-size: 76px;\n  --app-header-typography-11-size: 84px;\n  --app-header-typography-12-size: 92px;\n  --app-header-typography-1-lineheight: 1.33;\n  --app-header-typography-2-lineheight: 1.29;\n  --app-header-typography-3-lineheight: 1.25;\n  --app-header-typography-4-lineheight: 1.24;\n  --app-header-typography-5-lineheight: 1.24;\n  --app-header-typography-6-lineheight: 1.25;\n  --app-header-typography-7-lineheight: 1.2;\n  --app-header-typography-8-lineheight: 1.26;\n  --app-header-typography-9-lineheight: 1.24;\n  --app-header-typography-10-lineheight: 1.26;\n  --app-header-typography-11-lineheight: 1.2;\n  --app-header-typography-12-lineheight: 1.2;\n  --app-header-typography-1-tracking: calc(-0.2 / 1em);\n  --app-header-typography-2-tracking: calc(-0.4 / 1em);\n  --app-header-typography-3-tracking: calc(-0.6 / 1em);\n  --app-header-typography-4-tracking: calc(-0.8 / 1em);\n  --app-header-typography-5-tracking: calc(-1 / 1em);\n  --app-header-typography-6-tracking: calc(-1.2 / 1em);\n  --app-header-typography-7-tracking: calc(-1.4 / 1em);\n  --app-header-typography-8-tracking: calc(-1.6 / 1em);\n  --app-header-typography-9-tracking: calc(-1.8 / 1em);\n  --app-header-typography-10-tracking: calc(-2 / 1em);\n  --app-header-typography-11-tracking: calc(-2.2 / 1em);\n  --app-header-typography-12-tracking: calc(-2.4 / 1em);\n  --app-header-content-max-width: 100%;\n  --app-header-height: auto;\n\n  /* Variable to set stuck header and drawer's top offset.\n  Useful when something is absolutely positioned above the header. */\n  --app-header-top-offset: 48px;\n  --app-header-drawer-trigger-size: calc(var(--space-unit) * 4);\n\n  /* Variable to customize header background color. */\n  --app-header-bg: var(--color-surface01);\n\n  /* Variable to customize stuck header background color. */\n  --app-header-stucked-bg: var(--color-surface01);\n\n  /* Variable to customize text and icon color. */\n  --app-header-text-color: var(--color-text01);\n\n  /* Variable to customize the title's font size.\n  NOTE: Only use one of the exported `--app-header-typography-*-size` as a value. */\n  --app-header-title-font-size: var(--app-header-typography-3-size);\n\n  /* Variable to customize the title's line-height.\n  NOTE: Only use one of the exported `--app-header-typography-*-lineheight` as a value\n  and use the same level as the one of the font size. */\n  --app-header-title-lineheight: var(--app-header-typography-3-lineheight);\n\n  /* Variable to customize the title's letter-spacing.\n  NOTE: Only use one of the exported `--app-header-typography-*-tracking` as a value\n  and use the same level as the one of the font size. */\n  --app-header-title-letter-spacing: var(--app-header-typography-3-tracking);\n\n  /* Variable to customize stuck header's text and icon color. */\n  --app-header-stucked-text-color: var(--color-text01);\n\n  position: relative;\n  display: block;\n  height: var(--app-header-height);\n  color: var(--app-header-text-color);\n}\n\n:host,\n* {\n  box-sizing: border-box;\n}\n\n.heading-panel {\n  position: relative;\n  display: flex;\n  width: 100%;\n  max-width: var(--app-header-content-max-width);\n  flex-direction: column;\n  flex-grow: 0;\n  flex-shrink: 0;\n  align-items: baseline;\n  padding: var(--grid-margin);\n  margin: 0 auto;\n  background: var(--app-header-bg);\n  gap: calc(var(--space-unit) * 2) calc(var(--space-unit) * 5);\n}\n\n.hero-container + .heading-panel {\n  background: transparent;\n}\n\n:host(:empty) .heading-panel {\n  padding: 0;\n}\n\n.heading-container {\n  position: relative;\n  z-index: 1;\n  display: flex;\n  width: 100%;\n  max-width: 100%;\n  flex: 1 auto;\n  flex-direction: column;\n  justify-content: flex-start;\n}\n\n.heading-title {\n  display: flex;\n  max-width: 100%;\n  flex-direction: row;\n  align-items: flex-start;\n  column-gap: calc(var(--space-unit) * 2);\n}\n\n::slotted([slot=\"title\"]),\n.heading-stuck .heading-title > *,\n::slotted([slot=\"stucked-title\"]) {\n  margin: 0;\n  font-family: \"IBM Plex Serif\", serif;\n  font-weight: var(--font-bd);\n}\n\n::slotted([slot=\"title\"]) {\n  font-size: var(--app-header-title-font-size);\n  letter-spacing: var(--app-header-title-letter-spacing);\n  line-height: var(--app-header-title-lineheight);\n}\n\n.heading-stuck .heading-title > *,\n::slotted([slot=\"stucked-title\"]) {\n  font-size: var(--app-header-typography-3-size);\n  letter-spacing: var(--app-header-typography-3-tracking);\n  line-height: var(--app-header-typography-3-lineheight);\n}\n\n:host(:not([menu-length=\"0\"])) .heading-subtitle {\n  padding-left: calc(var(--app-header-drawer-trigger-size) + (var(--space-unit) * 2));\n}\n\n::slotted([slot=\"top-subtitle\"]),\n::slotted([slot=\"subtitle\"]) {\n  margin: 0;\n  font-family: var(--font-family-sans);\n  font-size: 20px;\n  font-style: italic;\n  line-height: 26px;\n}\n\n::slotted([slot=\"subtitle\"]) {\n  font-weight: 500;\n}\n\n::slotted([slot=\"top-subtitle\"]) {\n  font-weight: 400;\n}\n\n.menu-container {\n  display: flex;\n  width: 100%;\n  flex: 1 auto;\n  flex-flow: row wrap;\n}\n\n:host([menu-length=\"0\"]:not([enable-search])) .menu-container,\n.menu-container:empty {\n  display: none;\n}\n\n.menu-container ::slotted([open]) {\n  position: relative;\n  z-index: 3;\n}\n\nz-searchbar {\n  z-index: 0;\n  display: flex;\n  width: auto;\n  min-width: calc(var(--space-unit) * 32);\n  flex: 1 auto;\n  align-items: center;\n  margin-left: auto;\n}\n\n.heading-stuck {\n  position: fixed;\n  z-index: 20;\n  top: var(--app-header-top-offset);\n  left: 0;\n  width: 100%;\n  max-width: 100%;\n  animation: slide-stuck-heading-in 250ms ease-out;\n  background: var(--app-header-stucked-bg);\n  box-shadow: var(--shadow-2);\n  color: var(--app-header-stucked-text-color);\n}\n\n.heading-stuck-content {\n  display: flex;\n  max-width: var(--app-header-content-max-width);\n  align-items: center;\n  padding: var(--space-unit) var(--grid-margin);\n  margin: 0 auto;\n  column-gap: calc(var(--space-unit) * 2);\n}\n\n.heading-stuck .heading-title {\n  overflow: hidden;\n}\n\n.heading-stuck .heading-title > *,\n.heading-stuck .heading-title ::slotted([slot=\"stucked-title\"]) {\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.heading-stuck-content z-button {\n  margin-left: auto;\n}\n\n.drawer-trigger {\n  padding: 0;\n  border: 0;\n  margin: 0;\n  appearance: none;\n  background: none;\n  border-radius: 0;\n  color: inherit;\n  cursor: pointer;\n}\n\n.drawer-trigger z-icon {\n  --z-icon-width: var(--app-header-drawer-trigger-size);\n  --z-icon-height: var(--app-header-drawer-trigger-size);\n\n  fill: currentcolor;\n}\n\n/* Simulate the height of the first line of text,\nto correctly align drawer icon and search page button with the title */\n.heading-container :is(.drawer-trigger, z-button.search-page-button) {\n  display: flex;\n  height: calc(var(--app-header-title-font-size) * var(--app-header-title-lineheight));\n  align-items: center;\n}\n\n.heading-container z-button.search-page-button {\n  margin-left: auto;\n}\n\n.drawer-content {\n  display: none;\n}\n\nz-offcanvas[open] .drawer-content {\n  display: flex;\n  width: 100%;\n  flex: 1 auto;\n  flex-direction: column;\n  row-gap: calc(var(--space-unit) * 2.5);\n}\n\nz-offcanvas[open] .drawer-content ::slotted(z-menu) {\n  width: 100%;\n}\n\n.drawer-close {\n  --z-icon-width: var(--app-header-drawer-trigger-size);\n  --z-icon-height: var(--app-header-drawer-trigger-size);\n\n  padding: 0;\n  border: 0;\n  margin: var(--space-unit) 0 calc(var(--space-unit) * 2.5);\n  appearance: none;\n  background: transparent;\n  border-radius: 0;\n  color: inherit;\n  cursor: pointer;\n  fill: currentcolor;\n  font-size: inherit;\n  outline: none;\n}\n\n.drawer-close:focus-visible {\n  box-shadow: var(--shadow-focus-primary);\n}\n\n.hero-container {\n  position: absolute;\n  z-index: 0;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n:host([overlay]) .heading-panel .drawer-trigger z-icon,\n:host([overlay]) .heading-panel .heading-container,\n:host([overlay]) .heading-panel .menu-container {\n  color: var(--color-white);\n  fill: var(--color-white);\n}\n\n:host([overlay]) .heading-panel .menu-container ::slotted(z-menu) {\n  --z-menu-label-color: var(--color-white);\n}\n\n:host([overlay]) .hero-container::after {\n  position: absolute;\n  z-index: 0;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: var(--color-black);\n  content: \"\";\n  opacity: 0.5;\n}\n\n.hero-container img,\n.hero-container ::slotted(*) {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: top center;\n  -webkit-user-drag: none;\n}\n\n/* Tablet breakpoint */\n@media (min-width: 768px) {\n  :host {\n    --app-header-title-font-size: var(--app-header-typography-6-size);\n    --app-header-title-lineheight: var(--app-header-typography-6-lineheight);\n    --app-header-title-letter-spacing: var(--app-header-typography-6-tracking);\n  }\n\n  .heading-panel {\n    flex-flow: row wrap;\n    align-items: center;\n    padding-bottom: calc(var(--space-unit) * 2);\n  }\n\n  .heading-container {\n    margin-right: auto;\n  }\n\n  :host(:is([flow=\"offcanvas\"], [menu-length=\"0\"])) :is(.heading-container, .menu-container) {\n    width: auto;\n  }\n\n  :host(:not([flow=\"offcanvas\"])) .heading-subtitle {\n    padding-left: 0;\n  }\n\n  .menu-container {\n    flex: initial;\n    align-items: center;\n  }\n\n  :host([menu-length=\"0\"]) .menu-container:not(:empty) {\n    height: calc(var(--app-header-title-font-size) * var(--app-header-title-lineheight));\n  }\n\n  :host(:not([flow=\"offcanvas\"])) .menu-container {\n    gap: var(--space-unit) calc(var(--space-unit) * 5);\n  }\n\n  :host(:not([flow=\"offcanvas\"])) .heading-container .drawer-trigger {\n    display: none;\n  }\n}\n\n/* Desktop breakpoint */\n@media (min-width: 1152px) {\n  :host {\n    --app-header-title-font-size: var(--app-header-typography-7-size);\n    --app-header-title-lineheight: var(--app-header-typography-7-lineheight);\n    --app-header-title-letter-spacing: var(--app-header-typography-7-tracking);\n  }\n\n  .heading-panel {\n    justify-content: flex-start;\n    padding-bottom: calc(var(--space-unit) * 3);\n  }\n\n  .heading-container,\n  .menu-container {\n    width: auto;\n  }\n\n  :host([flow=\"stack\"]) .heading-panel {\n    flex-flow: column;\n    align-items: flex-start;\n  }\n\n  :host([flow=\"stack\"]) .menu-container {\n    width: 100%;\n  }\n\n  :host(:not([flow=\"offcanvas\"], [menu-length=\"0\"])) .heading-panel {\n    row-gap: calc(var(--space-unit) * 3);\n  }\n\n  z-searchbar {\n    min-width: calc(var(--space-unit) * 45);\n    flex: initial;\n  }\n}\n\n/* Wide breakpoint */\n@media (min-width: 1366px) {\n  :host {\n    --app-header-title-font-size: var(--app-header-typography-9-size);\n    --app-header-title-lineheight: var(--app-header-typography-9-lineheight);\n    --app-header-title-letter-spacing: var(--app-header-typography-9-tracking);\n  }\n}\n\n@keyframes slide-stuck-heading-in {\n  0% {\n    transform: translate3d(0, -100%, 0);\n  }\n\n  100% {\n    transform: none;\n  }\n}\n","import {Component, h, Element, Prop, State, Watch, Host, Event, EventEmitter, Listen} from \"@stencil/core\";\nimport {ButtonVariant, ControlSize, OffCanvasVariant, TransitionDirection} from \"../../../beans\";\n\nconst SUPPORT_INTERSECTION_OBSERVER = typeof IntersectionObserver !== \"undefined\";\n\n/**\n * @slot title - Slot for the main title\n * @slot subtitle - Slot for the bottom subtitle. It will not appear in stuck header.\n * @slot top-subtitle - Slot for the top subtitle. It will not appear in stuck header.\n * @slot stucked-title - Title for the stuck header. By default it uses the text from the `title` slot.\n * @cssprop --app-header-typography-1-size - Part of the heading typography's scale. Use it if you have to override the default value. Value: `24px`.\n * @cssprop --app-header-typography-2-size - Part of the heading typography's scale. Use it if you have to override the default value. Value: `28px`.\n * @cssprop --app-header-typography-3-size - Part of the heading typography's scale. Use it if you have to override the default value. Value: `32px`.\n * @cssprop --app-header-typography-4-size - Part of the heading typography's scale. Use it if you have to override the default value. Value: `36px`.\n * @cssprop --app-header-typography-5-size - Part of the heading typography's scale. Use it if you have to override the default value. Value: `42px`.\n * @cssprop --app-header-typography-6-size - Part of the heading typography's scale. Use it if you have to override the default value. Value: `48px`.\n * @cssprop --app-header-typography-7-size - Part of the heading typography's scale. Use it if you have to override the default value. Value: `54px`.\n * @cssprop --app-header-typography-8-size - Part of the heading typography's scale. Use it if you have to override the default value. Value: `60px`.\n * @cssprop --app-header-typography-9-size - Part of the heading typography's scale. Use it if you have to override the default value. Value: `68px`.\n * @cssprop --app-header-typography-10-size - Part of the heading typography's scale. Use it if you have to override the default value. Value: `76px`.\n * @cssprop --app-header-typography-11-size - Part of the heading typography's scale. Use it if you have to override the default value. Value: `84px`.\n * @cssprop --app-header-typography-12-size - Part of the heading typography's scale. Use it if you have to override the default value. Value: `92px`.\n * @cssprop --app-header-typography-1-lineheight - Part of the heading typography's scale. Use it if you have to override the default value. Value: `1.33`.\n * @cssprop --app-header-typography-2-lineheight - Part of the heading typography's scale. Use it if you have to override the default value. Value: `1.29`.\n * @cssprop --app-header-typography-3-lineheight - Part of the heading typography's scale. Use it if you have to override the default value. Value: `1.25`.\n * @cssprop --app-header-typography-4-lineheight - Part of the heading typography's scale. Use it if you have to override the default value. Value: `1.24`.\n * @cssprop --app-header-typography-5-lineheight - Part of the heading typography's scale. Use it if you have to override the default value. Value: `1.24`.\n * @cssprop --app-header-typography-6-lineheight - Part of the heading typography's scale. Use it if you have to override the default value. Value: `1.25`.\n * @cssprop --app-header-typography-7-lineheight - Part of the heading typography's scale. Use it if you have to override the default value. Value: `1.2`.\n * @cssprop --app-header-typography-8-lineheight - Part of the heading typography's scale. Use it if you have to override the default value. Value: `1.26`.\n * @cssprop --app-header-typography-9-lineheight - Part of the heading typography's scale. Use it if you have to override the default value. Value: `1.24`.\n * @cssprop --app-header-typography-10-lineheight - Part of the heading typography's scale. Use it if you have to override the default value. Value: `1.26`.\n * @cssprop --app-header-typography-11-lineheight - Part of the heading typography's scale. Use it if you have to override the default value. Value: `1.2`.\n * @cssprop --app-header-typography-12-lineheight - Part of the heading typography's scale. Use it if you have to override the default value. Value: `1.2`.\n * @cssprop --app-header-typography-1-tracking - Part of the heading typography's scale. Use it if you have to override the default value. Value: `calc(-0.2 / 1em)`.\n * @cssprop --app-header-typography-2-tracking - Part of the heading typography's scale. Use it if you have to override the default value. Value: `calc(-0.4 / 1em)`.\n * @cssprop --app-header-typography-3-tracking - Part of the heading typography's scale. Use it if you have to override the default value. Value: `calc(-0.6 / 1em)`.\n * @cssprop --app-header-typography-4-tracking - Part of the heading typography's scale. Use it if you have to override the default value. Value: `calc(-0.8 / 1em)`.\n * @cssprop --app-header-typography-5-tracking - Part of the heading typography's scale. Use it if you have to override the default value. Value: `calc(-1 / 1em)`.\n * @cssprop --app-header-typography-6-tracking - Part of the heading typography's scale. Use it if you have to override the default value. Value: `calc(-1.2 / 1em)`.\n * @cssprop --app-header-typography-7-tracking - Part of the heading typography's scale. Use it if you have to override the default value. Value: `calc(-1.4 / 1em)`.\n * @cssprop --app-header-typography-8-tracking - Part of the heading typography's scale. Use it if you have to override the default value. Value: `calc(-1.6 / 1em)`.\n * @cssprop --app-header-typography-9-tracking - Part of the heading typography's scale. Use it if you have to override the default value. Value: `calc(-1.8 / 1em)`.\n * @cssprop --app-header-typography-10-tracking - Part of the heading typography's scale. Use it if you have to override the default value. Value: `calc(-2 / 1em)`.\n * @cssprop --app-header-typography-11-tracking - Part of the heading typography's scale. Use it if you have to override the default value. Value: `calc(-2.2 / 1em)`.\n * @cssprop --app-header-typography-12-tracking - Part of the heading typography's scale. Use it if you have to override the default value. Value: `calc(-2.4 / 1em)`.\n * @cssprop --app-header-content-max-width - Use it to set header's content max width. Useful when the project use a fixed width layout. Defaults to `100%`.\n * @cssprop --app-header-height - Defaults to `auto`.\n * @cssprop --app-header-top-offset - Top offset for the stuck header. Useful when there are other fixed elements above the header. Defaults to `48px` (the height of the main topbar).\n * @cssprop --app-header-drawer-trigger-size - The size of the drawer icon. Defaults to `--space-unit * 4`.\n * @cssprop --app-header-bg - Header background color. Defaults to `--color-surface01`.\n * @cssprop --app-header-stucked-bg - Stuck header background color. Defaults to `--color-surface01`.\n * @cssprop --app-header-text-color - Text color. Useful on `hero` variant to set text color based on the colors of the background image. Defaults to `--color-text01`.\n * @cssprop --app-header-title-font-size - Variable to customize the title's font size.\n * NOTE: Only use one of the exported `--app-header-typography-*-size` as a value.\n * Defaults to `--app-header-typography-3-size`.\n * @cssprop --app-header-title-lineheight - Variable to customize the title's line-height.\n * NOTE: Only use one of the exported `--app-header-typography-*-lineheight` as a value and use the same level as the one of the font size.\n * Defaults to `--app-header-typography-3-lineheight`.\n * @cssprop --app-header-title-letter-spacing - Variable to customize the title's letter-spacing.\n * NOTE: Only use one of the exported `--app-header-typography-*-tracking` as a value and use the same level as the one of the font size.\n * Defaults to `--app-header-typography-3-tracking`.\n * @cssprop --app-header-stucked-text-color - Stuck header text color. Defaults to `--color-text01`.\n */\n@Component({\n  tag: \"z-app-header\",\n  styleUrl: \"styles.css\",\n  shadow: true,\n})\nexport class ZAppHeader {\n  @Element() hostElement: HTMLZAppHeaderElement;\n\n  /**\n   * Stuck mode for the header.\n   * You can programmatically set it using an IntersectionObserver.\n   */\n  @Prop({reflect: true})\n  stuck = false;\n\n  /**\n   * Set the hero image source for the header.\n   * You can also use a [slot=\"hero\"] node for advanced customization.\n   */\n  @Prop()\n  hero: string;\n\n  /**\n   * Should place an overlay over the hero image.\n   * Useful for legibility purpose.\n   */\n  @Prop({reflect: true})\n  overlay = false;\n\n  /**\n   * Control menu bar position in the header.\n   * - auto: the menu bar is positioned near the title\n   * - stack: the menu bar is positioned below the title\n   * - offcanvas: the menu bar is not displayed and a burger icon appears to open the offcanvas menu\n   */\n  @Prop({reflect: true})\n  flow: \"auto\" | \"stack\" | \"offcanvas\" = \"auto\";\n\n  /**\n   * The opening state of the drawer.\n   */\n  @Prop({reflect: true})\n  drawerOpen = false;\n\n  /**\n   * Enable the search bar.\n   */\n  @Prop({reflect: true})\n  enableSearch = false;\n\n  /**\n   * Placeholder text for the search bar.\n   */\n  @Prop()\n  searchPlaceholder = \"Cerca\";\n\n  /**\n   * Search string for the search bar.\n   */\n  @Prop({mutable: true})\n  searchString = \"\";\n\n  /**\n   * Url to the search page.\n   * Set this prop and `enableSearch` to show a link-button on mobile and tablet viewports, instead of the normal searchbar.\n   * The link will also appear on the sticky header.\n   */\n  @Prop()\n  searchPageUrl: string;\n\n  /**\n   * The stuck state of the bar.\n   */\n  @State()\n  private _stuck = false;\n\n  /**\n   * Current viewport.\n   * Used to change the aspect of the search button (icon only) on mobile and tablet.\n   */\n  @State()\n  private currentViewport: \"mobile\" | \"tablet\" | \"desktop\" = \"mobile\";\n\n  /**\n   * Current count of menu items.\n   */\n  @State()\n  menuLength: number;\n\n  /**\n   * Emitted when the `stuck` state of the header changes\n   */\n  @Event()\n  sticking: EventEmitter;\n\n  private container?: HTMLDivElement;\n\n  private menuElements?: NodeListOf<HTMLElement>;\n\n  private observer?: IntersectionObserver =\n    SUPPORT_INTERSECTION_OBSERVER &&\n    new IntersectionObserver(\n      ([entry]) => {\n        this._stuck = !entry.isIntersecting;\n      },\n      {\n        threshold: 0.5,\n      }\n    );\n\n  constructor() {\n    this.openDrawer = this.openDrawer.bind(this);\n    this.closeDrawer = this.closeDrawer.bind(this);\n    this.collectMenuElements = this.collectMenuElements.bind(this);\n  }\n\n  @Listen(\"resize\", {target: \"window\", passive: true})\n  evaluateViewport(): void {\n    if (window.innerWidth < 768) {\n      this.currentViewport = \"mobile\";\n    } else if (window.innerWidth >= 768 && window.innerWidth < 1152) {\n      this.currentViewport = \"tablet\";\n    } else {\n      this.currentViewport = \"desktop\";\n    }\n  }\n\n  @Watch(\"_stuck\")\n  onStuck(): void {\n    const scrollParent = this.scrollParent;\n    if (!scrollParent) {\n      return;\n    }\n\n    this.sticking.emit(this._stuck);\n  }\n\n  @Watch(\"drawerOpen\")\n  setMenuFloatingMode(): void {\n    if (this.menuElements.length === 0) {\n      return;\n    }\n\n    const elements = this.menuElements;\n    elements.forEach((element) => {\n      (element as HTMLZMenuElement).open = false;\n      (element as HTMLZMenuElement).floating = !this.drawerOpen;\n      (element as HTMLZMenuElement).verticalContext = this.drawerOpen;\n    });\n  }\n\n  private get title(): string {\n    const titleElement = this.hostElement.querySelector('[slot=\"title\"]');\n    if (titleElement === null) {\n      return \"\";\n    }\n\n    return titleElement.textContent.trim();\n  }\n\n  private get scrollParent(): Window | Element {\n    const parent = this.hostElement.offsetParent;\n    if (parent === document.body || parent === document.documentElement) {\n      return window;\n    }\n\n    return parent;\n  }\n\n  private get canShowMenu(): boolean {\n    return this.flow !== \"offcanvas\" && this.currentViewport !== \"mobile\" && !this.drawerOpen;\n  }\n\n  private get canShowSearchbar(): boolean {\n    if (!this.enableSearch) {\n      return false;\n    }\n\n    // Always show the searchbar on desktop, even if a searchPageUrl is set\n    if (this.searchPageUrl) {\n      return this.currentViewport === \"desktop\";\n    }\n\n    return true;\n  }\n\n  /**\n   * Whether the header has a hero image, either as a prop or as a slot.\n   */\n  private get hasHero(): boolean {\n    return !!this.hero || this.hostElement.querySelector(\"[slot=hero]\") !== null;\n  }\n\n  private openDrawer(): void {\n    this.drawerOpen = true;\n  }\n\n  private closeDrawer(): void {\n    this.drawerOpen = false;\n  }\n\n  private collectMenuElements(): void {\n    const menuElements = (this.menuElements = this.hostElement.querySelectorAll('[slot=\"menu\"]'));\n    this.menuLength = menuElements.length;\n    this.setMenuFloatingMode();\n  }\n\n  private enableStuckObserver(): void {\n    if (this.observer) {\n      this.observer.observe(this.container);\n    }\n  }\n\n  private disableStuckMode(): void {\n    this._stuck = false;\n    if (this.observer) {\n      this.observer.unobserve(this.container);\n    }\n  }\n\n  @Watch(\"stuck\")\n  onStuckMode(): void {\n    if (this.stuck) {\n      this.enableStuckObserver();\n    } else {\n      this.disableStuckMode();\n    }\n  }\n\n  private renderSearchLinkButton(): HTMLZButtonElement | null {\n    if (!this.enableSearch || !this.searchPageUrl || this.currentViewport === \"desktop\") {\n      return null;\n    }\n\n    return (\n      <z-button\n        class=\"search-page-button\"\n        variant={ButtonVariant.SECONDARY}\n        href={this.searchPageUrl}\n        icon=\"search\"\n        size={ControlSize.X_SMALL}\n      ></z-button>\n    );\n  }\n\n  private renderSeachbar(searchButtonIconOnly: boolean): HTMLZSearchbarElement {\n    return (\n      <z-searchbar\n        value={this.searchString}\n        placeholder={this.searchPlaceholder}\n        showSearchButton={true}\n        searchButtonIconOnly={searchButtonIconOnly}\n        size={ControlSize.X_SMALL}\n        variant={ButtonVariant.SECONDARY}\n        preventSubmit={this.searchString.length < 3}\n        onSearchTyping={(e) => (this.searchString = e.detail)}\n      />\n    );\n  }\n\n  componentDidLoad(): void {\n    this.collectMenuElements();\n    this.onStuckMode();\n    this.evaluateViewport();\n  }\n\n  render(): HTMLZAppHeaderElement {\n    return (\n      <Host menu-length={this.menuLength}>\n        {this.hasHero && (\n          <div class=\"hero-container\">\n            <slot name=\"hero\">\n              {this.hero && (\n                <img\n                  alt=\"\"\n                  src={this.hero}\n                />\n              )}\n            </slot>\n          </div>\n        )}\n\n        <div\n          class=\"heading-panel\"\n          ref={(el) => (this.container = el)}\n        >\n          <div class=\"heading-container\">\n            <div class=\"heading-subtitle\">\n              <slot name=\"top-subtitle\"></slot>\n            </div>\n            <div class=\"heading-title\">\n              {this.menuLength > 0 && (\n                <button\n                  class=\"drawer-trigger\"\n                  aria-label=\"Apri menu\"\n                  onClick={this.openDrawer}\n                >\n                  <z-icon name=\"burger-menu\"></z-icon>\n                </button>\n              )}\n\n              <slot name=\"title\"></slot>\n\n              {this.renderSearchLinkButton()}\n            </div>\n\n            <div class=\"heading-subtitle\">\n              <slot name=\"subtitle\"></slot>\n            </div>\n          </div>\n\n          {(this.canShowMenu || this.canShowSearchbar) && (\n            <div class=\"menu-container\">\n              {this.canShowMenu && (\n                <slot\n                  name=\"menu\"\n                  onSlotchange={this.collectMenuElements}\n                ></slot>\n              )}\n\n              {this.canShowSearchbar && this.renderSeachbar(this.currentViewport !== \"desktop\")}\n            </div>\n          )}\n        </div>\n\n        <z-offcanvas\n          variant={OffCanvasVariant.OVERLAY}\n          transitiondirection={TransitionDirection.RIGHT}\n          open={this.drawerOpen}\n          onCanvasOpenStatusChanged={(ev) => (this.drawerOpen = ev.detail)}\n        >\n          <button\n            class=\"drawer-close\"\n            aria-label=\"Chiudi menu\"\n            onClick={this.closeDrawer}\n            slot=\"canvasContent\"\n            aria-hidden={`${!this.drawerOpen}`}\n            disabled={!this.drawerOpen}\n          >\n            <z-icon name=\"close\"></z-icon>\n          </button>\n\n          <div\n            class=\"drawer-content\"\n            slot=\"canvasContent\"\n            aria-hidden={`${!this.drawerOpen}`}\n          >\n            <slot\n              name=\"menu\"\n              onSlotchange={this.collectMenuElements}\n            ></slot>\n          </div>\n        </z-offcanvas>\n\n        {this._stuck && (\n          <div class=\"heading-stuck\">\n            <div class=\"heading-stuck-content\">\n              {this.menuLength > 0 && (\n                <button\n                  class=\"drawer-trigger\"\n                  aria-label=\"Apri menu\"\n                  onClick={this.openDrawer}\n                >\n                  <z-icon name=\"burger-menu\"></z-icon>\n                </button>\n              )}\n\n              <div class=\"heading-title\">\n                <slot name=\"stucked-title\">{this.title}</slot>\n              </div>\n\n              {this.renderSearchLinkButton()}\n              {this.canShowSearchbar && this.currentViewport === \"desktop\" && this.renderSeachbar(false)}\n            </div>\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n",":host {\n  display: inline-block;\n\n  --z-icon-width: 16px;\n  --z-icon-height: 16px;\n  --z-icon-right-margin: 0;\n}\n\n:host([disabled]:not([disabled=\"false\"])) {\n  pointer-events: none;\n}\n\n:host .z-button--container {\n  display: inline-flex;\n  width: 100%;\n  box-sizing: border-box;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  border-width: var(--border-size-medium);\n  border-style: solid;\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  fill: currentcolor;\n  font-family: var(--font-family-sans);\n  font-size: 14px;\n  font-weight: var(--font-sb);\n  letter-spacing: 0.3px;\n  line-height: 1;\n  outline: none;\n  text-decoration: none;\n  text-transform: uppercase;\n  white-space: nowrap;\n}\n\n:host .z-button--container:focus:focus-visible {\n  box-shadow: var(--shadow-focus-primary);\n}\n\n:host .z-button--container.z-button--has-text {\n  min-width: calc(var(--space-unit) * 8);\n  padding: 0 calc(var(--space-unit) * 2);\n}\n\n:host .z-button--container.z-button--has-text z-icon {\n  --z-icon-right-margin: var(--space-unit);\n}\n\n:host([size=\"big\"]) .z-button--container {\n  min-width: 44px;\n  height: 44px;\n}\n\n:host([size=\"small\"]) .z-button--container {\n  min-width: 36px;\n  height: 36px;\n}\n\n:host([size=\"x-small\"]) .z-button--container {\n  min-width: 32px;\n  height: 32px;\n}\n\n:host([variant=\"primary\"]) .z-button--container {\n  border-color: var(--color-primary01);\n  background-color: var(--color-primary01);\n  color: var(--color-text-inverse);\n}\n\n@media (hover: hover) {\n  :host([variant=\"primary\"]) .z-button--container:hover {\n    border-color: var(--color-hover-primary);\n    background-color: var(--color-hover-primary);\n    color: var(--color-text-inverse);\n  }\n}\n\n:host([variant=\"primary\"]) .z-button--container:active {\n  border-color: var(--color-pressed-primary);\n  background-color: var(--color-pressed-primary);\n  box-shadow: var(--shadow-2);\n  color: var(--color-text-inverse);\n}\n\n:host([variant=\"primary\"][disabled]:not([disabled=\"false\"])) .z-button--container {\n  border-color: var(--color-disabled01);\n  background-color: var(--color-disabled01);\n  color: var(--color-disabled02);\n}\n\n:host([variant=\"secondary\"]) .z-button--container {\n  border-color: var(--color-primary01);\n  background-color: var(--color-surface01);\n  color: var(--color-primary01);\n}\n\n@media (hover: hover) {\n  :host([variant=\"secondary\"]) .z-button--container:hover {\n    border-color: var(--color-hover-primary);\n    background-color: var(--color-surface01);\n    color: var(--color-hover-primary);\n  }\n}\n\n:host([variant=\"secondary\"]) .z-button--container:active {\n  border-color: var(--color-pressed-primary);\n  background-color: var(--color-surface01);\n  box-shadow: var(--shadow-2);\n  color: var(--color-pressed-primary);\n}\n\n:host([variant=\"secondary\"][disabled]:not([disabled=\"false\"])) .z-button--container {\n  border-color: var(--color-disabled01);\n  background-color: var(--color-surface01);\n  color: var(--color-disabled02);\n}\n\n:host([variant=\"tertiary\"]) .z-button--container {\n  border-color: var(--color-primary02);\n  background-color: var(--color-primary02);\n  color: var(--color-primary01);\n}\n\n@media (hover: hover) {\n  :host([variant=\"tertiary\"]) .z-button--container:hover {\n    border-color: var(--color-primary03);\n    background-color: var(--color-primary03);\n    color: var(--color-hover-primary);\n  }\n}\n\n:host([variant=\"tertiary\"]) .z-button--container:focus:focus-visible {\n  border-color: var(--color-primary02);\n  background-color: var(--color-primary02);\n  color: var(--color-primary01);\n}\n\n:host([variant=\"tertiary\"]) .z-button--container:active {\n  border-color: var(--color-primary02);\n  background-color: var(--color-primary02);\n  box-shadow: var(--shadow-2);\n  color: var(--color-primary01);\n}\n\n:host([variant=\"tertiary\"][disabled]:not([disabled=\"false\"])) .z-button--container {\n  border-color: var(--color-disabled01);\n  background-color: var(--color-disabled01);\n  color: var(--color-disabled02);\n}\n","import {Component, Prop, h, Element} from \"@stencil/core\";\nimport {JSXBase} from \"@stencil/core/internal\";\nimport {ButtonVariant, ButtonType, ButtonSize, ControlSize} from \"../../../beans\";\n\n/**\n * @slot - button label\n */\n@Component({\n  tag: \"z-button\",\n  styleUrl: \"styles.css\",\n  shadow: false,\n  scoped: true,\n})\nexport class ZButton {\n  @Element() hostElement: HTMLZButtonElement;\n\n  /** defines a string value that labels an interactive element, used for accessibility. */\n  @Prop({reflect: true})\n  ariaLabel = \"\";\n\n  /** defines role attribute, used for accessibility. */\n  @Prop()\n  role?: string;\n\n  /** HTML <a> href attribute. If it is set, it renders an HTML <a> tag. */\n  @Prop()\n  href?: string;\n\n  /** HTML a target attribute. */\n  @Prop()\n  target?: string;\n\n  /** Identifier, should be unique. */\n  @Prop()\n  htmlid?: string;\n\n  /** HTML button name attribute. */\n  @Prop()\n  name?: string;\n\n  /** HTML button disabled attribute. */\n  @Prop({reflect: true})\n  disabled?: boolean = false;\n\n  /** HTML button type attribute. */\n  @Prop()\n  type?: ButtonType = ButtonType.BUTTON;\n\n  /** Graphical variant: `primary`, `secondary`, `tertiary`. Defaults to `primary`. */\n  @Prop({reflect: true})\n  variant?: ButtonVariant = ButtonVariant.PRIMARY;\n\n  /** `z-icon` name to use (optional). */\n  @Prop()\n  icon?: string;\n\n  /** Available sizes: `big`, `small` and `x-small`. Defaults to `big`. */\n  @Prop({reflect: true})\n  size?: ButtonSize | ControlSize = ControlSize.BIG;\n\n  private getAttributes(): JSXBase.HTMLAttributes<HTMLAnchorElement | HTMLButtonElement> {\n    return {\n      id: this.htmlid,\n      class: {\n        \"z-button--container\": true,\n        \"z-button--has-text\": !!this.hostElement.textContent.trim(),\n      },\n    };\n  }\n\n  render(): HTMLAnchorElement | HTMLButtonElement {\n    if (this.href) {\n      return (\n        <a\n          {...this.getAttributes()}\n          aria-label={this.ariaLabel}\n          href={this.href}\n          target={this.target}\n        >\n          {this.icon && <z-icon name={this.icon} />}\n          <slot />\n        </a>\n      );\n    }\n\n    return (\n      <button\n        {...this.getAttributes()}\n        aria-label={this.ariaLabel}\n        name={this.name}\n        type={this.type}\n        role={this.role}\n        disabled={this.disabled}\n      >\n        {this.icon && <z-icon name={this.icon} />}\n        <slot />\n      </button>\n    );\n  }\n}\n",":host {\n  display: block;\n  padding: 0;\n  margin: 0;\n}\n\n:host.divider-horizontal {\n  width: 100%;\n}\n\n:host.divider-vertical {\n  height: 100%;\n}\n\n:host.divider-small.divider-horizontal {\n  height: var(--border-size-small);\n}\n\n:host.divider-medium.divider-horizontal {\n  height: var(--border-size-medium);\n}\n\n:host.divider-large.divider-horizontal {\n  height: var(--border-size-large);\n}\n\n:host.divider-small.divider-vertical {\n  width: var(--border-size-small);\n}\n\n:host.divider-medium.divider-vertical {\n  width: var(--border-size-medium);\n}\n\n:host.divider-large.divider-vertical {\n  width: var(--border-size-large);\n}\n","import {Component, Prop, h, Host} from \"@stencil/core\";\nimport {DividerSize, DividerOrientation} from \"../../beans\";\n@Component({\n  tag: \"z-divider\",\n  styleUrl: \"styles.css\",\n  shadow: false,\n  scoped: true,\n})\nexport class ZDivider {\n  /** [optional] Divider size */\n  @Prop()\n  size?: DividerSize = DividerSize.SMALL;\n\n  /** [optional] Divider color */\n  @Prop()\n  color?: string = \"gray200\";\n\n  /** [optional] Divider orintation */\n  @Prop()\n  orientation?: DividerOrientation = DividerOrientation.HORIZONTAL;\n\n  render(): HTMLZDividerElement {\n    return (\n      <Host\n        class={`divider-${this.size} divider-${this.orientation}`}\n        style={{backgroundColor: `var(--${this.color})`}}\n      />\n    );\n  }\n}\n",":host {\n  margin-right: var(--z-icon-right-margin, 0);\n  margin-left: var(--z-icon-left-margin, 0);\n  line-height: 0;\n  vertical-align: middle;\n}\n\n:host svg:not([width]) {\n  width: var(--z-icon-width, 18px);\n}\n\n:host svg:not([height]) {\n  height: var(--z-icon-height, 18px);\n}\n","import {Component, Prop, Host, h} from \"@stencil/core\";\nimport {ICONS} from \"../icons\";\n\n@Component({\n  tag: \"z-icon\",\n  styleUrl: \"styles.css\",\n  shadow: true,\n})\nexport class ZIcon {\n  /** icon name */\n  @Prop()\n  name: string;\n\n  /** icon height (optional) */\n  @Prop()\n  height?: number;\n\n  /** icon width (optional) */\n  @Prop()\n  width?: number;\n\n  /** icon id (optional) */\n  @Prop()\n  iconid?: string;\n\n  /** icon fill (optional) */\n  @Prop()\n  fill?: string;\n\n  private selectPathOrPolygon(iconValue: string): SVGPathElement | SVGPolygonElement {\n    if (iconValue?.startsWith(\"M\")) {\n      return <path d={ICONS[this.name]}></path>;\n    }\n\n    return <polygon points={ICONS[this.name]}></polygon>;\n  }\n\n  render(): SVGElement {\n    return (\n      <Host aria-hidden=\"true\">\n        <svg\n          viewBox=\"0 0 1000 1000\"\n          width={this.width}\n          height={this.height}\n          id={this.iconid}\n          fill={this.fill ? `var(--${this.fill})` : \"\"}\n        >\n          {this.selectPathOrPolygon(ICONS[this.name])}\n        </svg>\n      </Host>\n    );\n  }\n}\n","@import \"styles-general.css\";\n@import \"styles-text.css\";\n@import \"styles-textarea.css\";\n@import \"styles-checkbox-radio.css\";\n","import {Component, Prop, State, h, Method, Event, EventEmitter, Element, Listen} from \"@stencil/core\";\nimport {Host, JSXBase} from \"@stencil/core/internal\";\nimport {InputType, LabelPosition, InputStatus, ControlSize} from \"../../../beans\";\nimport {boolean, randomId} from \"../../../utils/utils\";\n\n@Component({\n  tag: \"z-input\",\n  styleUrl: \"styles.css\",\n  shadow: false,\n  scoped: true,\n})\nexport class ZInput {\n  @Element() hostElement: HTMLZInputElement;\n\n  /** the id of the input element */\n  @Prop()\n  htmlid = `id-${randomId()}`;\n\n  /** input types */\n  @Prop()\n  type: InputType;\n\n  /** the input name */\n  @Prop()\n  name?: string;\n\n  /** the input label */\n  @Prop()\n  label?: string;\n\n  /** the input aria-label */\n  @Prop()\n  ariaLabel = \"\";\n\n  /** the input aria-expaded (optional): available for text, password, number, email */\n  @Prop()\n  ariaExpanded?: string;\n\n  /** the input aria-controls (optional): available for text, password, number, email */\n  @Prop()\n  ariaControls?: string;\n\n  /** the input aria-autocomplete (optional): available for text, password, number, email */\n  @Prop()\n  ariaAutocomplete?: string;\n\n  /** the input aria-activedescendant (optional): available for text, password, number, email */\n  @Prop()\n  ariaActivedescendant?: string;\n\n  /** the input value */\n  @Prop({mutable: true})\n  value?: string;\n\n  /** the input is disabled */\n  @Prop({reflect: true})\n  disabled?: boolean = false;\n\n  /** the input is readonly */\n  @Prop()\n  readonly?: boolean = false;\n\n  /** the input is required (optional): available for text, password, number, email, textarea, checkbox */\n  @Prop()\n  required?: boolean = false;\n\n  /** checked: available for checkbox, radio */\n  @Prop({mutable: true})\n  checked?: boolean = false;\n\n  /** the input placeholder (optional) */\n  @Prop()\n  placeholder?: string;\n\n  /** the input html title (optional) */\n  @Prop()\n  htmltitle?: string;\n\n  /** the input status (optional): available for text, password, number, email, textarea */\n  @Prop()\n  status?: InputStatus;\n\n  /** input helper message (optional): available for text, password, number, email, textarea - if set to `false` message won't be displayed */\n  @Prop()\n  message?: string | boolean = true;\n\n  /** the input label position: available for checkbox, radio */\n  @Prop()\n  labelPosition?: LabelPosition = LabelPosition.RIGHT;\n\n  /** the input has autocomplete option (optional): available for text, password, number, email */\n  @Prop()\n  autocomplete?: string;\n\n  /** the input role (optional) */\n  @Prop()\n  role?: string;\n\n  /** render clear icon when typing (optional): available for text */\n  @Prop()\n  hasclearicon?: boolean = true;\n\n  /** render icon (optional): available for text */\n  @Prop()\n  icon?: string;\n\n  /** min number value (optional): available for number */\n  @Prop()\n  min?: number;\n\n  /** Min length value (optional): available for text */\n  @Prop()\n  minlength?: number;\n\n  /** max number value (optional): available for number */\n  @Prop()\n  max?: number;\n\n  /** Max length value (optional): available for text */\n  @Prop()\n  maxlength?: number;\n\n  /** step number value (optional): available for number */\n  @Prop()\n  step?: number;\n\n  /** pattern value (optional): available for tel, text, search, url, email, password*/\n  @Prop()\n  pattern?: string;\n\n  /** Available sizes: `big`, `small` and `x-small`. Defaults to `big`. */\n  @Prop({reflect: true})\n  size?: ControlSize = ControlSize.BIG;\n\n  @State()\n  isTyping = false;\n\n  @State()\n  passwordHidden = true;\n\n  private timer;\n\n  private typingtimeout = 300;\n\n  private inputRef: HTMLInputElement;\n\n  @Listen(\"inputCheck\", {target: \"document\"})\n  inputCheckListener(e: CustomEvent): void {\n    const data = e.detail;\n    switch (this.type) {\n      case InputType.RADIO:\n        if (data.type === InputType.RADIO && data.name === this.name && data.id !== this.htmlid) {\n          this.checked = false;\n        }\n        break;\n    }\n  }\n\n  /** get checked status */\n  @Method()\n  async isChecked(): Promise<boolean> {\n    switch (this.type) {\n      case InputType.CHECKBOX:\n      case InputType.RADIO:\n        return this.checked;\n      default:\n        console.warn(\"`isChecked` method is only available for type `checkbox` and `radio`\");\n\n        return false;\n    }\n  }\n\n  /** Emitted on input value change, returns value, validity */\n  @Event()\n  inputChange: EventEmitter;\n\n  private emitInputChange(value: string): void {\n    if (!this.isTyping) {\n      this.emitStartTyping();\n    }\n\n    let validity: ValidityState;\n    if (this.type === InputType.TEXTAREA) {\n      validity = this.getValidity(\"textarea\");\n    } else {\n      validity = this.getValidity(\"input\");\n    }\n    this.value = value;\n    this.inputChange.emit({value, validity});\n\n    clearTimeout(this.timer);\n    this.timer = setTimeout(() => {\n      this.emitStopTyping(this.value, validity);\n    }, this.typingtimeout);\n  }\n\n  /** Emitted when user starts typing */\n  @Event()\n  startTyping: EventEmitter;\n\n  private emitStartTyping(): void {\n    this.isTyping = true;\n    this.startTyping.emit();\n  }\n\n  /** Emitted when user stops typing, returns value, validity */\n  @Event()\n  stopTyping: EventEmitter;\n\n  private emitStopTyping(value: string, validity: ValidityState): void {\n    this.isTyping = false;\n    this.stopTyping.emit({\n      value: value,\n      validity: validity,\n    });\n  }\n\n  /** Emitted on checkbox check/uncheck, returns id, checked, type, name, value, validity */\n  @Event()\n  inputCheck: EventEmitter;\n\n  private emitInputCheck(checked: boolean): void {\n    this.inputCheck.emit({\n      id: this.htmlid,\n      checked: checked,\n      type: this.type,\n      name: this.name,\n      value: this.value,\n      validity: this.getValidity(\"input\"),\n    });\n  }\n\n  private getValidity(type: string): ValidityState {\n    const input = this.hostElement.querySelector(type) as HTMLInputElement;\n\n    return input.validity;\n  }\n\n  /* START text/password/email/number */\n\n  private getTextAttributes(): JSXBase.InputHTMLAttributes<HTMLInputElement | HTMLTextAreaElement> {\n    return {\n      id: this.htmlid,\n      name: this.name,\n      placeholder: this.placeholder,\n      value: this.value,\n      disabled: this.disabled,\n      readonly: this.readonly,\n      required: this.required,\n      title: this.htmltitle,\n      minlength: this.minlength,\n      maxlength: this.maxlength,\n      class: {\n        [`input-${this.status}`]: !!this.status,\n        filled: !!this.value,\n      },\n      autocomplete: this.autocomplete,\n      onInput: (e: InputEvent) => this.emitInputChange((e.target as HTMLInputElement).value),\n    };\n  }\n\n  private getNumberAttributes(type: InputType): JSXBase.InputHTMLAttributes<HTMLInputElement> {\n    if (type != InputType.NUMBER) {\n      return;\n    }\n\n    return {\n      min: this.min,\n      max: this.max,\n      step: this.step,\n    };\n  }\n\n  private getPatternAttribute(type: InputType): JSXBase.InputHTMLAttributes<HTMLInputElement> {\n    if (\n      type != InputType.PASSWORD &&\n      type != InputType.TEXT &&\n      type != InputType.TEL &&\n      type != InputType.SEARCH &&\n      type != InputType.URL &&\n      type != InputType.EMAIL\n    ) {\n      return;\n    }\n\n    return {\n      pattern: this.pattern,\n    };\n  }\n\n  private getRoleAttribute(): JSXBase.InputHTMLAttributes<HTMLInputElement | HTMLTextAreaElement> {\n    return this.role ? {role: this.role} : {};\n  }\n\n  private getAriaAttrubutes(): Record<string, unknown> {\n    const expanded = this.ariaExpanded ? {\"aria-expanded\": this.ariaExpanded} : {};\n    const controls = this.ariaControls ? {\"aria-controls\": this.ariaControls} : {};\n    const autocomplete = this.ariaAutocomplete ? {\"aria-autocomplete\": this.ariaAutocomplete} : {};\n    const activedescendant = this.ariaActivedescendant ? {\"aria-activedescendant\": this.ariaActivedescendant} : {};\n\n    return {\n      ...expanded,\n      ...controls,\n      ...autocomplete,\n      ...activedescendant,\n    };\n  }\n\n  private renderInputText(type: InputType = InputType.TEXT): HTMLDivElement {\n    const ariaLabel = this.ariaLabel ? {\"aria-label\": this.ariaLabel} : {};\n    const attr = {\n      ...this.getTextAttributes(),\n      ...this.getNumberAttributes(type),\n      ...this.getPatternAttribute(type),\n      ...ariaLabel,\n      ...this.getRoleAttribute(),\n      ...this.getAriaAttrubutes(),\n    };\n    if (this.icon || type === InputType.PASSWORD) {\n      Object.assign(attr.class, {\"has-icon\": true});\n    }\n    if (this.hasclearicon && type != InputType.NUMBER) {\n      Object.assign(attr.class, {\"has-clear-icon\": true});\n    }\n\n    return (\n      <div class=\"text-wrapper\">\n        {this.renderLabel()}\n        <div>\n          <input\n            type={type === InputType.PASSWORD && !this.passwordHidden ? InputType.TEXT : type}\n            {...attr}\n            ref={(el) => (this.inputRef = el)}\n          />\n          {this.renderIcons()}\n        </div>\n        {this.renderMessage()}\n      </div>\n    );\n  }\n\n  private renderLabel(): HTMLLabelElement {\n    if (!this.label) {\n      return;\n    }\n\n    return (\n      <label\n        class=\"input-label body-5-sb\"\n        id={`${this.htmlid}_label`}\n        htmlFor={this.htmlid}\n      >\n        {this.label}\n      </label>\n    );\n  }\n\n  private renderIcons(): HTMLSpanElement {\n    return (\n      <span class=\"icons-wrapper\">\n        {this.renderResetIcon()}\n        {this.renderIcon()}\n      </span>\n    );\n  }\n\n  private renderIcon(): HTMLButtonElement {\n    if (this.type === InputType.PASSWORD) {\n      return this.renderShowHidePassword();\n    }\n\n    if (!this.icon) {\n      return;\n    }\n\n    return (\n      <button\n        type=\"button\"\n        class=\"icon-button input-icon\"\n        tabIndex={-1}\n        aria-hidden=\"true\"\n      >\n        <z-icon\n          name={this.icon}\n          class={this.size}\n        />\n      </button>\n    );\n  }\n\n  private renderResetIcon(): HTMLButtonElement {\n    let hidden = false;\n    if (!this.hasclearicon || !this.value || this.disabled || this.readonly || this.type == InputType.NUMBER) {\n      hidden = true;\n    }\n\n    return (\n      <button\n        type=\"button\"\n        class={`icon-button reset-icon ${hidden ? \"hidden\" : \"\"}`}\n        aria-label=\"cancella il contenuto dell'input\"\n        onClick={() => {\n          this.inputRef.value = \"\";\n          this.emitInputChange(\"\");\n        }}\n      >\n        <z-icon\n          name=\"multiply\"\n          class={this.size}\n        />\n      </button>\n    );\n  }\n\n  private renderShowHidePassword(): HTMLButtonElement {\n    return (\n      <button\n        type=\"button\"\n        class=\"icon-button toggle-password-icon\"\n        disabled={this.disabled}\n        aria-label={this.passwordHidden ? \"mostra password\" : \"nascondi password\"}\n        onClick={() => (this.passwordHidden = !this.passwordHidden)}\n      >\n        <z-icon\n          name={this.passwordHidden ? \"view-filled\" : \"view-off-filled\"}\n          class={this.size}\n        />\n      </button>\n    );\n  }\n\n  private renderMessage(): HTMLZInputMessageElement {\n    if (boolean(this.message) === false) {\n      return;\n    }\n\n    return (\n      <z-input-message\n        message={boolean(this.message) === true ? undefined : (this.message as string)}\n        status={this.status}\n        class={this.size}\n      />\n    );\n  }\n\n  /* END text/password/email/number */\n\n  /* START textarea */\n\n  private renderTextarea(): HTMLDivElement {\n    const attributes = this.getTextAttributes();\n    const ariaLabel = this.ariaLabel ? {\"aria-label\": this.ariaLabel} : {};\n\n    return (\n      <div class=\"text-wrapper\">\n        {this.renderLabel()}\n        <div\n          class={{\n            ...(attributes.class as Record<string, boolean>),\n            \"textarea-wrapper\": true,\n            \"readonly\": attributes.readonly as boolean,\n          }}\n        >\n          <textarea\n            {...attributes}\n            {...ariaLabel}\n            {...this.getRoleAttribute()}\n          ></textarea>\n        </div>\n        {this.renderMessage()}\n      </div>\n    );\n  }\n\n  /* END textarea */\n\n  private handleCheck(ev: Event): void {\n    this.checked = (ev.target as HTMLInputElement).checked;\n    this.emitInputCheck(this.checked);\n  }\n\n  /* START checkbox */\n  private renderCheckbox(): HTMLDivElement {\n    return (\n      <div class=\"checkbox-wrapper\">\n        <input\n          id={this.htmlid}\n          type=\"checkbox\"\n          name={this.name}\n          checked={this.checked}\n          disabled={this.disabled}\n          readonly={this.readonly}\n          required={this.required}\n          onChange={this.handleCheck.bind(this)}\n          value={this.value}\n          {...this.getRoleAttribute()}\n        />\n\n        <label\n          htmlFor={this.htmlid}\n          class={{\n            \"checkbox-label\": true,\n            \"after\": this.labelPosition === LabelPosition.RIGHT,\n            \"before\": this.labelPosition === LabelPosition.LEFT,\n          }}\n        >\n          <z-icon\n            name={this.checked ? \"checkbox-checked\" : \"checkbox\"}\n            aria-hidden=\"true\"\n            class={this.size}\n          />\n          {this.label && <span innerHTML={this.label}></span>}\n        </label>\n      </div>\n    );\n  }\n\n  /* END checkbox */\n\n  /* START radio */\n  private renderRadio(): HTMLDivElement {\n    return (\n      <div class=\"radio-wrapper\">\n        <input\n          id={this.htmlid}\n          type=\"radio\"\n          name={this.name}\n          checked={this.checked}\n          disabled={this.disabled}\n          readonly={this.readonly}\n          onChange={this.handleCheck.bind(this)}\n          value={this.value}\n          {...this.getRoleAttribute()}\n        />\n\n        <label\n          htmlFor={this.htmlid}\n          class={{\n            \"radio-label\": true,\n            \"after\": this.labelPosition === LabelPosition.RIGHT,\n            \"before\": this.labelPosition === LabelPosition.LEFT,\n          }}\n        >\n          <z-icon\n            name={this.checked ? \"radio-button-checked\" : \"radio-button\"}\n            aria-hidden=\"true\"\n            class={this.size}\n          />\n          {this.label && <span innerHTML={this.label} />}\n        </label>\n      </div>\n    );\n  }\n  /* END radio */\n\n  render(): HTMLInputElement | HTMLDivElement {\n    let input;\n    switch (this.type) {\n      case InputType.TEXTAREA:\n        input = this.renderTextarea();\n        break;\n      case InputType.CHECKBOX:\n        input = this.renderCheckbox();\n        break;\n      case InputType.RADIO:\n        input = this.renderRadio();\n        break;\n      default:\n        input = this.renderInputText(this.type);\n    }\n\n    return <Host>{input}</Host>;\n  }\n}\n",":host {\n  display: flex;\n  min-height: calc(var(--space-unit) * 2.5);\n  align-items: start;\n  margin-top: var(--space-unit);\n  color: var(--color-text05);\n  fill: currentcolor;\n  font-family: var(--font-family-sans);\n  font-size: var(--font-size-2);\n  letter-spacing: 0.16px;\n}\n\n:host(.small),\n:host(.x-small) {\n  margin-top: calc(var(--space-unit) * 0.5);\n  font-size: var(--font-size-1);\n}\n\n:host([status=\"success\"]) {\n  color: var(--color-text-success);\n}\n\n:host([status=\"error\"]) {\n  color: var(--color-text-error);\n}\n\n:host([status=\"warning\"]) {\n  color: var(--color-warning02);\n}\n\n:host(:focus) {\n  outline: none;\n}\n\n:host > z-icon {\n  --z-icon-width: calc(var(--space-unit) * 2);\n  --z-icon-height: calc(var(--space-unit) * 2);\n  --z-icon-right-margin: var(--space-unit);\n\n  margin-top: calc(var(--space-unit) * 0.25);\n}\n\n:host(.small) > z-icon,\n:host(.x-small) > z-icon {\n  --z-icon-width: 14px;\n  --z-icon-height: 14px;\n  --z-icon-right-margin: calc(var(--space-unit) * 0.5);\n}\n","import {Component, Prop, Watch, State, h, Host} from \"@stencil/core\";\nimport {InputStatus} from \"../../../beans\";\n\n@Component({\n  tag: \"z-input-message\",\n  styleUrl: \"styles.css\",\n  shadow: true,\n})\nexport class ZInputMessage {\n  /** input helper message */\n  @Prop()\n  message: string;\n\n  /** input status (optional) */\n  @Prop({reflect: true})\n  status?: InputStatus;\n\n  private statusIcons = {\n    success: \"checkmark-circle\",\n    error: \"multiply-circled\",\n    warning: \"exclamation-circle\",\n  };\n\n  @State()\n  statusRole = {};\n\n  @Watch(\"message\")\n  @Watch(\"status\")\n  onMessageChange(): void {\n    this.statusRole = this.message && this.status ? {role: \"alert\"} : {};\n  }\n\n  componentWillLoad(): void {\n    this.onMessageChange();\n  }\n\n  render(): HTMLZInputMessageElement {\n    return (\n      <Host\n        {...this.statusRole}\n        aria-label={this.message}\n      >\n        {this.statusIcons[this.status] && this.message && <z-icon name={this.statusIcons[this.status]}></z-icon>}\n        <span innerHTML={this.message} />\n      </Host>\n    );\n  }\n}\n",":host {\n  display: flex;\n  flex-direction: column;\n  font-family: var(--font-family-sans);\n  font-weight: var(--font-rg);\n}\n","import {Component, Element, h, Prop, Host} from \"@stencil/core\";\n\nimport {ListSize, ListType} from \"../../../beans\";\n\n@Component({\n  tag: \"z-list\",\n  styleUrl: \"styles.css\",\n  shadow: true,\n})\nexport class ZList {\n  @Element() host: HTMLZListElement;\n\n  /**\n   * [optional] Sets size of inside elements.\n   */\n  @Prop({reflect: true})\n  size?: ListSize = ListSize.MEDIUM;\n\n  /**\n   * [optional] type of the list marker for each element\n   */\n  @Prop({reflect: true})\n  listType?: ListType = ListType.NONE;\n\n  /**\n   * [optional] Sets role of the element.\n   */\n  @Prop({reflect: true})\n  role?: string = \"list\";\n\n  private setChildrenSizeType(): void {\n    const children = this.host.children;\n    for (let i = 0; i < children.length; i++) {\n      children[i].setAttribute(\"size\", this.size);\n      children[i].setAttribute(\"list-type\", this.listType);\n      children[i].setAttribute(\"list-element-position\", (i + 1).toString());\n    }\n  }\n\n  componentDidLoad(): void {\n    this.setChildrenSizeType();\n  }\n\n  render(): HTMLZListElement {\n    return (\n      <Host>\n        <slot />\n      </Host>\n    );\n  }\n}\n",":host {\n  outline: none;\n}\n\n:host > .container,\n:host > .container-contextual-menu {\n  --background-color-list-element: var(--color-surface01);\n  --background-hover-color-list-element: var(--color-surface02);\n  --background-active-color-list-element: var(--color-surface02);\n\n  display: flex;\n  box-sizing: border-box;\n  flex-direction: column;\n  justify-content: center;\n  font-family: var(--font-family-sans);\n  font-weight: var(--font-rg);\n  outline: none;\n}\n\n/* z-list-element size */\n\n:host([size=\"small\"]) > .container {\n  min-height: calc(var(--space-unit) * 4);\n  padding: calc(var(--space-unit) / 2) 0;\n}\n\n:host([size=\"medium\"]) > .container {\n  min-height: calc(var(--space-unit) * 5);\n  padding: var(--space-unit) 0;\n}\n\n:host([size=\"large\"]) > .container {\n  min-height: calc(var(--space-unit) * 7);\n  padding: calc(var(--space-unit) * 2) 0;\n}\n\n:host([size=\"x-large\"]) > .container {\n  min-height: calc(var(--space-unit) * 9);\n  padding: calc(var(--space-unit) * 3) 0;\n}\n\n/* ----------------- */\n\n:host([expandable]) > .container,\n:host([expandable]) > .container-contextual-menu,\n:host([clickable]) > .container,\n:host([clickable]) > .container-contextual-menu {\n  cursor: pointer;\n}\n\n:host([expandable]:hover) > .container,\n:host([expandable]:hover) > .container-contextual-menu,\n:host([clickable]:hover) > .container,\n:host([clickable]:hover) > .container-contextual-menu {\n  background-color: var(--background-hover-color-list-element);\n}\n\n:host([expandable]:focus:focus-visible) > .container,\n:host([expandable]:focus:focus-visible) > .container-contextual-menu,\n:host([clickable]:focus:focus-visible) > .container,\n:host([clickable]:focus:focus-visible) > .container-contextual-menu {\n  box-shadow: var(--shadow-focus-primary);\n}\n\n:host([clickable]:not([expandable])) > .container.clicked,\n:host([clickable]:not([expandable])) > .container-contextual-menu.clicked {\n  box-shadow: var(--shadow-focus-primary);\n}\n\n:host([expandable]:active) > .container,\n:host([expandable]:active) > .container-contextual-menu,\n:host([clickable]:active) > .container,\n:host([clickable]:active) > .container-contextual-menu {\n  background-color: var(--background-active-color-list-element);\n}\n\n:host([align-button=\"left\"][expandable]) > .container > .z-list-element-container,\n:host([align-button=\"left\"][expandable]) > .container-contextual-menu > .z-list-element-container {\n  display: flex;\n}\n\n:host([align-button=\"right\"][expandable]) > .container > .z-list-element-container,\n:host([align-button=\"right\"][expandable]) > .container-contextual-menu > .z-list-element-container {\n  display: flex;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n}\n\n:host([align-button=\"left\"][expandable]) > .container > .z-list-element-container > z-icon,\n:host([align-button=\"left\"][expandable]) > .container-contextual-menu > .z-list-element-container > z-icon {\n  margin-right: var(--space-unit);\n}\n\n:host([align-button=\"right\"][expandable]) > .container > .z-list-element-container > z-icon,\n:host([align-button=\"right\"][expandable]) > .container-contextual-menu > .z-list-element-container > z-icon {\n  margin-left: var(--space-unit);\n}\n\n:host > .container > .z-list-element-inner-container,\n:host > .container-contextual-menu > .z-list-element-inner-container {\n  display: none;\n}\n\n:host > .container > .z-list-element-inner-container.expanded,\n:host > .container-contextual-menu > .z-list-element-inner-container.expanded {\n  display: block;\n}\n\n:host([clickable]:hover) > .container-contextual-menu {\n  background-color: var(--color-surface03);\n}\n\n.container-contextual-menu:focus-visible {\n  box-shadow: var(--shadow-focus-primary);\n  outline: none;\n}\n\n.z-list-content-container {\n  display: flex;\n  align-items: center;\n}\n","import {Component, Element, Event, EventEmitter, h, Host, Listen, Prop, State} from \"@stencil/core\";\nimport {\n  DividerSize,\n  ExpandableListButtonAlign,\n  ExpandableListStyle,\n  KeyboardCode,\n  ListDividerType,\n  ListSize,\n  ListType,\n} from \"../../../beans\";\n\n@Component({\n  tag: \"z-list-element\",\n  styleUrl: \"styles.css\",\n  shadow: true,\n})\nexport class ZListElement {\n  @Element() host: HTMLZListElementElement;\n\n  /** remove filter click event, returns filterid */\n  @Event({\n    eventName: \"accessibleFocus\",\n    composed: true,\n    cancelable: true,\n    bubbles: true,\n  })\n  accessibleFocus: EventEmitter<number>;\n\n  /** set parent aria-activedescendant on focus event, returns filterid */\n  @Event({\n    eventName: \"ariaDescendantFocus\",\n    composed: true,\n    cancelable: true,\n    bubbles: true,\n  })\n  ariaDescendantFocus: EventEmitter<number>;\n\n  /** remove filter click event, returns filterid */\n  @Event({\n    eventName: \"clickItem\",\n    composed: true,\n    cancelable: true,\n    bubbles: true,\n  })\n  clickItem: EventEmitter;\n\n  @Listen(\"accessibleFocus\", {target: \"document\"})\n  accessibleFocusHandler(e: CustomEvent): void {\n    if (this.listElementId === e.detail) {\n      const toFocus = this.host.shadowRoot.getElementById(`z-list-element-id-${e.detail}`);\n      toFocus.focus();\n    }\n  }\n\n  /**\n   * [optional] Align expandable button left or right.\n   */\n  @Prop({reflect: true})\n  alignButton?: ExpandableListButtonAlign = ExpandableListButtonAlign.LEFT;\n\n  /**\n   * [optional] Sets element clickable.\n   */\n  @Prop({reflect: true})\n  clickable?: boolean = false;\n\n  /**\n   * [optional] Sets the divider color.\n   */\n  @Prop()\n  dividerColor?: string = \"color-surface03\";\n\n  /**\n   * [optional] Sets the position where to insert the divider.\n   */\n  @Prop()\n  dividerType?: ListDividerType = ListDividerType.NONE;\n\n  /**\n   * [optional] Sets the divider size.\n   */\n  @Prop()\n  dividerSize?: DividerSize = DividerSize.SMALL;\n\n  /**\n   * [optional] Sets element as expandable.\n   */\n  @Prop({reflect: true})\n  expandable?: boolean = false;\n\n  /**\n   * [optional] Sets expandable style to element.\n   */\n  @Prop()\n  expandableStyle?: ExpandableListStyle = ExpandableListStyle.ACCORDION;\n\n  /**\n   * [optional] List element id.\n   */\n  @Prop({reflect: true})\n  listElementId?: number;\n\n  /**\n   * [optional] Sets size of inside elements.\n   */\n  @Prop({reflect: true})\n  size?: ListSize = ListSize.MEDIUM;\n\n  /**\n   * [optional] Sets text color of the element.\n   */\n  @Prop({reflect: true})\n  color?: string = \"none\";\n\n  /**\n   * [optional] Sets disabled style of the element.\n   */\n  @Prop({reflect: true})\n  disabled?: boolean = false;\n\n  /**\n   * [optional] If is used in ZContextualMenu component\n   */\n  @Prop({reflect: true})\n  isContextualMenu?: boolean = false;\n\n  /**\n   * [optional] position of the list element inside the list or the group\n   */\n  @Prop({reflect: true})\n  listElementPosition?: string = \"0\";\n\n  /**\n   * [optional] type of the list marker for each element\n   */\n  @Prop({reflect: true})\n  listType?: ListType = ListType.NONE;\n\n  /**\n   * [optional] Sets element role.\n   */\n  @Prop({reflect: true})\n  role?: string = \"listitem\";\n\n  @State()\n  showInnerContent = false;\n\n  private openElementConfig = {\n    accordion: {\n      open: \"minus-circled\",\n      close: \"plus-circled\",\n    },\n    menu: {\n      open: \"chevron-up\",\n      close: \"chevron-down\",\n    },\n  };\n\n  /**\n   * Constructor.\n   */\n  constructor() {\n    this.handleClick = this.handleClick.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  /**\n   * Handler for click on element. If element is expandable, change state.\n   * @returns void\n   */\n  private handleClick(): void {\n    this.clickItem.emit(this.listElementId);\n    if (!this.expandable) {\n      return;\n    }\n    this.showInnerContent = !this.showInnerContent;\n  }\n\n  private calculateClass(): string {\n    if (this.isContextualMenu) {\n      return \"container-contextual-menu\";\n    }\n\n    return \"container\";\n  }\n\n  private handleKeyDown(event): void {\n    const expandByKey = event.code === KeyboardCode.ENTER;\n    switch (event.code) {\n      case KeyboardCode.ARROW_DOWN:\n        event.preventDefault();\n        this.accessibleFocus.emit(this.listElementId + 1);\n        break;\n      case KeyboardCode.ARROW_UP:\n        event.preventDefault();\n        this.accessibleFocus.emit(this.listElementId - 1);\n        break;\n      case KeyboardCode.ENTER:\n        event.preventDefault();\n        this.clickItem.emit(this.listElementId);\n        break;\n      default:\n        break;\n    }\n\n    if (!this.expandable || !expandByKey) {\n      return;\n    }\n    this.showInnerContent = !this.showInnerContent;\n  }\n\n  /**\n   * Renders button to expand element.\n   * @returns expadable button\n   */\n  private renderExpandableButton(): HTMLZIconElement {\n    if (!this.expandable) {\n      return null;\n    }\n\n    return (\n      <z-icon\n        name={\n          this.showInnerContent\n            ? this.openElementConfig[this.expandableStyle].open\n            : this.openElementConfig[this.expandableStyle].close\n        }\n      />\n    );\n  }\n\n  /**\n   * Renders expanded content if element is expandable.\n   * @returns expanded content\n   */\n  private renderExpandedContent(): HTMLDivElement {\n    if (!this.expandable) {\n      return null;\n    }\n\n    return (\n      <div\n        class={{\n          \"z-list-element-inner-container\": true,\n          \"expanded\": this.showInnerContent,\n        }}\n      >\n        <slot name=\"inner-content\" />\n      </div>\n    );\n  }\n\n  /**\n   * Renders content of the z-list-element\n   * @returns list content\n   */\n  private renderContent(): HTMLDivElement {\n    if (this.listType === ListType.NONE) {\n      return <slot />;\n    }\n\n    if (this.listType === ListType.ORDERED) {\n      return (\n        <div class=\"z-list-content-container\">\n          <div>{this.listElementPosition}.&emsp;</div>\n          <slot />\n        </div>\n      );\n    }\n\n    if (this.listType === ListType.UNORDERED) {\n      return (\n        <div class=\"z-list-content-container\">\n          <span>&bull;&emsp;</span>\n          <slot />\n        </div>\n      );\n    }\n  }\n\n  render(): HTMLZListElementElement {\n    return (\n      <Host\n        aria-expanded={this.expandable ? this.showInnerContent : null}\n        onClick={this.handleClick}\n        onFocus={() => this.ariaDescendantFocus.emit(this.listElementId)}\n        onKeyDown={this.handleKeyDown}\n        clickable={this.clickable && !this.disabled}\n        tabIndex={!this.isContextualMenu ? \"0\" : null}\n      >\n        <div\n          class={`${this.calculateClass()}`}\n          style={{color: `var(--${this.color})`}}\n          tabindex={this.isContextualMenu ? \"0\" : \"-1\"}\n          id={`z-list-element-id-${this.listElementId}`}\n          part=\"list-item-container\"\n        >\n          <div class=\"z-list-element-container\">\n            {this.renderExpandableButton()}\n            {this.renderContent()}\n          </div>\n          {this.renderExpandedContent()}\n        </div>\n        {this.dividerType === ListDividerType.ELEMENT && (\n          <z-divider\n            color={this.dividerColor}\n            size={this.dividerSize}\n          />\n        )}\n      </Host>\n    );\n  }\n}\n",":host {\n  font-family: var(--font-family-sans);\n  font-weight: var(--font-rg);\n}\n\n:host > .z-list-group-header-container {\n  color: var(--gray700);\n  font-size: var(--font-size-2);\n  font-weight: var(--font-sb) !important;\n  letter-spacing: 0.16px;\n  line-height: 1.4;\n}\n\n:host > .z-list-group-header-container.has-header {\n  padding-top: var(--space-unit);\n  padding-bottom: var(--space-unit);\n}\n\n:host > .z-list-group-header-container.has-header > z-divider {\n  margin-top: var(--space-unit);\n}\n","import {Component, Element, h, Host, Prop} from \"@stencil/core\";\nimport {DividerSize, ListSize, ListDividerType, ListType} from \"../../../beans\";\n\n@Component({\n  tag: \"z-list-group\",\n  styleUrl: \"styles.css\",\n  shadow: true,\n})\nexport class ZListGroup {\n  @Element() host: HTMLZListGroupElement;\n\n  /**\n   * [optional] Sets size of inside elements.\n   */\n  @Prop({reflect: true})\n  size?: ListSize = ListSize.MEDIUM;\n\n  /**\n   * [optional] Sets the position where to insert the divider.\n   */\n  @Prop({reflect: true})\n  dividerType?: ListDividerType = ListDividerType.NONE;\n\n  /**\n   * [optional] Sets the divider size.\n   */\n  @Prop({reflect: true})\n  dividerSize?: DividerSize = DividerSize.SMALL;\n\n  /**\n   * [optional] Sets the divider color.\n   */\n  @Prop({reflect: true})\n  dividerColor?: string = \"gray200\";\n\n  /**\n   * [optional] type of the list marker for each element\n   */\n  @Prop({reflect: true})\n  listType?: ListType = ListType.NONE;\n\n  private hasHeader: boolean;\n\n  componentDidLoad(): void {\n    const children = this.host.children;\n    for (let i = 0; i < children.length; i++) {\n      if (children.length - 1 > i) {\n        children[i].setAttribute(\"divider-type\", this.dividerType);\n        children[i].setAttribute(\"divider-size\", this.dividerSize);\n        children[i].setAttribute(\"divider-color\", this.dividerColor);\n      }\n      children[i].setAttribute(\"size\", this.size);\n      children[i].setAttribute(\"list-type\", this.listType);\n      children[i].setAttribute(\"list-element-position\", i.toString());\n    }\n  }\n\n  componentWillLoad(): void {\n    this.hasHeader = !!this.host.querySelector('[slot=\"header-title\"]');\n  }\n\n  render(): HTMLZListGroupElement {\n    return (\n      <Host role=\"group\">\n        <div\n          class={{\n            \"z-list-group-header-container\": true,\n            \"has-header\": this.hasHeader,\n          }}\n        >\n          <slot name=\"header-title\" />\n          {this.dividerType === ListDividerType.HEADER && (\n            <z-divider\n              color={this.dividerColor}\n              size={this.dividerSize}\n            />\n          )}\n        </div>\n        <slot />\n      </Host>\n    );\n  }\n}\n",":host {\n  --z-offcanvas--container-width: 375px;\n  --z-offcanvas--top-space: 0;\n\n  min-width: 100%;\n  height: 100%;\n  font-family: var(--font-family-sans);\n  font-weight: var(--font-rg);\n}\n\n.canvas-container {\n  display: flex;\n  overflow: -moz-scrollbars-none;\n  overflow: hidden;\n  min-width: 100%;\n  height: 100%;\n  flex-direction: column;\n  background: var(--color-surface01);\n}\n\n:host([variant=\"pushcontent\"]) {\n  display: none;\n}\n\n:host([open]) {\n  display: flex;\n  visibility: visible;\n}\n\n:host(:not([open])) {\n  visibility: hidden;\n}\n\n:host([variant=\"overlay\"]) {\n  position: fixed;\n  z-index: 1000;\n  top: var(--z-offcanvas--top-space);\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  height: calc(100% - var(--z-offcanvas--top-space));\n}\n\n:host([variant=\"overlay\"][transitiondirection=\"left\"]) {\n  justify-content: end;\n}\n\n:host([variant=\"overlay\"]) > .canvas-container {\n  z-index: 1010;\n}\n\n:host([variant=\"overlay\"]) .canvas-background {\n  position: absolute;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: var(--gray900);\n  opacity: 0.7;\n}\n\n.canvas-container > .canvas-content {\n  overflow: auto;\n  flex: 1 auto;\n  padding: 0 calc(var(--space-unit) * 2);\n  margin: calc(var(--space-unit) * 2) calc(var(--space-unit) / 2) calc(var(--space-unit) * 2) 0;\n  overflow-x: hidden;\n}\n\n:host([variant=\"overlay\"]) > .canvas-container > .canvas-content {\n  padding: 0 calc(var(--space-unit) * 2) calc(var(--space-unit) * 2) calc(var(--space-unit) * 2);\n  margin: calc(var(--space-unit) * 2) calc(var(--space-unit) / 2) 0 0;\n}\n\n/* Webkit Scrollbar */\n.canvas-container .canvas-content::-webkit-scrollbar {\n  width: 10px;\n  background: linear-gradient(to right, transparent 0 3px, var(--gray200) 3px 7px, transparent 7px 10px);\n  border-radius: var(--border-radius);\n}\n\n.canvas-container .canvas-content::-webkit-scrollbar-track {\n  background-color: transparent;\n}\n\n.canvas-container .canvas-content::-webkit-scrollbar-thumb {\n  width: 10px;\n  background-color: var(--color-primary01);\n  border-radius: var(--border-radius);\n}\n\n.canvas-container .canvas-content::-webkit-scrollbar-thumb:hover {\n  background-color: var(--color-hover-primary);\n}\n\n/* Firefox */\n.canvas-container .canvas-content {\n  scrollbar-color: var(--color-primary01) transparent;\n}\n\n/* Mobile */\n@media only screen and (max-width: 768px) {\n  :host([open][transitiondirection=\"left\"]:not(.skip-animation)) > .canvas-container {\n    animation: enter-right 0.4s ease-out;\n  }\n\n  :host([open][transitiondirection=\"right\"]:not(.skip-animation)) > .canvas-container {\n    animation: enter-left 0.4s ease-out;\n  }\n}\n\n/* Tablet / Desktop */\n@media only screen and (min-width: 768px) {\n  :host {\n    min-width: auto;\n  }\n\n  .canvas-container {\n    width: auto;\n    min-width: max(var(--z-offcanvas--container-width), 375px);\n    max-width: max(var(--z-offcanvas--container-width), 375px);\n    height: auto;\n    min-height: calc(var(--space-unit) * 40);\n  }\n\n  :host(:not([variant=\"overlay\"])[open]:not(.skip-animation)) {\n    width: auto;\n    animation: grow 0.4s ease-out;\n  }\n}\n\n/* ANIMATION */\n\n@keyframes grow {\n  from {\n    width: 0;\n  }\n\n  to {\n    width: max(var(--z-offcanvas--container-width), 375px);\n  }\n}\n\n@keyframes enter-left {\n  from {\n    transform: translateX(-100%);\n  }\n\n  to {\n    transform: translateX(0);\n  }\n}\n\n@keyframes enter-right {\n  from {\n    transform: translateX(100%);\n  }\n\n  to {\n    transform: translateX(0);\n  }\n}\n\n:host([open][variant=\"overlay\"][transitiondirection=\"left\"]:not(.skip-animation)) > .canvas-container {\n  animation: enter-right 0.4s ease-out;\n}\n\n:host([open][transitiondirection=\"right\"]:not(.skip-animation)) > .canvas-container {\n  animation: enter-left 0.4s ease-out;\n}\n\n:host(:not([open])[variant=\"overlay\"][transitiondirection=\"right\"]) > .canvas-container {\n  transform: translateX(-100%);\n  transition: visibility 0.4s ease-out, transform 0.4s ease-out;\n}\n\n:host(:not([open])[variant=\"overlay\"][transitiondirection=\"left\"]) > .canvas-container {\n  transform: translateX(100%);\n  transition: visibility 0.4s ease-out, transform 0.4s ease-out;\n}\n\n:host(:not([open])[variant=\"overlay\"]) .canvas-background {\n  transition: visibility 0.4s ease-out;\n  visibility: hidden;\n}\n","import {Component, Event, EventEmitter, h, Host, Prop, Watch} from \"@stencil/core\";\nimport {OffCanvasVariant, TransitionDirection} from \"../../beans\";\n/**\n * @slot canvasContent - Slot for the main content.\n */\n@Component({\n  tag: \"z-offcanvas\",\n  styleUrl: \"styles.css\",\n  shadow: false,\n  scoped: true,\n})\nexport class ZOffcanvas {\n  /**\n   * Offcanvas variant.\n   * Can be one `overlay` or `pushcontent`.\n   * Default variant: pushcontent\n   */\n  @Prop({reflect: true})\n  variant?: OffCanvasVariant = OffCanvasVariant.PUSHCONTENT;\n\n  /** Whether the offcanvas is open. Default: false */\n  @Prop({reflect: true, mutable: true})\n  open = false;\n\n  /** open content transitioning in a specified direction left | right. Default: left */\n  @Prop({reflect: true})\n  transitiondirection?: TransitionDirection = TransitionDirection.LEFT;\n\n  /**\n   * Whether to skip the initial animation.\n   * Useful when the initial value of the `open` prop is set to `true`.\n   */\n  @Prop({mutable: true})\n  skipLoadAnimation = false;\n\n  /** emitted when `open` prop changes */\n  @Event()\n  canvasOpenStatusChanged: EventEmitter;\n\n  @Watch(\"open\")\n  onOpenChanged(): void {\n    if (!this.open && this.skipLoadAnimation) {\n      this.skipLoadAnimation = false;\n    }\n\n    this.handlePageOverflow();\n    this.canvasOpenStatusChanged.emit(this.open);\n  }\n\n  private handlePageOverflow(): void {\n    const overflow = this.variant === OffCanvasVariant.OVERLAY ? \"overflow-y\" : \"overflow-x\";\n    document.body.style[overflow] = this.open ? \"hidden\" : \"\";\n  }\n\n  disconnectedCallback(): void {\n    this.open = false;\n  }\n\n  render(): HTMLZOffcanvasElement {\n    return (\n      <Host class={{\"skip-animation\": this.skipLoadAnimation}}>\n        <div\n          role=\"presentation\"\n          class=\"canvas-container\"\n          onTransitionEnd={() => this.handlePageOverflow()}\n        >\n          <div\n            role=\"presentation\"\n            class=\"canvas-content\"\n          >\n            <slot name=\"canvasContent\"></slot>\n          </div>\n        </div>\n        {this.variant == OffCanvasVariant.OVERLAY && (\n          <div\n            class=\"canvas-background\"\n            data-action=\"canvasBackground\"\n            onClick={() => (this.open = false)}\n          ></div>\n        )}\n      </Host>\n    );\n  }\n}\n",":host {\n  --z-searchbar-tag-text-color: var(--color-primary03);\n  --z-searchbar-tag-bg: var(--color-hover-primary);\n\n  z-index: 15;\n  display: flex;\n  column-gap: calc(var(--space-unit) * 2);\n  font-family: var(--font-family-sans);\n  font-weight: var(--font-rg);\n}\n\n:host,\n* {\n  box-sizing: border-box;\n}\n\n.input-container {\n  position: relative;\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n}\n\n.results-wrapper {\n  position: absolute;\n  top: calc(100% - 1px);\n  left: 0;\n  width: 100%;\n  padding: calc(var(--space-unit) / 4);\n  border: var(--border-size-small) solid var(--color-surface03);\n  border-top: none;\n  background: var(--color-surface01);\n}\n\n.results {\n  overflow: auto;\n  max-height: var(--z-searchbar-results-height, 540px);\n  padding: calc(var(--space-unit) / 2) calc(var(--space-unit) * 1.5);\n  scrollbar-color: var(--color-primary01) transparent;\n}\n\n.results::-webkit-scrollbar {\n  width: 10px;\n  background: linear-gradient(to right, transparent 0 3px, var(--gray200) 3px 7px, transparent 7px 10px);\n  border-radius: var(--border-radius);\n}\n\n.results::-webkit-scrollbar-track {\n  background-color: transparent;\n}\n\n.results::-webkit-scrollbar-thumb {\n  width: 10px;\n  background-color: var(--color-primary01);\n  border-radius: var(--border-radius);\n}\n\n.results .category-heading {\n  display: block;\n  font-size: var(--font-size-2);\n  font-weight: var(--font-rg);\n  line-height: var(--font-size-3);\n}\n\n.results .category-heading > * {\n  display: block;\n}\n\n.results .category-heading > .category {\n  color: var(--color-text05);\n  font-style: italic;\n}\n\n.results .category-heading > .subcategory {\n  margin-top: var(--space-unit);\n  color: var(--color-text01);\n  text-transform: uppercase;\n}\n\n.results z-list-element {\n  display: block;\n}\n\n.results z-list-element > .list-element {\n  display: flex;\n  justify-content: space-between;\n}\n\n.results z-list-element > .list-element > z-tag {\n  border: 1px solid var(--gray800);\n  font-size: var(--font-size-1);\n  font-weight: var(--font-sb);\n\n  --z-tag-bg: var(--z-searchbar-tag-bg);\n  --z-tag-text-color: var(--z-searchbar-tag-text-color);\n}\n\n.results .item {\n  --z-icon-height: 12px;\n  --z-icon-width: 12px;\n\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  justify-content: flex-start;\n  color: var(--color-text01);\n  column-gap: calc(var(--space-unit) * 1.5);\n  fill: var(--color-icon02);\n  font-size: var(--font-size-2);\n  line-height: var(--font-size-3);\n}\n\n.results .item.ellipsis > .item-label {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.results .item > .item-label mark {\n  background: var(--color-primary03);\n}\n\n.results .item.has-category {\n  padding-left: calc(var(--space-unit) * 3);\n}\n\n.results .item.item-search {\n  --z-icon-height: 16px;\n  --z-icon-width: 16px;\n}\n\n.results .item-show-all {\n  text-align: center;\n}\n\n.results .item-no-results {\n  display: block;\n  font-size: var(--font-size-2);\n  font-style: italic;\n  line-height: var(--font-size-5);\n}\n\n.results .item-no-results > ul {\n  padding-left: calc(var(--space-unit) * 2);\n  margin: var(--space-unit);\n}\n\n/* Tablet breakpoint */\n@media (min-width: 768px) {\n  .results .category-heading {\n    font-size: var(--font-size-3);\n    line-height: var(--font-size-6);\n  }\n\n  .results .item {\n    font-size: var(--font-size-3);\n    line-height: var(--font-size-6);\n  }\n\n  .results .item.item-search {\n    --z-icon-height: 18px;\n    --z-icon-width: 18px;\n  }\n\n  .results .item.ellipsis > .item-label {\n    height: 24px;\n  }\n}\n\n/* Desktop breakpoint */\n@media (min-width: 1152px) {\n  .results .item {\n    cursor: pointer;\n  }\n\n  .results .item-no-results {\n    cursor: default;\n    font-size: var(--font-size-3);\n    line-height: var(--font-size-6);\n  }\n}\n\n:host([size=\"small\"]) .results :is(.item, .category-heading),\n:host([size=\"x-small\"]) .results :is(.item, .category-heading) {\n  font-size: var(--font-size-2);\n}\n\n:host([size=\"small\"]) .results .item:not(.has-category),\n:host([size=\"x-small\"]) .results .item:not(.has-category) {\n  --z-icon-height: 16px;\n  --z-icon-width: 16px;\n}\n\n:host([size=\"small\"])::part(list-item-container) {\n  min-height: calc(var(--space-unit) * 4.5);\n  padding: 0;\n}\n\n:host([size=\"x-small\"])::part(list-item-container) {\n  min-height: calc(var(--space-unit) * 4);\n  padding: 0;\n}\n","import {Component, Event, EventEmitter, h, Host, Listen, Prop, State, Watch, Element} from \"@stencil/core\";\nimport {\n  ButtonVariant,\n  ListDividerType,\n  SearchbarGroup,\n  SearchbarGroupedItem,\n  SearchbarItem,\n  ControlSize,\n  Device,\n} from \"../../../beans\";\nimport {getDevice, handleEnterKeydSubmit, randomId} from \"../../../utils/utils\";\n\n/**\n * @cssprop --z-searchbar-results-height - Max height of the results container (default: 540px)\n * @cssprop --z-searchbar-tag-text-color - Color of tag's text (default --color-primary03);\n * @cssprop --z-searchbar-tag-bg - Color of tag's background (default --color-hover-primary);\n */\n@Component({\n  tag: \"z-searchbar\",\n  styleUrl: \"styles.css\",\n  shadow: true,\n})\nexport class ZSearchbar {\n  /** the id of the searchbar element */\n  @Prop({reflect: true})\n  htmlid = `searchbar-${randomId()}`;\n\n  /** Prevent submit action */\n  @Prop()\n  preventSubmit?: boolean = false;\n\n  /** Input search string */\n  @Prop()\n  value?: string;\n\n  /** Search input placeholder */\n  @Prop()\n  placeholder?: string;\n\n  /** Show autocomplete results */\n  @Prop()\n  autocomplete?: boolean = false;\n\n  /** Minimun number of characters to dispatch typing event */\n  @Prop()\n  autocompleteMinChars?: number = 3;\n\n  /** Number of results shown - default all */\n  @Prop()\n  resultsCount?: number;\n\n  /** Truncate results to single row */\n  @Prop()\n  resultsEllipsis?: boolean = true;\n\n  /** Search helper text */\n  @Prop()\n  searchHelperLabel?: string = \"Cerca {searchString}\";\n\n  /** Autocomplete results items */\n  @Prop()\n  resultsItems?: SearchbarItem[] | string;\n\n  /** Sort autocomplete results items */\n  @Prop()\n  sortResultsItems?: boolean = false;\n\n  /** Show submit button */\n  @Prop()\n  showSearchButton?: boolean = false;\n\n  /** Set button icon without label*/\n  @Prop()\n  searchButtonIconOnly?: boolean = false;\n\n  /** Available sizes: `big`, `small` and `x-small`. Defaults to `big`. */\n  @Prop()\n  size?: ControlSize = ControlSize.BIG;\n\n  /** Graphical variant: `primary`, `secondary`, `tertiary`. Defaults to `primary`. */\n  @Prop()\n  variant?: ButtonVariant = ButtonVariant.PRIMARY;\n\n  @State()\n  searchString = this.value;\n\n  @State()\n  currResultsCount = 0;\n\n  @State()\n  showResults = false;\n\n  @State()\n  isMobile = false;\n\n  @Element() element: HTMLZSearchbarElement;\n\n  private resultsItemsList: SearchbarItem[] | undefined = null;\n\n  private inputRef: HTMLZInputElement;\n\n  private resizeObserver: ResizeObserver;\n\n  /** Emitted on search submit, return search string */\n  @Event()\n  searchSubmit: EventEmitter<string>;\n\n  private emitSearchSubmit(): void {\n    this.searchSubmit.emit(this.inputRef.value);\n  }\n\n  /** Emitted on search typing, return search string */\n  @Event()\n  searchTyping: EventEmitter<string>;\n\n  private emitSearchTyping(search: string): void {\n    this.searchTyping.emit(search);\n  }\n\n  /** Emitted on search result click, return item */\n  @Event()\n  searchItemClick: EventEmitter<SearchbarItem>;\n\n  private emitSearchItemClick(item: SearchbarItem): void {\n    this.searchItemClick.emit(item);\n  }\n\n  @Watch(\"resultsItems\")\n  watchItems(): void {\n    this.resultsItemsList = this.getResultsItemsList();\n  }\n\n  @Watch(\"resultsCount\")\n  watchResultsCount(): void {\n    this.currResultsCount = this.resultsCount;\n  }\n\n  @Watch(\"value\")\n  watchValue(): void {\n    this.searchString = this.value;\n  }\n\n  @Watch(\"searchString\")\n  watchSearchString(): void {\n    this.emitSearchTyping(this.searchString);\n    if (!this.searchString) {\n      this.currResultsCount = this.resultsCount;\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.resizeObserver.disconnect();\n  }\n\n  componentDidLoad(): void {\n    this.resizeObserver = new ResizeObserver(() => {\n      if (getDevice() === Device.MOBILE && !this.isMobile) {\n        this.isMobile = true;\n      }\n      if (getDevice() !== Device.MOBILE && this.isMobile) {\n        this.isMobile = false;\n      }\n    });\n    this.resizeObserver.observe(this.element);\n  }\n\n  componentWillLoad(): void {\n    this.resultsItemsList = this.getResultsItemsList();\n    this.currResultsCount = this.resultsCount;\n  }\n\n  private getResultsItemsList(): SearchbarItem[] | undefined {\n    return typeof this.resultsItems === \"string\" ? JSON.parse(this.resultsItems) : this.resultsItems;\n  }\n\n  private getGroupedItems(items: SearchbarItem[]): SearchbarGroupedItem {\n    const groupedItems = {};\n    items.forEach((item: SearchbarItem) => {\n      const key = `${item?.category}${item?.subcategory}`;\n      groupedItems[key] = groupedItems[key] ?? {\n        category: item?.category,\n        subcategory: item?.subcategory,\n        items: [],\n      };\n      groupedItems[key][\"items\"].push(item);\n    });\n\n    if (this.sortResultsItems) {\n      return Object.keys(groupedItems)\n        .sort()\n        .reduce((obj, key) => {\n          obj[key] = {\n            ...groupedItems[key],\n            items: groupedItems[key][\"items\"].sort((a: SearchbarItem, b: SearchbarItem) => {\n              const nameA = a.label.toUpperCase();\n              const nameB = b.label.toUpperCase();\n              if (nameA < nameB) {\n                return -1;\n              }\n              if (nameA > nameB) {\n                return 1;\n              }\n\n              return 0;\n            }),\n          };\n\n          return obj;\n        }, {});\n    }\n\n    return groupedItems;\n  }\n\n  private checkResultsCount(counter: number): boolean {\n    if (!this.currResultsCount || counter < this.currResultsCount) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private handleStopTyping(e: CustomEvent): void {\n    e.stopPropagation();\n    this.searchString = e.detail.value;\n  }\n\n  private handleSubmit(): void {\n    if (this.preventSubmit) {\n      return;\n    }\n\n    this.emitSearchSubmit();\n  }\n\n  @Listen(\"click\", {target: \"document\"})\n  private handleOutsideClick(e: MouseEvent): void {\n    const cp = e.composedPath();\n\n    const searchbar = cp.find((elem: HTMLElement) => elem.nodeName === \"Z-SEARCHBAR\");\n    if (!searchbar || (searchbar as HTMLZSearchbarElement).htmlid !== this.htmlid) {\n      this.showResults = false;\n\n      return;\n    }\n\n    if (cp.find((elem: HTMLElement) => elem?.nodeName === \"Z-INPUT\" || elem?.classList?.contains(\"results\"))) {\n      this.showResults = true;\n\n      return;\n    }\n\n    this.showResults = false;\n  }\n\n  private renderInput(): HTMLZInputElement {\n    return (\n      <z-input\n        ref={(val) => {\n          this.inputRef = val;\n        }}\n        message={false}\n        placeholder={this.placeholder}\n        onStopTyping={(e: CustomEvent) => this.handleStopTyping(e)}\n        onKeyUp={(e: KeyboardEvent) => handleEnterKeydSubmit(e, () => this.handleSubmit())}\n        value={this.value}\n        size={this.size}\n      />\n    );\n  }\n\n  private renderButton(): HTMLZButtonElement | null {\n    if (!this.showSearchButton) {\n      return null;\n    }\n\n    const iconProp = this.searchButtonIconOnly ? {icon: \"search\"} : null;\n    const buttonLabel = this.searchButtonIconOnly ? \"\" : \"CERCA\";\n    const defaultProps = {\n      disabled: this.preventSubmit,\n      variant: this.variant,\n      size: this.size,\n      onClick: () => this.handleSubmit(),\n      ...iconProp,\n    };\n\n    return <z-button {...defaultProps}>{buttonLabel}</z-button>;\n  }\n\n  private renderResults(): HTMLDivElement | null {\n    if (\n      !this.showResults ||\n      !this.autocomplete ||\n      !this.searchString ||\n      this.searchString.length < this.autocompleteMinChars ||\n      !this.resultsItemsList\n    ) {\n      return null;\n    }\n\n    return (\n      <div class=\"results-wrapper\">\n        <div class=\"results\">{this.renderResultsList()}</div>\n      </div>\n    );\n  }\n\n  private renderResultsList(): HTMLZListElement | HTMLSpanElement {\n    if (this.preventSubmit && !this.resultsItemsList?.length) {\n      return (\n        <span class=\"item item-no-results\">\n          Non abbiamo trovato risultati per <b>{this.searchString}</b>\n          <br />\n          <br />\n          Cosa puoi fare?\n          <ul>\n            <li>Verificare di aver scritto bene</li>\n            <li>Provare a cercare un'altra parola</li>\n            <li>Provare a cercare qualcosa di più generico</li>\n          </ul>\n        </span>\n      );\n    }\n\n    return (\n      <z-list\n        role=\"listbox\"\n        id={`list-${this.htmlid}`}\n      >\n        {this.renderSearchHelper(!!this.resultsItemsList?.length)}\n        {this.renderItems()}\n        {this.renderShowAllResults()}\n      </z-list>\n    );\n  }\n\n  private renderItems(): HTMLZListGroupElement[] {\n    if (!this.resultsItemsList?.length) {\n      return [];\n    }\n\n    const groupedItems = this.getGroupedItems(this.resultsItemsList);\n    const listGroups: HTMLZListGroupElement[] = [];\n    let counter = 0;\n\n    Object.values(groupedItems).forEach((groupItem: SearchbarGroup, index: number, array) => {\n      if (this.checkResultsCount(counter)) {\n        const listGroupsElements: HTMLZListElement[] = [];\n        groupItem.items.forEach((item: SearchbarItem, subindex: number, subarray) => {\n          if (this.checkResultsCount(counter)) {\n            const isLast = index === array.length - 1 && subindex === subarray.length - 1;\n            listGroupsElements.push(this.renderItem(item, subindex, !isLast));\n          }\n          counter++;\n        });\n\n        if (listGroupsElements.length) {\n          listGroups.push(\n            <z-list-group divider-type={ListDividerType.ELEMENT}>\n              {this.renderItemCategory(groupItem)}\n              {listGroupsElements}\n            </z-list-group>\n          );\n        }\n      }\n    });\n\n    return listGroups;\n  }\n\n  private renderItem(item: SearchbarItem, key: number, divider: boolean): HTMLZListElementElement {\n    return (\n      <z-list-element\n        id={`list-item-${this.htmlid}-${key}`}\n        role=\"option\"\n        tabindex={0}\n        dividerType={divider ? ListDividerType.ELEMENT : undefined}\n        clickable\n        onClickItem={() => this.emitSearchItemClick(item)}\n      >\n        <div class=\"list-element\">\n          <span class={{\"item\": true, \"ellipsis\": this.resultsEllipsis, \"has-category\": !!item.category}}>\n            {item?.icon && (\n              <z-icon\n                class=\"item-icon\"\n                name={item.icon}\n              />\n            )}\n            <span\n              class=\"item-label\"\n              title={item.label}\n              innerHTML={this.renderItemLabel(item.label)}\n            />\n          </span>\n          {item?.tag && <z-tag icon={item.tag.icon}>{!this.isMobile ? item.tag.text : \"\"}</z-tag>}\n        </div>\n      </z-list-element>\n    );\n  }\n\n  private renderItemLabel(label: string): string {\n    if (!this.searchString) {\n      return label;\n    }\n\n    return label.replace(\n      new RegExp(this.searchString.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"), \"gmi\"),\n      (found) => `<mark>${found}</mark>`\n    );\n  }\n\n  private renderItemCategory(groupItem: SearchbarGroup): HTMLSpanElement | null {\n    if (!groupItem?.category) {\n      return null;\n    }\n\n    return (\n      <span\n        class=\"category-heading\"\n        slot=\"header-title\"\n      >\n        <span class=\"category\">{groupItem.category}</span>\n        {groupItem?.subcategory && <span class=\"subcategory\">{groupItem.subcategory}</span>}\n      </span>\n    );\n  }\n\n  private renderSearchHelper(hasDivider = true): HTMLZListElement | null {\n    if (!this.autocomplete || this.preventSubmit || !this.searchString) {\n      return null;\n    }\n\n    return (\n      <z-list-element\n        role=\"option\"\n        tabindex={0}\n        dividerType={hasDivider ? ListDividerType.ELEMENT : undefined}\n        clickable\n        id={`list-item-${this.htmlid}-search`}\n        onClickItem={() => this.emitSearchSubmit()}\n      >\n        <span class=\"item item-search\">\n          <z-icon\n            class=\"search-icon\"\n            name=\"left-magnifying-glass\"\n          />\n          <span\n            class=\"item-label\"\n            innerHTML={this.searchHelperLabel.replace(\"{searchString}\", `<mark>${this.searchString}</mark>`)}\n          />\n        </span>\n      </z-list-element>\n    );\n  }\n\n  private renderShowAllResults(): HTMLZListElement | null {\n    if (\n      !this.currResultsCount ||\n      !this.searchString ||\n      !this.resultsItemsList?.length ||\n      this.currResultsCount >= this.resultsItemsList?.length\n    ) {\n      return null;\n    }\n\n    return (\n      <z-list-element\n        role=\"option\"\n        tabindex={0}\n        clickable\n        id={`list-item-${this.htmlid}-show-all`}\n        onClickItem={() => (this.currResultsCount = 0)}\n        color=\"color-primary01\"\n      >\n        <div class=\"item-show-all\">Vedi tutti i risultati</div>\n      </z-list-element>\n    );\n  }\n\n  render(): HTMLZSearchbarElement {\n    return (\n      <Host\n        onFocus={() => (this.showResults = true)}\n        onClick={(e) => this.handleOutsideClick(e)}\n        class={{\"has-submit\": this.showSearchButton, \"has-results\": this.autocomplete}}\n      >\n        <div class=\"input-container\">\n          {this.renderInput()}\n          {this.renderResults()}\n        </div>\n        {this.renderButton()}\n      </Host>\n    );\n  }\n}\n",":host {\n  --z-icon-width: 14px;\n  --z-icon-height: 14px;\n  --z-tag-text-color: var(--color-primary03);\n  --z-tag-bg: var(--color-hover-primary);\n\n  display: flex;\n  width: fit-content;\n  max-width: inherit;\n  height: fit-content;\n  max-height: inherit;\n  padding: calc(var(--space-unit) / 2);\n  background-color: var(--z-tag-bg);\n  border-radius: var(--border-radius);\n  color: var(--z-tag-text-color);\n  fill: var(--z-tag-text-color);\n  font-family: var(--font-family-sans);\n  line-height: 14px;\n  text-transform: uppercase;\n}\n\n:host > z-icon {\n  margin-right: var(--space-unit);\n}\n\n:host(.expandable) > z-icon {\n  margin-right: 0;\n  transition: margin-right 0.3s ease-out;\n}\n\n:host(:not(.expandable)) > z-icon:not(:last-child),\n:host(.expandable:hover) > z-icon:not(:last-child) {\n  margin-right: var(--space-unit);\n  transition: margin-right 0.3s ease-out 0s;\n}\n\n:host(.expandable) > div {\n  overflow: hidden;\n  max-width: 0;\n  max-height: 0;\n}\n\n:host(.expandable:hover) > div {\n  max-width: 100%;\n  max-height: 100%;\n}\n","import {Component, Prop, h, Host} from \"@stencil/core\";\n\n/**\n * Ztag  component.\n * @slot - The text of the z-tag.\n * @cssprop --z-tag-text-color - text and icon color using tokens.\n * @cssprop --z-tag-bg - background color of the z-tag.\n */\n@Component({\n  tag: \"z-tag\",\n  styleUrl: \"styles.css\",\n  shadow: false,\n  scoped: true,\n})\nexport class ZTag {\n  /** [optional] Tag icon */\n  @Prop()\n  icon?: string;\n\n  /** [optional] Hide the text and show it on hover*/\n  @Prop()\n  expandable?: boolean;\n\n  render(): HTMLZTagElement {\n    return (\n      <Host\n        class={{\n          \"body-5-sb\": true,\n          \"expandable\": this.expandable && !!this.icon,\n        }}\n      >\n        {this.icon && <z-icon name={this.icon} />}\n        <div>\n          <slot />\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}