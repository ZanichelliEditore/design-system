{"version":3,"names":["boolean","value","randomId","Math","random","toString","replace","handleKeyboardSubmit","ev","callback","args","code","KeyboardCode","ENTER","SPACE","preventDefault","handleEnterKeydSubmit","getClickedElement","elem","document","activeElement","shadowRoot","getElementTree","tree","push","parentElement","parentNode","host","getDevice","window","innerWidth","mobileBreakpoint","Device","MOBILE","tabletBreakpoint","TABLET","desktopBreakpoint","DESKTOP","DESKTOP_WIDE","convertJson","data","JSON","parse","_a","colorFromId","id","prefix","colorsCount","seed","ceil","parseFloat","color","padStart"],"sources":["src/utils/utils.ts"],"sourcesContent":["import {ChildNode} from \"@stencil/core\";\nimport {Device, KeyboardCode} from \"../beans/index\";\nimport {desktopBreakpoint, mobileBreakpoint, tabletBreakpoint} from \"../constants/breakpoints\";\n\nexport function format(first: string, middle: string, last: string): string {\n  return (first || \"\") + (middle ? ` ${middle}` : \"\") + (last ? ` ${last}` : \"\");\n}\n\n/**\n * Return boolean value for passed value if a boolean corresponding value is found\n * Return passed value otherwise\n */\nexport function boolean(value: string | number | boolean): boolean | string | number {\n  switch (value) {\n    case true:\n    case \"true\":\n    case 1:\n    case \"1\":\n    case \"on\":\n    case \"yes\":\n      return true;\n    case false:\n    case \"false\":\n    case 0:\n    case \"0\":\n    case \"off\":\n    case \"no\":\n      return false;\n    default:\n      return value;\n  }\n}\n\nexport function retrieveAsset(assetName: string): string {\n  return assetName && \"assets/images/png/\" + assetName;\n}\n\nexport function randomId(): string {\n  return Math.random().toString(36).replace(\"0.\", \"\");\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function handleKeyboardSubmit(ev: KeyboardEvent, callback: (...args) => void, ...args: any[]): void {\n  if (ev.code === KeyboardCode.ENTER || ev.code === KeyboardCode.SPACE) {\n    ev.preventDefault();\n    callback(...args);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function handleEnterKeydSubmit(ev: KeyboardEvent, callback: (...args) => void, ...args: any[]): void {\n  if (ev.code === KeyboardCode.ENTER) {\n    ev.preventDefault();\n    callback(...args);\n  }\n}\n\nexport function getClickedElement(elem: null | Element = null): null | Element {\n  if (!elem) {\n    elem = document.activeElement;\n  }\n\n  if (elem && elem.shadowRoot && elem.shadowRoot.activeElement) {\n    elem = elem.shadowRoot.activeElement;\n\n    return getClickedElement(elem);\n  }\n\n  return elem;\n}\n\nexport function getElementTree(elem: Element, tree: Element[] = []): null | Element[] {\n  tree.push(elem);\n\n  if (elem.parentElement) {\n    elem = elem.parentElement;\n\n    return getElementTree(elem, tree);\n  } else if (elem.parentNode && (elem.parentNode as ShadowRoot).host) {\n    elem = (elem.parentNode as ShadowRoot).host;\n\n    return getElementTree(elem, tree);\n  }\n\n  return tree;\n}\n\nexport function getSiblings(elem: HTMLElement): ChildNode[] {\n  const siblings = [];\n  if (!elem || !elem.parentNode || !elem.parentNode.childNodes) {\n    return siblings;\n  }\n\n  elem.parentNode.childNodes.forEach((child) => {\n    if (child.nodeType === 1 && child !== elem) {\n      siblings.push(child);\n    }\n  });\n\n  return siblings;\n}\n\nexport function getDevice(): Device {\n  switch (true) {\n    case window.innerWidth <= mobileBreakpoint:\n      return Device.MOBILE;\n    case window.innerWidth <= tabletBreakpoint:\n      return Device.TABLET;\n    case window.innerWidth <= desktopBreakpoint:\n      return Device.DESKTOP;\n    default:\n      return Device.DESKTOP_WIDE;\n  }\n}\n\ntype JSONValue = string | number | boolean | JSONObject | JSONArray;\ninterface JSONObject {\n  [x: string]: JSONValue;\n}\ntype JSONArray = JSONValue[];\n\nexport function convertJson(data: string): JSONValue {\n  try {\n    return JSON.parse(data);\n  } catch {\n    return false;\n  }\n}\n\nexport function colorFromId(id: number): string {\n  const prefix = \"avatar-C\"; // prefix for color vars name\n  const colorsCount = 19; // available colors\n  const seed = Math.ceil(2 ** 31 - 1) * parseFloat(`0.${id}`);\n  let color = Math.ceil(colorsCount * (seed % 1));\n\n  // if result of mc is 0\n  // es.: 3895229\n  if (color === 0) {\n    color = 1;\n  }\n\n  return `${prefix}${color.toString().padStart(2, \"0\")}`;\n}\n\n/**\n * Check if the passed CSS selector is valid.\n * @param selector CSS selector to validate\n */\nexport function isSelectorValid(selector: string): boolean {\n  try {\n    document.createDocumentFragment().querySelector(selector);\n\n    return true;\n  } catch {\n    return false;\n  }\n}\n"],"mappings":"sGAYgBA,EAAQC,GACtB,OAAQA,GACN,KAAK,KACL,IAAK,OACL,KAAK,EACL,IAAK,IACL,IAAK,KACL,IAAK,MACH,OAAO,KACT,KAAK,MACL,IAAK,QACL,KAAK,EACL,IAAK,IACL,IAAK,MACL,IAAK,KACH,OAAO,MACT,QACE,OAAOA,EAEb,C,SAMgBC,IACd,OAAOC,KAAKC,SAASC,SAAS,IAAIC,QAAQ,KAAM,GAClD,C,SAGgBC,EAAqBC,EAAmBC,KAAgCC,GACtF,GAAIF,EAAGG,OAASC,EAAaC,OAASL,EAAGG,OAASC,EAAaE,MAAO,CACpEN,EAAGO,iBACHN,KAAYC,E,CAEhB,C,SAGgBM,EAAsBR,EAAmBC,KAAgCC,GACvF,GAAIF,EAAGG,OAASC,EAAaC,MAAO,CAClCL,EAAGO,iBACHN,KAAYC,E,CAEhB,C,SAEgBO,EAAkBC,EAAuB,MACvD,IAAKA,EAAM,CACTA,EAAOC,SAASC,a,CAGlB,GAAIF,GAAQA,EAAKG,YAAcH,EAAKG,WAAWD,cAAe,CAC5DF,EAAOA,EAAKG,WAAWD,cAEvB,OAAOH,EAAkBC,E,CAG3B,OAAOA,CACT,C,SAEgBI,EAAeJ,EAAeK,EAAkB,IAC9DA,EAAKC,KAAKN,GAEV,GAAIA,EAAKO,cAAe,CACtBP,EAAOA,EAAKO,cAEZ,OAAOH,EAAeJ,EAAMK,E,MACvB,GAAIL,EAAKQ,YAAeR,EAAKQ,WAA0BC,KAAM,CAClET,EAAQA,EAAKQ,WAA0BC,KAEvC,OAAOL,EAAeJ,EAAMK,E,CAG9B,OAAOA,CACT,C,SAiBgBK,IACd,OAAQ,MACN,KAAKC,OAAOC,YAAcC,EACxB,OAAOC,EAAOC,OAChB,KAAKJ,OAAOC,YAAcI,EACxB,OAAOF,EAAOG,OAChB,KAAKN,OAAOC,YAAcM,EACxB,OAAOJ,EAAOK,QAChB,QACE,OAAOL,EAAOM,aAEpB,C,SAQgBC,EAAYC,GAC1B,IACE,OAAOC,KAAKC,MAAMF,E,CAClB,MAAAG,GACA,OAAO,K,CAEX,C,SAEgBC,EAAYC,GAC1B,MAAMC,EAAS,WACf,MAAMC,EAAc,GACpB,MAAMC,EAAO7C,KAAK8C,KAAK,GAAK,GAAK,GAAKC,WAAW,KAAKL,KACtD,IAAIM,EAAQhD,KAAK8C,KAAKF,GAAeC,EAAO,IAI5C,GAAIG,IAAU,EAAG,CACfA,EAAQ,C,CAGV,MAAO,GAAGL,IAASK,EAAM9C,WAAW+C,SAAS,EAAG,MAClD,Q","ignoreList":[]}