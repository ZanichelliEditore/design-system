{"version":3,"names":["stylesCss","ZBreadcrumbStyle0","ZBreadcrumb","this","collapsedElements","currentIndex","truncatePosition","BreadcrumbPathStyle","UNDERLINED","BreadcrumbHomepageVariant","ICON","handleResize","viewPortWidth","getDevice","Device","MOBILE","wrapElement","scrollWidth","clientWidth","hasOverflow","handlePropChange","initializeBreadcrumb","handleResizeUp","newValue","oldValue","TABLET","DESKTOP","DESKTOP_WIDE","componentWillLoad","componentWillRender","checkEllipsisOrOverflowMenu","componentDidRender","collapsedElementsRef","anchorElements","Array","from","hostElement","shadowRoot","querySelectorAll","isMobile","pathsList","getPathsItemsList","filter","item","path","totalLenght","length","homepageNode","shift","pathListCopy","JSON","parse","stringify","maxNodesToShow","splice","i","text","truncateChar","arrayToPush","forEach","push","truncatedString","truncateWithEllipsis","currentEllipsisText","hasTooltip","str","ending","substring","children","map","textContent","href","renderMobileBreadcrumb","lastPath","h","class","underlined","pathStyle","semibold","SEMIBOLD","renderNode","renderHomepageNode","homepageVariant","TEXT","onClick","e","handlePreventFollowUrl","name","fill","height","width","mobile","triggerEllipsis","open","popoverEllipsisOpen","position","PopoverPosition","BOTTOM_RIGHT","closable","showArrow","ref","val","undefined","onMouseOver","onMouseLeave","innerHTML","renderBreadcrumb","renderOverflowMenu","togglePopover","preventFollowUrl","preventDefault","clickOnNode","emit","handleOverflowMenuAccessibility","anchorElementsLenght","key","KeyboardCode","TAB","stopPropagation","arrows","ARROW_DOWN","ARROW_UP","includes","focus","ESC","triggerButton","size","ListSize","SMALL","index","array","clickable","onKeyDown","color","el","handleKeyboardSubmit","bind","setTimeout","render","Host","style","overflowMenuItemRows"],"sources":["src/components/z-breadcrumb/styles.css?tag=z-breadcrumb&encapsulation=shadow","src/components/z-breadcrumb/index.tsx"],"sourcesContent":[":host {\n  font-family: var(--font-family-sans);\n  font-weight: var(--font-rg);\n\n  --line-clamp-popover: 0;\n  --line-clamp-mobile: 1;\n}\n\nbutton {\n  padding: 0;\n  border: none;\n  margin: 0;\n  background-color: transparent;\n}\n\nnav {\n  display: flex;\n  height: 30px;\n  align-items: center;\n  padding-left: calc(var(--space-unit) / 2);\n  overflow-x: hidden;\n}\n\nli {\n  display: flex;\n  align-items: baseline;\n}\n\n:host a:focus,\n:host button:focus {\n  box-shadow: var(--shadow-focus-primary);\n  outline: 0;\n}\n\n:host a {\n  color: var(--color-link-primary);\n  font-size: var(--font-size-2);\n  text-decoration: none;\n  white-space: nowrap;\n}\n\n:host a.homepage-icon {\n  display: list-item;\n}\n\n:host a.homepage-text {\n  display: initial;\n  margin-top: calc(var(--space-unit) / 4);\n  margin-right: var(--space-unit);\n}\n\n:host a.missing-path {\n  color: var(--color-text01);\n}\n\n:host a.text-ellipsis {\n  display: -webkit-box !important;\n  overflow: hidden;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: var(--line-clamp-mobile);\n  text-overflow: ellipsis;\n  white-space: normal;\n}\n\n:host ol {\n  display: flex;\n  padding: 0;\n  margin: 0;\n  list-style-type: none;\n}\n\n:host ol > li:not(:first-child, :last-child) {\n  margin-right: var(--space-unit);\n}\n\nnav.underlined > ol > li a:not(.missing-path),\nnav.underlined > ol > li button {\n  text-decoration: underline;\n}\n\nnav.semibold > ol > li a:not(.missing-path),\nnav.semibold > ol > li button {\n  font-weight: var(--font-sb);\n}\n\n:host z-icon {\n  margin-right: var(--space-unit);\n\n  --z-icon-width: 12px;\n  --z-icon-height: 12px;\n}\n\n:host button.dots {\n  display: inline-block;\n  color: var(--color-link-primary);\n  cursor: pointer;\n}\n\n:host .hidden-paths-popover .popover-content {\n  max-width: 302px;\n  padding: calc(var(--space-unit) / 2) var(--space-unit);\n  text-align: left;\n}\n\n:host .hidden-paths-popover .popover-content a {\n  font-weight: var(--font-rg);\n  text-decoration: none;\n}\n\n:host .hidden-paths-popover {\n  --z-popover-theme--surface: var(--color-surface02);\n  --z-popover-padding: 0;\n}\n\n:host .hidden-paths-popover::before,\n.full-path-tooltip::before {\n  --arrow-edge-offset: calc(100% - (var(--space-unit) * 2.55));\n}\n\n:host .full-path-tooltip {\n  --z-popover-theme--surface: var(--color-surface05);\n  --z-popover-theme--text: var(--color-text-inverse);\n  --z-popover-padding: 0;\n}\n\n:host .tooltip-content {\n  padding: 0 var(--space-unit);\n  font-size: var(--font-size-2);\n}\n\n@media (min-width: 768px) {\n  /* https://www.w3.org/WAI/ARIA/apg/patterns/breadcrumb/examples/breadcrumb/#accessibilityfeatures */\n  :host ol > li + li::before {\n    display: inline-block;\n    width: 10px;\n    height: 10px;\n    flex: 1;\n    margin-right: 2px;\n    color: var(--color-disabled03);\n    content: \"\\203A\";\n  }\n\n  :host a.text-ellipsis {\n    -webkit-line-clamp: var(--line-clamp-popover);\n  }\n}\n","import {Component, Prop, h, State, Host, Listen, Element, Event, Watch, EventEmitter} from \"@stencil/core\";\nimport {\n  BreadcrumbHomepageVariant,\n  BreadcrumbPath,\n  BreadcrumbPathStyle,\n  Device,\n  KeyboardCode,\n  ListSize,\n  PopoverPosition,\n} from \"../../beans\";\nimport {getDevice, handleKeyboardSubmit} from \"../../utils/utils\";\n\n@Component({\n  tag: \"z-breadcrumb\",\n  styleUrl: \"styles.css\",\n  shadow: true,\n})\nexport class ZBreadcrumb {\n  /* Accessibility references */\n  /* Overflow-menu: https://www.w3.org/WAI/ARIA/apg/patterns/menu-button/ */\n  /* Breadcrumb: https://www.w3.org/WAI/ARIA/apg/patterns/breadcrumb/ */\n  /* Focus on multiline link: https://www.w3.org/WAI/WCAG22/Understanding/focus-appearance.html */\n\n  @Element() hostElement: HTMLZBreadcrumbElement;\n\n  /** [optional] Sets the path style */\n  @Prop({reflect: true})\n  pathStyle?: BreadcrumbPathStyle = BreadcrumbPathStyle.UNDERLINED;\n\n  /** [optional] Variant of first node */\n  @Prop()\n  homepageVariant?: BreadcrumbHomepageVariant = BreadcrumbHomepageVariant.ICON;\n\n  /** [optional] Sets max number of element to show */\n  @Prop()\n  maxNodesToShow? = 5;\n\n  /** [optional] Controls the behaviour on <a> tag click/enter */\n  @Prop()\n  preventFollowUrl? = false;\n\n  /** [optional] Sets max number of row for each path inside the popover. Zero equals unlimited */\n  @Prop()\n  overflowMenuItemRows? = 0;\n\n  /** [optional] Sets the maximun number of chars per single node */\n  @Prop()\n  truncateChar? = 30;\n\n  /** Handle mobile */\n  @State()\n  viewPortWidth: Device;\n\n  /** Detect whether the length of the nodes shown exceeds the container length */\n  @State()\n  hasOverflow = false;\n\n  @State()\n  popoverEllipsisOpen = false;\n\n  /** Emitted when preventFollowUrl=true to handle custom page transition */\n  @Event()\n  clickOnNode: EventEmitter<BreadcrumbPath[\"path\"]>;\n\n  @Listen(\"resize\", {target: \"window\"})\n  handleResize(): void {\n    this.viewPortWidth = getDevice();\n    if (\n      this.viewPortWidth !== Device.MOBILE &&\n      this.wrapElement &&\n      this.wrapElement.scrollWidth > this.wrapElement.clientWidth\n    ) {\n      this.hasOverflow = true;\n    }\n  }\n  // eslint-disable-next-line lines-between-class-members\n  @Watch(\"maxNodesToShow\")\n  handlePropChange(): void {\n    this.initializeBreadcrumb(this.viewPortWidth === Device.MOBILE);\n  }\n\n  @Watch(\"viewPortWidth\")\n  handleResizeUp(newValue: Device, oldValue: Device): void {\n    if (\n      newValue === Device.MOBILE ||\n      (oldValue === Device.MOBILE && newValue === Device.TABLET) ||\n      (oldValue === Device.MOBILE && newValue === Device.DESKTOP) ||\n      (oldValue === Device.MOBILE && newValue === Device.DESKTOP_WIDE) ||\n      (oldValue === Device.TABLET && newValue === Device.DESKTOP) ||\n      (oldValue === Device.TABLET && newValue === Device.DESKTOP_WIDE) ||\n      (oldValue === Device.DESKTOP && newValue === Device.DESKTOP_WIDE)\n    ) {\n      this.initializeBreadcrumb(this.viewPortWidth === Device.MOBILE);\n    }\n  }\n\n  private pathsList: BreadcrumbPath[];\n\n  private pathListCopy: BreadcrumbPath[];\n\n  private collapsedElements: BreadcrumbPath[] = [];\n\n  private collapsedElementsRef: HTMLZPopoverElement;\n\n  private triggerButton: HTMLButtonElement;\n\n  private triggerEllipsis: HTMLAnchorElement;\n\n  private wrapElement: HTMLElement;\n\n  private currentIndex = 0;\n\n  private homepageNode: BreadcrumbPath;\n\n  private totalLenght: number;\n\n  private anchorElements;\n\n  private currentEllipsisText: string;\n\n  private truncatePosition = null;\n\n  componentWillLoad(): void {\n    this.viewPortWidth = getDevice();\n    this.initializeBreadcrumb(this.viewPortWidth === Device.MOBILE);\n  }\n\n  componentWillRender(): void {\n    if (this.viewPortWidth !== Device.MOBILE && this.hasOverflow) {\n      this.checkEllipsisOrOverflowMenu();\n      this.hasOverflow = false;\n    }\n  }\n\n  componentDidRender(): void {\n    if (this.collapsedElementsRef) {\n      this.anchorElements = Array.from(this.hostElement.shadowRoot.querySelectorAll(\"z-list-group a\"));\n    }\n\n    if (this.viewPortWidth !== Device.MOBILE && this.wrapElement.scrollWidth > this.wrapElement.clientWidth) {\n      this.hasOverflow = true;\n    }\n  }\n\n  private initializeBreadcrumb(isMobile: boolean): void {\n    if (isMobile) {\n      this.pathsList = this.getPathsItemsList().filter((item) => !!item.path);\n    } else {\n      this.pathsList = this.getPathsItemsList();\n    }\n    this.totalLenght = this.pathsList.length;\n    this.homepageNode = this.pathsList.shift();\n    this.pathListCopy = JSON.parse(JSON.stringify(this.pathsList));\n    this.collapsedElements = [];\n    if (this.totalLenght > this.maxNodesToShow) {\n      this.collapsedElements = this.pathsList.splice(0, this.pathsList.length - 2);\n    }\n  }\n\n  private checkEllipsisOrOverflowMenu(): void {\n    if (this.pathListCopy.length > 0) {\n      for (let i = 0; i < this.pathsList.length; i++) {\n        if (this.pathsList[i].text.length > this.truncateChar) {\n          if (this.truncatePosition !== null) {\n            if (this.truncatePosition > 0) {\n              const arrayToPush = this.pathListCopy.splice(0, this.truncatePosition);\n              arrayToPush.forEach((item) => {\n                this.collapsedElements.push(item);\n              });\n              this.pathsList.splice(0, this.truncatePosition);\n              this.truncatePosition = 0;\n\n              return;\n            }\n            if (this.truncatePosition === 0) {\n              const arrayToPush = this.pathListCopy.splice(0, this.truncatePosition + 1);\n              this.collapsedElements.push(...arrayToPush);\n              this.pathsList.splice(0, this.truncatePosition + 1);\n              this.truncatePosition = null;\n\n              return;\n            }\n          }\n          if (i !== this.pathsList.length - 1) {\n            const truncatedString = this.truncateWithEllipsis(this.pathsList[i].text, this.truncateChar);\n            this.currentEllipsisText = this.pathsList[i].text;\n            this.pathsList[i].text = truncatedString;\n            this.pathsList[i].hasTooltip = true;\n            this.truncatePosition = i;\n\n            return;\n          }\n        }\n      }\n    }\n  }\n\n  private truncateWithEllipsis(str: string, length: number): string {\n    const ending = \"&mldr;\";\n\n    if (str.length > length) {\n      return str.substring(0, length - 1) + ending;\n    }\n\n    return str;\n  }\n\n  private getPathsItemsList(): BreadcrumbPath[] {\n    return Array.from(this.hostElement.children).map((item: HTMLAnchorElement) => {\n      return {\n        text: item.textContent,\n        path: item.href,\n        hasTooltip: false,\n      };\n    });\n  }\n\n  private renderMobileBreadcrumb(): HTMLDivElement {\n    const lastPath = this.pathsList[this.pathsList.length - 1];\n\n    return (\n      <nav\n        aria-label=\"Breadcrumb\"\n        class={{\n          underlined: this.pathStyle === BreadcrumbPathStyle.UNDERLINED,\n          semibold: this.pathStyle === BreadcrumbPathStyle.SEMIBOLD,\n        }}\n      >\n        <ol>{this.renderNode(lastPath, true)}</ol>\n      </nav>\n    );\n  }\n\n  private renderHomepageNode(item): HTMLLIElement {\n    return (\n      <li>\n        <a\n          class={{\n            \"homepage-icon\": this.homepageVariant === BreadcrumbHomepageVariant.ICON,\n            \"homepage-text\": this.homepageVariant === BreadcrumbHomepageVariant.TEXT,\n          }}\n          href={item.path}\n          onClick={(e) => this.handlePreventFollowUrl(e, item)}\n        >\n          {this.homepageVariant === BreadcrumbHomepageVariant.ICON ? (\n            <z-icon\n              name=\"home\"\n              fill=\"color-link-primary\"\n              height={16}\n              width={16}\n            />\n          ) : (\n            \"Home\"\n          )}\n        </a>\n      </li>\n    );\n  }\n\n  private renderNode(item, mobile): HTMLLIElement {\n    return (\n      <li>\n        {item.hasTooltip && (\n          <z-popover\n            class=\"full-path-tooltip\"\n            bind-to={this.triggerEllipsis}\n            open={this.popoverEllipsisOpen}\n            position={PopoverPosition.BOTTOM_RIGHT}\n            closable={false}\n            showArrow\n          >\n            <span class=\"tooltip-content\">{this.currentEllipsisText}</span>\n          </z-popover>\n        )}\n        <a\n          class={{\n            \"missing-path\": !item.path,\n            \"text-ellipsis\": mobile,\n          }}\n          ref={(val) => (this.triggerEllipsis = val)}\n          aria-current={item.path ? undefined : \"page\"}\n          href={item.path}\n          onClick={(e) => this.handlePreventFollowUrl(e, item)}\n          onMouseOver={() => {\n            if (item.hasTooltip) {\n              this.popoverEllipsisOpen = true;\n            }\n          }}\n          onMouseLeave={() => {\n            if (item.hasTooltip) {\n              this.popoverEllipsisOpen = false;\n            }\n          }}\n          innerHTML={mobile ? `<z-icon fill=\"color-link-primary\" name=\"chevron-left\"></z-icon>${item.text}` : item.text}\n        />\n      </li>\n    );\n  }\n\n  private renderBreadcrumb(): HTMLElement {\n    return (\n      <nav\n        ref={(val) => (this.wrapElement = val)}\n        aria-label=\"Breadcrumb\"\n        class={{\n          underlined: this.pathStyle === BreadcrumbPathStyle.UNDERLINED,\n          semibold: this.pathStyle === BreadcrumbPathStyle.SEMIBOLD,\n        }}\n      >\n        <ol>\n          {this.renderHomepageNode(this.homepageNode)}\n          {this.collapsedElements.length ? this.renderOverflowMenu() : \"\"}\n          {this.pathsList.map((item) => this.renderNode(item, false))}\n        </ol>\n      </nav>\n    );\n  }\n\n  private togglePopover(): void {\n    if (!this.collapsedElementsRef.open) {\n      this.collapsedElementsRef.open = true;\n    }\n  }\n\n  private handlePreventFollowUrl(e: MouseEvent, item): void {\n    if (this.preventFollowUrl) {\n      e.preventDefault();\n      this.clickOnNode.emit(item.path);\n    }\n  }\n\n  private handleOverflowMenuAccessibility(e: KeyboardEvent): void {\n    const anchorElementsLenght = this.anchorElements.length;\n    if (e.key === KeyboardCode.TAB) {\n      e.preventDefault();\n\n      return;\n    }\n    e.stopPropagation();\n    const arrows = [KeyboardCode.ARROW_DOWN, KeyboardCode.ARROW_UP];\n    if (arrows.includes(e.key as KeyboardCode)) {\n      e.preventDefault();\n\n      if (e.key === KeyboardCode.ARROW_DOWN) {\n        this.currentIndex = anchorElementsLenght === this.currentIndex + 1 ? 0 : this.currentIndex + 1;\n      }\n      if (e.key === KeyboardCode.ARROW_UP) {\n        this.currentIndex = this.currentIndex <= 0 ? anchorElementsLenght - 1 : this.currentIndex - 1;\n      }\n\n      this.anchorElements[this.currentIndex].focus();\n    }\n\n    if (e.key === KeyboardCode.ESC) {\n      this.triggerButton.focus();\n    }\n  }\n\n  private renderOverflowMenu(): HTMLLIElement {\n    if (this.collapsedElements.length) {\n      return (\n        <li>\n          <z-popover\n            class=\"hidden-paths-popover\"\n            ref={(val) => (this.collapsedElementsRef = val as HTMLZPopoverElement)}\n            bind-to={this.triggerButton}\n            position={PopoverPosition.BOTTOM_RIGHT}\n            closable={true}\n            showArrow\n          >\n            <div class=\"popover-content\">\n              <z-list>\n                <z-list-group size={ListSize.SMALL}>\n                  {this.collapsedElements.map((item, index, array) => {\n                    return (\n                      <div>\n                        <z-list-element clickable>\n                          <a\n                            class=\"text-ellipsis\"\n                            href={item.path}\n                            onClick={(e) => this.handlePreventFollowUrl(e, item)}\n                            onKeyDown={(e) => this.handleOverflowMenuAccessibility(e)}\n                          >\n                            {item.text}\n                          </a>\n                        </z-list-element>\n                        {index < array.length - 1 && <z-divider color=\"color-surface03\"></z-divider>}\n                      </div>\n                    );\n                  })}\n                </z-list-group>\n              </z-list>\n            </div>\n          </z-popover>\n          <button\n            aria-label=\"Mostra più breadcrumb\"\n            aria-haspopup=\"true\"\n            ref={(el) => (this.triggerButton = el as HTMLButtonElement)}\n            class=\"dots\"\n            onClick={() => {\n              this.togglePopover();\n            }}\n            onKeyDown={(e) => {\n              handleKeyboardSubmit(e, this.togglePopover.bind(this));\n              setTimeout(() => {\n                this.anchorElements[0].focus();\n              }, 100);\n            }}\n          >\n            ...\n          </button>\n        </li>\n      );\n    }\n  }\n\n  render(): HTMLZBreadcrumbElement {\n    return (\n      <Host style={{\"--line-clamp-popover\": `${this.overflowMenuItemRows}`}}>\n        {this.viewPortWidth === Device.MOBILE ? this.renderMobileBreadcrumb() : this.renderBreadcrumb()}\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}