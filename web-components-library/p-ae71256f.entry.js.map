{"version":3,"names":["stylesCss","ZInfoRevealStyle0","ZInfoReveal","InfoRevealPosition","BOTTOM_RIGHT","watchItems","Array","from","this","el","children","forEach","child","index","currentIndex","setAttribute","removeAttribute","openInfoBox","open","closeInfoBox","next","length","render","h","Host","key","class","onClick","bind","label","name","icon","tabIndex"],"sources":["src/components/z-info-reveal/styles.css?tag=z-info-reveal&encapsulation=shadow","src/components/z-info-reveal/index.tsx"],"sourcesContent":[":host {\n  --z-info-reveal-theme--surface: var(--color-black);\n  --z-info-reveal-theme--text: var(--color-white);\n  --z-info-reveal-shadow: var(--shadow-2);\n  --z-info-reveal-max-width: 375px; /* defaults to average width of mobile devices */\n\n  position: relative;\n  display: flex;\n  width: fit-content;\n  background-color: var(--z-info-reveal-theme--surface);\n  color: var(--z-info-reveal-theme--text);\n  font-size: var(--font-size-3);\n  font-weight: var(--font-rg);\n  letter-spacing: 0;\n  line-height: 1.5;\n}\n\nbutton {\n  padding: 0;\n  border: none;\n  background-color: transparent;\n  border-radius: 0;\n  color: inherit;\n  cursor: pointer;\n  fill: currentcolor;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  line-height: inherit;\n}\n\nz-icon {\n  --z-icon-width: calc(var(--space-unit) * 3);\n  --z-icon-height: calc(var(--space-unit) * 3);\n\n  display: flex;\n}\n\n.z-info-reveal-trigger {\n  display: flex;\n  width: fit-content;\n  height: 100%;\n  align-items: center;\n  padding: calc(var(--space-unit) / 2);\n  box-shadow: var(--z-info-reveal-shadow);\n  column-gap: calc(var(--space-unit) / 2);\n}\n\n:host([position=\"top_left\"]) .z-info-reveal-trigger,\n:host([position=\"bottom_left\"]) .z-info-reveal-trigger {\n  flex-direction: row-reverse;\n}\n\n:host([open]) .z-info-reveal-trigger {\n  box-shadow: none;\n}\n\n.info-box {\n  position: absolute;\n  display: flex;\n  max-width: var(--z-info-reveal-max-width);\n  padding: calc(var(--space-unit) / 2);\n  background-color: var(--z-info-reveal-theme--surface);\n  box-shadow: var(--z-info-reveal-shadow);\n  column-gap: calc(var(--space-unit) / 2);\n  cursor: pointer;\n}\n\n:host([position=\"bottom_left\"]) .info-box,\n:host([position=\"bottom_right\"]) .info-box {\n  bottom: 0;\n}\n\n:host([position=\"top_right\"]) .info-box,\n:host([position=\"bottom_right\"]) .info-box {\n  right: 0;\n}\n\n:host([position=\"top_left\"]) .info-box,\n:host([position=\"bottom_left\"]) .info-box {\n  left: 0;\n  flex-direction: row-reverse;\n}\n\n::slotted(*) {\n  display: none;\n  width: max-content;\n}\n\n::slotted([data-current]) {\n  display: block;\n}\n\n:host([position=\"top_left\"]) .z-info-reveal-close,\n:host([position=\"top_right\"]) .z-info-reveal-close {\n  align-self: flex-start;\n}\n\n:host([position=\"bottom_left\"]) .z-info-reveal-close,\n:host([position=\"bottom_right\"]) .z-info-reveal-close {\n  align-self: flex-end;\n}\n","import {Component, h, Prop, State, Watch, Element, Host} from \"@stencil/core\";\nimport {InfoRevealPosition} from \"../../beans\";\n\n@Component({\n  tag: \"z-info-reveal\",\n  styleUrl: \"styles.css\",\n  shadow: true,\n})\n\n/**\n * Info reveal component.\n *\n * @slot - info to display in the info box. If more than one element has been slotted,\n * by clicking on the panel it switches to the next info element.\n * @cssprop --z-info-reveal-theme--surface - background color of the info reveal panel.\n * @cssprop --z-info-reveal-theme--text - foreground color of the info reveal panel.\n * @cssprop --z-info-reveal-shadow - shadow of the info reveal panel.\n * @cssprop --z-info-reveal-max-width - max width of the info reveal panel.\n */\nexport class ZInfoReveal {\n  @Element() el: HTMLZInfoRevealElement;\n\n  /** Name of the icon for the open button */\n  @Prop()\n  icon? = \"informationsource\";\n\n  /** Info reveal's position */\n  @Prop({reflect: true})\n  position?: InfoRevealPosition = InfoRevealPosition.BOTTOM_RIGHT;\n\n  /** Text that appears on closed panel next to the open button. */\n  @Prop()\n  label?: string;\n\n  /** Whether the info panel is open. */\n  @State()\n  open = false;\n\n  /** Current index for the info queue. */\n  @State()\n  currentIndex: number = null;\n\n  @Watch(\"currentIndex\")\n  watchItems(): void {\n    Array.from(this.el.children).forEach((child, index) => {\n      if (this.currentIndex === index) {\n        child.setAttribute(\"data-current\", \"\");\n      } else {\n        child.removeAttribute(\"data-current\");\n      }\n    });\n  }\n\n  /**\n   * Open the info box.\n   */\n  private openInfoBox(): void {\n    this.currentIndex = 0;\n    this.open = true;\n  }\n\n  /**\n   * Close the info box.\n   */\n  private closeInfoBox(): void {\n    this.open = false;\n  }\n\n  /**\n   * Navigate slotted info.\n   * It closes the info box after the last info has been navigated.\n   */\n  private next(): void {\n    this.currentIndex = this.currentIndex + 1;\n    if (this.currentIndex === this.el.children.length) {\n      this.closeInfoBox();\n    }\n  }\n\n  render(): HTMLZInfoRevealElement {\n    return (\n      <Host open={this.open}>\n        <button\n          class=\"z-info-reveal-trigger\"\n          onClick={this.openInfoBox.bind(this)}\n        >\n          {this.label && <span class=\"z-info-reveal-label\">{this.label}</span>}\n          <z-icon name={this.icon}></z-icon>\n        </button>\n        {this.open && (\n          <div\n            class=\"info-box\"\n            onClick={this.next.bind(this)}\n            tabIndex={0}\n          >\n            <slot></slot>\n            <button\n              class=\"z-info-reveal-close\"\n              onClick={this.closeInfoBox.bind(this)}\n            >\n              <z-icon name=\"close\"></z-icon>\n            </button>\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n"],"mappings":"6FAAA,MAAMA,EAAY,o+DAClB,MAAAC,EAAeD,E,MCkBFE,EAAW,M,mCAKd,oB,cAIwBC,EAAmBC,a,+BAQ5C,M,kBAIgB,I,CAGvB,UAAAC,GACEC,MAAMC,KAAKC,KAAKC,GAAGC,UAAUC,SAAQ,CAACC,EAAOC,KAC3C,GAAIL,KAAKM,eAAiBD,EAAO,CAC/BD,EAAMG,aAAa,eAAgB,G,KAC9B,CACLH,EAAMI,gBAAgB,e,KAQpB,WAAAC,GACNT,KAAKM,aAAe,EACpBN,KAAKU,KAAO,I,CAMN,YAAAC,GACNX,KAAKU,KAAO,K,CAON,IAAAE,GACNZ,KAAKM,aAAeN,KAAKM,aAAe,EACxC,GAAIN,KAAKM,eAAiBN,KAAKC,GAAGC,SAASW,OAAQ,CACjDb,KAAKW,c,EAIT,MAAAG,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,2CAACP,KAAMV,KAAKU,MACfK,EAAA,UAAAE,IAAA,2CACEC,MAAM,wBACNC,QAASnB,KAAKS,YAAYW,KAAKpB,OAE9BA,KAAKqB,OAASN,EAAA,QAAMG,MAAM,uBAAuBlB,KAAKqB,OACvDN,EAAA,UAAAE,IAAA,2CAAQK,KAAMtB,KAAKuB,QAEpBvB,KAAKU,MACJK,EAAA,OACEG,MAAM,WACNC,QAASnB,KAAKY,KAAKQ,KAAKpB,MACxBwB,SAAU,GAEVT,EAAA,aACAA,EAAA,UACEG,MAAM,sBACNC,QAASnB,KAAKW,aAAaS,KAAKpB,OAEhCe,EAAA,UAAQO,KAAK,Y"}