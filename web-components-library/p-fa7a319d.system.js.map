{"version":3,"names":["stylesCss","ZTdStyle0","ZTd","exports","class_1","prototype","updateColspan","this","colspan","host","style","gridColumn","concat","removeProperty","colspanChange","emit","onMenuButtonClick","ev","stopPropagation","popoverEl","open","componentWillLoad","render","_this","h","Host","key","role","isMenuOpen","showMenu","class","variant","ButtonVariant","TERTIARY","icon","size","ControlSize","X_SMALL","ref","el","menuTrigger","onClick","bind","bindTo","onOpenChange","event","detail","name"],"sources":["src/components/table/cells/z-td/styles.css?tag=z-td&encapsulation=shadow","src/components/table/cells/z-td/index.tsx"],"sourcesContent":["@import \"../z-table-cells.css\";\n","import {Component, Element, Event, EventEmitter, Host, Prop, State, Watch, h} from \"@stencil/core\";\nimport {ButtonVariant, ControlSize, VisibilityCondition} from \"../../../../beans\";\n\n/**\n * ZTd component.\n * @slot - ZTd content.\n */\n@Component({\n  tag: \"z-td\",\n  styleUrl: \"styles.css\",\n  shadow: true,\n})\nexport class ZTd {\n  @Element() host: HTMLZTdElement;\n\n  /**\n   * Number of columns that the cell should span.\n   */\n  @Prop()\n  colspan: number;\n\n  /**\n   * Whether the cell should stick.\n   */\n  @Prop({reflect: true})\n  sticky = false;\n\n  /**\n   * Enables the contextual menu.\n   * Can be set to \"hover\" or \"always\" to show the button only on cell hover or always.\n   * Set a nullish value to hide the menu button.\n   */\n  @Prop({reflect: true})\n  showMenu: VisibilityCondition = null;\n\n  /**\n   * Store the open state of the menu.\n   */\n  @State()\n  isMenuOpen = false;\n\n  private menuTrigger: HTMLZButtonElement;\n\n  private popoverEl: HTMLZPopoverElement;\n\n  /**\n   * Emitted when the value of the `colspan` changes.\n   */\n  @Event({\n    bubbles: true,\n    cancelable: false,\n  })\n  colspanChange: EventEmitter<number>;\n\n  @Watch(\"colspan\")\n  protected updateColspan(): void {\n    if (this.colspan) {\n      this.host.style.gridColumn = `span ${this.colspan}`;\n    } else {\n      this.host.style.removeProperty(\"grid-column\");\n    }\n\n    this.colspanChange.emit(this.colspan || 1);\n  }\n\n  private onMenuButtonClick(ev: MouseEvent): void {\n    ev.stopPropagation();\n    this.popoverEl.open = !this.popoverEl.open;\n  }\n\n  componentWillLoad(): void {\n    this.updateColspan();\n  }\n\n  render(): HTMLZTdElement {\n    return (\n      <Host\n        role=\"cell\"\n        menu-open={this.isMenuOpen}\n      >\n        <slot></slot>\n        {this.showMenu && (\n          <div class=\"cell--menu-container prevent-expand\">\n            <z-button\n              variant={ButtonVariant.TERTIARY}\n              icon=\"contextual-menu\"\n              size={ControlSize.X_SMALL}\n              ref={(el) => (this.menuTrigger = el as HTMLZButtonElement)}\n              onClick={this.onMenuButtonClick.bind(this)}\n            />\n            <z-popover\n              ref={(el) => (this.popoverEl = el as HTMLZPopoverElement)}\n              bindTo={this.menuTrigger as HTMLElement}\n              onOpenChange={(event) => (this.isMenuOpen = event.detail.open)}\n            >\n              <slot name=\"contextual-menu\"></slot>\n            </z-popover>\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n"],"mappings":"wNAAA,IAAMA,EAAY,2uCAClB,IAAAC,EAAeD,E,ICWFE,EAAGC,EAAA,e,wGAaL,M,cAQuB,K,gBAMnB,K,CAgBHC,EAAAC,UAAAC,cAAA,WACR,GAAIC,KAAKC,QAAS,CAChBD,KAAKE,KAAKC,MAAMC,WAAa,QAAAC,OAAQL,KAAKC,Q,KACrC,CACLD,KAAKE,KAAKC,MAAMG,eAAe,c,CAGjCN,KAAKO,cAAcC,KAAKR,KAAKC,SAAW,E,EAGlCJ,EAAAC,UAAAW,kBAAA,SAAkBC,GACxBA,EAAGC,kBACHX,KAAKY,UAAUC,MAAQb,KAAKY,UAAUC,I,EAGxChB,EAAAC,UAAAgB,kBAAA,WACEd,KAAKD,e,EAGPF,EAAAC,UAAAiB,OAAA,eAAAC,EAAAhB,KACE,OACEiB,EAACC,EAAI,CAAAC,IAAA,2CACHC,KAAK,OAAM,YACApB,KAAKqB,YAEhBJ,EAAA,QAAAE,IAAA,6CACCnB,KAAKsB,UACJL,EAAA,OAAAE,IAAA,2CAAKI,MAAM,uCACTN,EAAA,YAAAE,IAAA,2CACEK,QAASC,EAAcC,SACvBC,KAAK,kBACLC,KAAMC,EAAYC,QAClBC,IAAK,SAACC,GAAE,OAAMhB,EAAKiB,YAAcD,CAAzB,EACRE,QAASlC,KAAKS,kBAAkB0B,KAAKnC,QAEvCiB,EAAA,aAAAE,IAAA,2CACEY,IAAK,SAACC,GAAE,OAAMhB,EAAKJ,UAAYoB,CAAvB,EACRI,OAAQpC,KAAKiC,YACbI,aAAc,SAACC,GAAK,OAAMtB,EAAKK,WAAaiB,EAAMC,OAAO1B,IAArC,GAEpBI,EAAA,QAAAE,IAAA,2CAAMqB,KAAK,sB,oPAnFT,I","ignoreList":[]}