{"version":3,"names":["stylesCss","ZTableCellStyle0","ZTableCell","handleMenu","this","isMenuOpened","componentWillRender","host","setAttribute","render","h","Host","key","showButton","class","visible","icon","variant","ButtonVariant","TERTIARY","size","ButtonSize","X_SMALL","onClick","name"],"sources":["src/deprecated/z-table-deprecated/z-table-cell/styles.css?tag=z-table-cell&encapsulation=shadow","src/deprecated/z-table-deprecated/z-table-cell/index.tsx"],"sourcesContent":[":host {\n  display: table-cell;\n  border-bottom: var(--border-size-small) solid var(--color-surface03);\n  background-color: var(--color-white);\n  font-family: var(--font-family-sans);\n  font-weight: var(--font-rg);\n}\n\n:host > .button-container {\n  display: none;\n}\n\n:host:hover > .button-container {\n  display: initial;\n}\n\n.button-container {\n  position: absolute;\n  z-index: 5;\n  top: 8px;\n  right: 8px;\n}\n\n.button-content {\n  position: relative;\n}\n\n.contextual-menu-container {\n  position: absolute;\n  top: calc(100% - var(--space-unit));\n  right: 0;\n  display: none;\n}\n\n.button-container.visible,\n.contextual-menu-container.visible {\n  display: initial;\n}\n\n:host([padding=\"x-small\"]) {\n  padding: calc(var(--space-unit) * 0.5);\n}\n\n:host([padding=\"small\"]) {\n  padding: calc(var(--space-unit));\n}\n\n:host([padding=\"medium\"]) {\n  padding: calc(var(--space-unit) * 2);\n}\n\n:host([padding=\"large\"]) {\n  padding: calc(var(--space-unit) * 2.5);\n}\n\n:host([padding=\"special\"]) {\n  padding: 0;\n}\n","import {Component, Element, h, Host, Prop, State} from \"@stencil/core\";\nimport {ButtonVariant, ButtonSize} from \"../../../beans\";\n\n/**\n * @deprecated\n */\n@Component({\n  tag: \"z-table-cell\",\n  styleUrl: \"styles.css\",\n  shadow: true,\n})\nexport class ZTableCell {\n  @Element() host: HTMLZTableCellElement;\n\n  /** [Optional] Show contextual menu button */\n  @Prop()\n  showButton?: boolean;\n\n  /** Set padding size of cell, if special 0px padding will be set */\n  @Prop({reflect: true})\n  padding: \"x-small\" | \"small\" | \"medium\" | \"large\" | \"special\" = \"medium\";\n\n  @State()\n  isMenuOpened = false;\n\n  private handleMenu(): void {\n    this.isMenuOpened = !this.isMenuOpened;\n  }\n\n  componentWillRender(): void {\n    this.host.setAttribute(\"role\", \"cell\");\n  }\n\n  render(): HTMLZTableCellElement {\n    return (\n      <Host>\n        {this.showButton && (\n          <div\n            class={{\n              \"button-container\": true,\n              \"visible\": this.isMenuOpened,\n            }}\n          >\n            <div class=\"button-content\">\n              <z-button\n                icon=\"contextual-menu\"\n                variant={ButtonVariant.TERTIARY}\n                size={ButtonSize.X_SMALL}\n                onClick={() => this.handleMenu()}\n              />\n              <div\n                class={{\n                  \"contextual-menu-container\": true,\n                  \"visible\": this.isMenuOpened,\n                }}\n              >\n                <slot name=\"contextual-menu\" />\n              </div>\n            </div>\n          </div>\n        )}\n        <slot />\n      </Host>\n    );\n  }\n}\n"],"mappings":"+FAAA,MAAMA,EAAY,s0BAClB,MAAAC,EAAeD,E,MCUFE,EAAU,M,gEAS2C,S,kBAGjD,K,CAEP,UAAAC,GACNC,KAAKC,cAAgBD,KAAKC,Y,CAG5B,mBAAAC,GACEF,KAAKG,KAAKC,aAAa,OAAQ,O,CAGjC,MAAAC,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,4CACFR,KAAKS,YACJH,EAAA,OACEI,MAAO,CACL,mBAAoB,KACpBC,QAAWX,KAAKC,eAGlBK,EAAA,OAAKI,MAAM,kBACTJ,EAAA,YACEM,KAAK,kBACLC,QAASC,EAAcC,SACvBC,KAAMC,EAAWC,QACjBC,QAAS,IAAMnB,KAAKD,eAEtBO,EAAA,OACEI,MAAO,CACL,4BAA6B,KAC7BC,QAAWX,KAAKC,eAGlBK,EAAA,QAAMc,KAAK,uBAKnBd,EAAA,QAAAE,IAAA,6C"}