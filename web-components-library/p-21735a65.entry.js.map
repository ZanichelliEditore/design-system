{"version":3,"names":["stylesCss","ZAvatarStyle0","ZAvatar","constructor","hostRef","AvatarSize","MEDIUM","_a","this","text","length","_b","image","console","warn","getTextSize","size","SMALL","LARGE","render","h","Host","key","class","style","color","textColor","backgroundColor","substring","src","onError"],"sources":["src/components/z-avatar/styles.css?tag=z-avatar&encapsulation=shadow","src/components/z-avatar/index.tsx"],"sourcesContent":[":host {\n  display: inline-flex;\n  overflow: hidden;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--gray700);\n  border-radius: 50%;\n  font-family: var(--font-family-sans);\n  text-transform: uppercase;\n}\n\n:host(.small),\n:host(.small) > img {\n  width: calc(var(--space-unit) * 3);\n  height: calc(var(--space-unit) * 3);\n}\n\n:host(.medium),\n:host(.medium) > img {\n  width: calc(var(--space-unit) * 4);\n  height: calc(var(--space-unit) * 4);\n}\n\n:host(.large),\n:host(.large) > img {\n  width: calc(var(--space-unit) * 5);\n  height: calc(var(--space-unit) * 5);\n}\n\n:host > img {\n  object-fit: cover;\n}\n","import {Component, Prop, h, Host} from \"@stencil/core\";\nimport {AvatarSize} from \"../../beans\";\n\n@Component({\n  tag: \"z-avatar\",\n  styleUrl: \"styles.css\",\n  shadow: true,\n})\nexport class ZAvatar {\n  /** [optional] Avatar size */\n  @Prop()\n  size?: AvatarSize = AvatarSize.MEDIUM;\n\n  /** [optional] Avatar text */\n  @Prop()\n  text?: string;\n\n  /** [optional] Avatar text color */\n  @Prop()\n  textColor?: string = \"color-white\";\n\n  /** [optional] Avatar background color */\n  @Prop()\n  backgroundColor?: string = \"gray700\";\n\n  /** [optional] Avatar image */\n  @Prop({mutable: true})\n  image?: string;\n\n  constructor() {\n    if (this.text?.length === 0 && this.image?.length === 0) {\n      console.warn(\"z-avatar must contain at least one prop between text and image\");\n    }\n  }\n\n  private getTextSize(): string {\n    if (this.size === AvatarSize.SMALL) {\n      return \"5\";\n    } else if (this.size === AvatarSize.MEDIUM) {\n      return \"4\";\n    } else if (this.size === AvatarSize.LARGE) {\n      return \"2\";\n    }\n  }\n\n  render(): HTMLZAvatarElement {\n    return (\n      <Host\n        class={{[this.size]: true, [`body-${this.getTextSize()}-sb`]: true}}\n        style={{\n          color: `var(--${this.textColor})`,\n          backgroundColor: `var(--${this.backgroundColor})`,\n        }}\n      >\n        {this.text && !this.image && <span>{this.text.substring(0, 2)}</span>}\n        {this.image && (\n          <img\n            src={this.image}\n            onError={() => (this.image = \"\")}\n          />\n        )}\n      </Host>\n    );\n  }\n}\n"],"mappings":"sFAAA,MAAMA,EAAY,khBAClB,MAAAC,EAAeD,E,MCOFE,EAAO,MAqBlB,WAAAC,CAAAC,G,4BAlBoBC,EAAWC,O,mCAQV,c,qBAIM,U,qBAOzB,KAAIC,EAAAC,KAAKC,QAAI,MAAAF,SAAA,SAAAA,EAAEG,UAAW,KAAKC,EAAAH,KAAKI,SAAK,MAAAD,SAAA,SAAAA,EAAED,UAAW,EAAG,CACvDG,QAAQC,KAAK,iE,EAIT,WAAAC,GACN,GAAIP,KAAKQ,OAASX,EAAWY,MAAO,CAClC,MAAO,G,MACF,GAAIT,KAAKQ,OAASX,EAAWC,OAAQ,CAC1C,MAAO,G,MACF,GAAIE,KAAKQ,OAASX,EAAWa,MAAO,CACzC,MAAO,G,EAIX,MAAAC,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,2CACHC,MAAO,CAAC,CAACf,KAAKQ,MAAO,KAAM,CAAC,QAAQR,KAAKO,oBAAqB,MAC9DS,MAAO,CACLC,MAAO,SAASjB,KAAKkB,aACrBC,gBAAiB,SAASnB,KAAKmB,qBAGhCnB,KAAKC,OAASD,KAAKI,OAASQ,EAAA,YAAOZ,KAAKC,KAAKmB,UAAU,EAAG,IAC1DpB,KAAKI,OACJQ,EAAA,OACES,IAAKrB,KAAKI,MACVkB,QAAS,IAAOtB,KAAKI,MAAQ,K"}