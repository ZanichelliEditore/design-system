{"version":3,"names":["stylesCss","ZComboboxStyle0","ZCombobox","watchItems","this","itemsList","items","JSON","parse","selectedCounter","filter","item","checked","length","updateRenderItemsList","watchSearchValue","filterItems","searchValue","inputCheckListener","e","id","detail","replace","inputid","maxcheckableitems","checkAll","map","emitComboboxChange","comboboxChange","emit","constructor","hostRef","inputType","InputType","TEXT","ControlSize","BIG","toggleComboBox","bind","closeFilterItems","componentWillLoad","componentWillRender","resetRenderItemsList","renderItemsList","forEach","push","Object","assign","value","start","name","toUpperCase","indexOf","end","newName","substring","bold","isopen","renderHeader","h","class","onClick","onKeyDown","ev","keyCode","KeyboardKeyCode","SPACE","preventDefault","onKeyUp","handleKeyboardSubmit","role","tabindex","label","size","renderContent","hassearch","renderSearchInput","hascheckall","renderCheckAll","renderItems","renderList","renderCloseButton","renderItem","index","listitemid","action","underlined","type","CHECKBOX","htmlid","disabled","X_SMALL","SMALL","renderNoSearchResults","hasgroupitems","renderGroups","i","newData","reduce","group","category","zListItem","_a","listGroups","entries","key","ListDividerType","ELEMENT","slot","text","noresultslabel","icon","closesearchtext","searchlabel","placeholder","searchplaceholder","htmltitle","searchtitle","message","onInputChange","keycode","allChecked","uncheckalltext","checkalltext","render","open","fixed","isfixed"],"sources":["src/components/inputs/z-combobox/styles.css?tag=z-combobox&encapsulation=shadow","src/components/inputs/z-combobox/index.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\n:host > div.fixed {\n  position: relative;\n}\n\n:host > div > .header {\n  position: relative;\n  z-index: 10;\n  display: flex;\n  min-height: 42px;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 calc(var(--space-unit) * 1.5);\n  border: var(--border-size-small) solid var(--color-surface04);\n  margin: 0;\n  background-color: var(--color-input-field01);\n  border-radius: var(--border-radius-small);\n  cursor: pointer;\n}\n\n:host([size=\"small\"]) > div > .header {\n  min-height: 34px;\n  font-size: var(--font-size-2);\n}\n\n:host([size=\"x-small\"]) > div > .header {\n  min-height: 30px;\n  font-size: var(--font-size-2);\n}\n\n:host([size=\"x-small\"]) > div > .header p.body-3 {\n  padding: calc(var(--space-unit) * 0.5) 0;\n}\n\n:host > div > .header:hover {\n  outline: var(--border-size-medium) solid var(--color-surface04);\n  outline-offset: -2px;\n}\n\n:host > div.open > div.header:focus:focus-visible {\n  box-shadow: none;\n}\n\n:host > div > div.header:focus:focus-visible {\n  box-shadow: var(--shadow-focus-primary);\n  outline: none;\n}\n\n:host > div > .header > p.body-3 {\n  padding: var(--space-unit) 0;\n  margin: 0;\n  color: var(--color-text01);\n}\n\n:host > div > .header > p.body-3 > span {\n  font-weight: var(--font-sb);\n}\n\n:host > div > .header > z-icon {\n  fill: var(--color-icon02);\n  transform: rotate(360deg);\n  transition: all 200ms linear;\n}\n\n:host > div > .header > z-icon.small,\n:host > div > .header > z-icon.x-small {\n  --z-icon-width: 16px;\n  --z-icon-height: 16px;\n}\n\n:host > div.open > .header {\n  border: var(--border-size-small) solid var(--color-primary01);\n  border-radius: var(--border-radius-small) var(--border-radius-small) 0 0;\n}\n\n:host > div.disabled {\n  pointer-events: none;\n}\n\n:host > div.disabled .header {\n  border-color: var(--color-disabled01);\n  fill: var(--color-disabled01);\n}\n\n:host > div.disabled .header > p.body-3 {\n  color: var(--color-disabled02);\n}\n\n:host > div.disabled .header > z-icon:last-child {\n  fill: var(--color-disabled01);\n}\n\n:host > div.open > .header > z-icon {\n  fill: var(--color-icon02);\n  transform: rotate(180deg);\n  transition: all 200ms linear;\n}\n\n:host > div.open > div.open-combo-data {\n  position: relative;\n  z-index: 12;\n  padding: var(--space-unit) calc(var(--space-unit) * 2);\n  border: var(--border-size-small) solid var(--gray200);\n  border-top: 0;\n  background-color: var(--color-input-field01);\n  border-radius: 0;\n}\n\n:host > div.open > div.open-combo-data > div {\n  overflow: auto;\n  max-height: 235px;\n  padding: 0;\n  scrollbar-color: var(--color-primary01) transparent;\n}\n\n:host > div.open > div.open-combo-data > z-input {\n  width: 100%;\n  margin-bottom: calc(var(--space-unit) * 2);\n}\n\n:host > div.open > div.open-combo-data > div > ul {\n  max-height: 235px;\n  padding: 0 3px; /* needed for checkbox focus shadow */\n  margin: 0;\n}\n\n::-webkit-scrollbar {\n  width: 10px;\n  background: linear-gradient(to right, transparent 0 3px, var(--gray200) 3px 7px, transparent 7px 10px);\n  border-radius: var(--border-radius);\n}\n\n::-webkit-scrollbar-thumb {\n  width: 10px;\n  background-color: var(--color-primary01);\n}\n\n:host > div.open > z-input {\n  position: relative;\n  z-index: 1;\n  width: 238px;\n  margin: 0 calc(var(--space-unit) * 2);\n  color: var(--color-primary01);\n}\n\n:host > div.open > div.open-combo-data > div.search {\n  overflow: hidden;\n  max-height: auto;\n  margin-top: 0;\n  box-shadow: 1px 1px 4px 2px rgb(217 222 227 / 50%);\n}\n\n:host > div.open > div.open-combo-data > div.search > ul {\n  overflow: auto;\n  max-height: 180px;\n  padding: var(--space-unit) calc(var(--space-unit) * 2);\n  scrollbar-color: var(--color-primary01) transparent;\n}\n\n:host > div.open > div.open-combo-data > div.search > div {\n  display: flex;\n  justify-content: center;\n}\n\n:host > div.open > div.open-combo-data > div.search > div > a {\n  display: inline-block;\n  height: 44px;\n  color: var(--color-primary01);\n  cursor: pointer;\n  font-family: var(--font-family-sans);\n  font-size: 14px;\n  font-weight: var(--font-sb);\n  line-height: 44px;\n  text-align: center;\n  text-transform: uppercase;\n}\n\n:host > div.open > div.open-combo-data > div.check-all-wrapper {\n  padding: calc(var(--space-unit) * 2) calc(var(--space-unit) * 0.5);\n  border-bottom: var(--border-size-small) solid var(--gray800);\n  margin-bottom: var(--space-unit);\n  text-align: left;\n}\n\n:host([size=\"small\"]) > div.open > div.open-combo-data > div.check-all-wrapper {\n  padding: calc(var(--space-unit) * 1.5) calc(var(--space-unit) * 0.5);\n}\n\n:host([size=\"x-small\"]) > div.open > div.open-combo-data > div.check-all-wrapper {\n  padding: var(--space-unit) calc(var(--space-unit) * 0.5);\n}\n","import {Component, Prop, h, State, Listen, Watch, Event, EventEmitter} from \"@stencil/core\";\nimport {ComboItem, InputType, KeyboardKeyCode, ListDividerType, ControlSize} from \"../../../beans\";\nimport {ZInput} from \"../z-input\";\nimport {handleKeyboardSubmit} from \"../../../utils/utils\";\nimport {ZMyzListItem} from \"../../../snowflakes/myz/list/z-myz-list-item\";\n\n@Component({\n  tag: \"z-combobox\",\n  styleUrl: \"styles.css\",\n  shadow: true,\n})\nexport class ZCombobox {\n  /** input unique id */\n  @Prop()\n  inputid: string;\n\n  /** list items array */\n  @Prop()\n  items: ComboItem[] | string;\n\n  /** label text */\n  @Prop()\n  label: string;\n\n  /** the combobox is disabled */\n  @Prop({reflect: true})\n  disabled?: boolean = false;\n\n  /** show search input flag (optional) */\n  @Prop()\n  hassearch?: boolean = false;\n\n  /** search input label text (optional) */\n  @Prop()\n  searchlabel?: string;\n\n  /** search input placeholder text (optional) */\n  @Prop()\n  searchplaceholder?: string;\n\n  /** search input title text (optional) */\n  @Prop()\n  searchtitle?: string;\n\n  /** no result text message */\n  @Prop()\n  noresultslabel?: string = \"Nessun risultato\";\n\n  /** toggle combo list opening flag */\n  @Prop({mutable: true})\n  isopen = false;\n\n  /** fixed style flag */\n  @Prop()\n  isfixed = false;\n\n  /** close combobox list text */\n  @Prop()\n  closesearchtext?: string = \"Chiudi\";\n\n  /** show \"check all\" checkbox (optional) */\n  @Prop()\n  hascheckall?: boolean = false;\n\n  /** check all label (optional) */\n  @Prop()\n  checkalltext?: string = \"Seleziona tutti\";\n\n  /** uncheck all label (optional) */\n  @Prop()\n  uncheckalltext?: string = \"Deseleziona tutti\";\n\n  /** max number of checkable items (0 = unlimited) */\n  @Prop()\n  maxcheckableitems = 0;\n\n  /** group items by category */\n  @Prop()\n  hasgroupitems?: boolean;\n\n  /** Available sizes: `big`, `small` and `x-small`. Defaults to `big`. */\n  @Prop()\n  size?: ControlSize = ControlSize.BIG;\n\n  @State()\n  searchValue: string;\n\n  @State()\n  selectedCounter: number;\n\n  @State()\n  renderItemsList: ComboItem[] = []; // used for render only\n\n  private itemsList: ComboItem[] = [];\n\n  private inputType: InputType = InputType.TEXT;\n\n  @Watch(\"items\")\n  watchItems(): void {\n    this.itemsList = typeof this.items === \"string\" ? JSON.parse(this.items) : this.items;\n    this.selectedCounter = this.itemsList.filter((item) => item.checked).length;\n    this.updateRenderItemsList();\n  }\n\n  @Watch(\"searchValue\")\n  watchSearchValue(): void {\n    this.filterItems(this.searchValue);\n  }\n\n  @Listen(\"inputCheck\")\n  inputCheckListener(e: CustomEvent): void {\n    const id = e.detail.id.replace(`combo-checkbox-${this.inputid}-`, \"\");\n\n    if (id === \"check-all\" && (!this.maxcheckableitems || this.maxcheckableitems >= this.itemsList.length)) {\n      return this.checkAll(e.detail.checked);\n    }\n\n    this.itemsList = this.itemsList.map((item: ComboItem) => {\n      if (item.id === id) {\n        item.checked = e.detail.checked;\n      }\n\n      return item;\n    });\n    this.updateRenderItemsList();\n    this.emitComboboxChange();\n  }\n\n  /** Emitted when value is checked/unchecked. Returns id, items. */\n  @Event()\n  comboboxChange: EventEmitter;\n\n  private emitComboboxChange(): void {\n    this.comboboxChange.emit({id: this.inputid, items: this.itemsList});\n  }\n\n  constructor() {\n    this.toggleComboBox = this.toggleComboBox.bind(this);\n    this.closeFilterItems = this.closeFilterItems.bind(this);\n  }\n\n  componentWillLoad(): void {\n    this.watchItems();\n  }\n\n  componentWillRender(): void {\n    this.selectedCounter = this.itemsList.filter((item) => item.checked).length;\n  }\n\n  private updateRenderItemsList(): void {\n    if (this.searchValue) {\n      this.filterItems(this.searchValue);\n    } else {\n      this.resetRenderItemsList();\n    }\n  }\n\n  private resetRenderItemsList(): void {\n    const renderItemsList = [];\n    this.itemsList.forEach((item: ComboItem) => {\n      renderItemsList.push({...item});\n    });\n    this.renderItemsList = renderItemsList;\n  }\n\n  private filterItems(value: string): void {\n    if (!value) {\n      return this.closeFilterItems();\n    }\n\n    this.resetRenderItemsList();\n    this.renderItemsList = this.renderItemsList.filter((item) => {\n      const start = item.name.toUpperCase().indexOf(value.toUpperCase());\n      const end = start + value.length;\n      const newName =\n        item.name.substring(0, start) +\n        item.name.substring(start, end).bold() +\n        item.name.substring(end, item.name.length);\n\n      item.name = newName;\n\n      return start >= 0;\n    });\n  }\n\n  private checkAll(checked = true): void {\n    this.itemsList = this.itemsList.map((item: ComboItem) => ({\n      ...item,\n      checked: checked,\n    }));\n    this.resetRenderItemsList();\n    this.emitComboboxChange();\n  }\n\n  private closeFilterItems(): void {\n    this.searchValue = \"\";\n    this.resetRenderItemsList();\n  }\n\n  private toggleComboBox(): void {\n    this.isopen = !this.isopen;\n  }\n\n  private renderHeader(): HTMLDivElement {\n    return (\n      <div\n        class=\"header\"\n        onClick={() => this.toggleComboBox()}\n        onKeyDown={(ev: KeyboardEvent) => {\n          if (ev.keyCode === KeyboardKeyCode.SPACE) {\n            ev.preventDefault();\n          }\n        }}\n        onKeyUp={(ev: KeyboardEvent) => handleKeyboardSubmit(ev, this.toggleComboBox)}\n        role=\"button\"\n        tabindex={0}\n      >\n        <p class=\"body-3\">\n          {this.label}\n          <span>{this.selectedCounter > 0 && ` (${this.selectedCounter})`}</span>\n        </p>\n        <z-icon\n          name=\"caret-down\"\n          class={this.size}\n        />\n      </div>\n    );\n  }\n\n  private renderContent(): HTMLDivElement {\n    if (!this.isopen) {\n      return;\n    }\n\n    return (\n      <div class=\"open-combo-data\">\n        {this.hassearch && this.renderSearchInput()}\n        {this.hascheckall && this.renderCheckAll()}\n        {this.renderItems()}\n      </div>\n    );\n  }\n\n  private renderItems(): HTMLDivElement {\n    if (!this.isopen) {\n      return;\n    }\n\n    return (\n      <div\n        class={this.searchValue && \"search\"}\n        tabindex={-1}\n      >\n        {this.renderList(this.renderItemsList)}\n        {this.searchValue && this.renderCloseButton()}\n      </div>\n    );\n  }\n\n  private renderItem(item: ComboItem, index: number, length: number): ZMyzListItem {\n    return (\n      <z-myz-list-item\n        id={item.id}\n        listitemid={item.id}\n        action={`combo-li-${this.inputid}`}\n        underlined={index !== length - 1}\n        class={this.size}\n      >\n        <z-input\n          type={InputType.CHECKBOX}\n          checked={item.checked}\n          htmlid={`combo-checkbox-${this.inputid}-${item.id}`}\n          label={item.name}\n          disabled={!item.checked && this.maxcheckableitems && this.maxcheckableitems === this.selectedCounter}\n          size={this.size === ControlSize.X_SMALL ? ControlSize.SMALL : this.size}\n        />\n      </z-myz-list-item>\n    );\n  }\n\n  private renderList(items: ComboItem[]): HTMLUListElement {\n    if (!items) {\n      return;\n    }\n    if (!items.length && this.searchValue) {\n      return this.renderNoSearchResults();\n    }\n\n    if (this.hasgroupitems) {\n      return this.renderGroups(this.itemsList);\n    }\n\n    return (\n      <ul>\n        {items.map((item, i) => {\n          return this.renderItem(item, i, items.length);\n        })}\n      </ul>\n    );\n  }\n\n  private renderGroups(items: ComboItem[]): HTMLUListElement {\n    const newData = items.reduce((group, item, index) => {\n      const {category} = item;\n      const zListItem = this.renderItem(item, index, items.length);\n\n      group[category] = group[category] ?? [];\n      group[category].push(zListItem);\n\n      return group;\n    }, {});\n\n    const listGroups = Object.entries(newData as {[key: string]: HTMLZListElementElement[]}).map(([key, value]) => {\n      return (\n        <z-list-group divider-type={ListDividerType.ELEMENT}>\n          <span\n            class=\"body-3-sb z-list-group-title\"\n            slot=\"header-title\"\n          >\n            {key}\n          </span>\n          {value.map((item) => item)}\n        </z-list-group>\n      );\n    });\n\n    return <ul>{listGroups}</ul>;\n  }\n\n  private renderNoSearchResults(): HTMLUListElement {\n    return (\n      <ul>\n        <z-myz-list-item\n          id=\"no-results\"\n          text={this.noresultslabel}\n          listitemid=\"no-results\"\n          icon=\"multiply-circle\"\n          class={this.size}\n        />\n      </ul>\n    );\n  }\n\n  private renderCloseButton(): HTMLDivElement {\n    return (\n      <div>\n        <a\n          onClick={() => this.closeFilterItems()}\n          onKeyUp={(e: KeyboardEvent) => handleKeyboardSubmit(e, this.closeFilterItems)}\n          role=\"button\"\n          tabindex={0}\n        >\n          {this.closesearchtext}\n        </a>\n      </div>\n    );\n  }\n\n  private renderSearchInput(): ZInput {\n    if (!this.isopen) {\n      return;\n    }\n\n    return (\n      <z-input\n        htmlid={`${this.inputid}_search`}\n        label={this.searchlabel}\n        placeholder={this.searchplaceholder}\n        htmltitle={this.searchtitle}\n        type={this.inputType}\n        value={this.searchValue}\n        message={false}\n        size={this.size}\n        onInputChange={(e: CustomEvent) => {\n          if (e.detail.keycode === 27) {\n            return this.closeFilterItems();\n          }\n          this.searchValue = e.detail.value;\n        }}\n      />\n    );\n  }\n\n  private renderCheckAll(): HTMLDivElement {\n    if (this.searchValue) {\n      return;\n    }\n\n    const allChecked = this.selectedCounter === this.itemsList.length;\n\n    return (\n      <div class=\"check-all-wrapper\">\n        <z-input\n          type={InputType.CHECKBOX}\n          checked={allChecked}\n          htmlid={`combo-checkbox-${this.inputid}-check-all`}\n          label={allChecked ? this.uncheckalltext : this.checkalltext}\n          disabled={this.maxcheckableitems && this.maxcheckableitems < this.itemsList.length}\n          size={this.size === ControlSize.X_SMALL ? ControlSize.SMALL : this.size}\n        />\n      </div>\n    );\n  }\n\n  render(): HTMLDivElement {\n    return (\n      <div\n        data-action={`combo-${this.inputid}`}\n        class={{open: this.isopen, fixed: this.isfixed, disabled: this.disabled}}\n        id={this.inputid}\n      >\n        {this.renderHeader()}\n        {!this.disabled && this.renderContent()}\n      </div>\n    );\n  }\n}\n"],"mappings":"uKAAA,MAAMA,EAAY,6zHAClB,MAAAC,EAAeD,E,MCUFE,EAAS,MAuFpB,UAAAC,GACEC,KAAKC,iBAAmBD,KAAKE,QAAU,SAAWC,KAAKC,MAAMJ,KAAKE,OAASF,KAAKE,MAChFF,KAAKK,gBAAkBL,KAAKC,UAAUK,QAAQC,GAASA,EAAKC,UAASC,OACrET,KAAKU,uB,CAIP,gBAAAC,GACEX,KAAKY,YAAYZ,KAAKa,Y,CAIxB,kBAAAC,CAAmBC,GACjB,MAAMC,EAAKD,EAAEE,OAAOD,GAAGE,QAAQ,kBAAkBlB,KAAKmB,WAAY,IAElE,GAAIH,IAAO,eAAiBhB,KAAKoB,mBAAqBpB,KAAKoB,mBAAqBpB,KAAKC,UAAUQ,QAAS,CACtG,OAAOT,KAAKqB,SAASN,EAAEE,OAAOT,Q,CAGhCR,KAAKC,UAAYD,KAAKC,UAAUqB,KAAKf,IACnC,GAAIA,EAAKS,KAAOA,EAAI,CAClBT,EAAKC,QAAUO,EAAEE,OAAOT,O,CAG1B,OAAOD,CAAI,IAEbP,KAAKU,wBACLV,KAAKuB,oB,CAOC,kBAAAA,GACNvB,KAAKwB,eAAeC,KAAK,CAACT,GAAIhB,KAAKmB,QAASjB,MAAOF,KAAKC,W,CAG1D,WAAAyB,CAAAC,G,yDA3CQ3B,KAAAC,UAAyB,GAEzBD,KAAA4B,UAAuBC,EAAUC,K,+EArEpB,M,eAIC,M,2GAgBI,mB,YAIjB,M,aAIC,M,qBAIiB,S,iBAIH,M,kBAIA,kB,oBAIE,oB,uBAIN,E,uCAQCC,EAAYC,I,+EASF,GA8C7BhC,KAAKiC,eAAiBjC,KAAKiC,eAAeC,KAAKlC,MAC/CA,KAAKmC,iBAAmBnC,KAAKmC,iBAAiBD,KAAKlC,K,CAGrD,iBAAAoC,GACEpC,KAAKD,Y,CAGP,mBAAAsC,GACErC,KAAKK,gBAAkBL,KAAKC,UAAUK,QAAQC,GAASA,EAAKC,UAASC,M,CAG/D,qBAAAC,GACN,GAAIV,KAAKa,YAAa,CACpBb,KAAKY,YAAYZ,KAAKa,Y,KACjB,CACLb,KAAKsC,sB,EAID,oBAAAA,GACN,MAAMC,EAAkB,GACxBvC,KAAKC,UAAUuC,SAASjC,IACtBgC,EAAgBE,KAAIC,OAAAC,OAAA,GAAKpC,GAAM,IAEjCP,KAAKuC,gBAAkBA,C,CAGjB,WAAA3B,CAAYgC,GAClB,IAAKA,EAAO,CACV,OAAO5C,KAAKmC,kB,CAGdnC,KAAKsC,uBACLtC,KAAKuC,gBAAkBvC,KAAKuC,gBAAgBjC,QAAQC,IAClD,MAAMsC,EAAQtC,EAAKuC,KAAKC,cAAcC,QAAQJ,EAAMG,eACpD,MAAME,EAAMJ,EAAQD,EAAMnC,OAC1B,MAAMyC,EACJ3C,EAAKuC,KAAKK,UAAU,EAAGN,GACvBtC,EAAKuC,KAAKK,UAAUN,EAAOI,GAAKG,OAChC7C,EAAKuC,KAAKK,UAAUF,EAAK1C,EAAKuC,KAAKrC,QAErCF,EAAKuC,KAAOI,EAEZ,OAAOL,GAAS,CAAC,G,CAIb,QAAAxB,CAASb,EAAU,MACzBR,KAAKC,UAAYD,KAAKC,UAAUqB,KAAKf,GAAemC,OAAAC,OAAAD,OAAAC,OAAA,GAC/CpC,GAAI,CACPC,QAASA,MAEXR,KAAKsC,uBACLtC,KAAKuB,oB,CAGC,gBAAAY,GACNnC,KAAKa,YAAc,GACnBb,KAAKsC,sB,CAGC,cAAAL,GACNjC,KAAKqD,QAAUrD,KAAKqD,M,CAGd,YAAAC,GACN,OACEC,EAAA,OACEC,MAAM,SACNC,QAAS,IAAMzD,KAAKiC,iBACpByB,UAAYC,IACV,GAAIA,EAAGC,UAAYC,EAAgBC,MAAO,CACxCH,EAAGI,gB,GAGPC,QAAUL,GAAsBM,EAAqBN,EAAI3D,KAAKiC,gBAC9DiC,KAAK,SACLC,SAAU,GAEVZ,EAAA,KAAGC,MAAM,UACNxD,KAAKoE,MACNb,EAAA,YAAOvD,KAAKK,gBAAkB,GAAK,KAAKL,KAAKK,qBAE/CkD,EAAA,UACET,KAAK,aACLU,MAAOxD,KAAKqE,O,CAMZ,aAAAC,GACN,IAAKtE,KAAKqD,OAAQ,CAChB,M,CAGF,OACEE,EAAA,OAAKC,MAAM,mBACRxD,KAAKuE,WAAavE,KAAKwE,oBACvBxE,KAAKyE,aAAezE,KAAK0E,iBACzB1E,KAAK2E,c,CAKJ,WAAAA,GACN,IAAK3E,KAAKqD,OAAQ,CAChB,M,CAGF,OACEE,EAAA,OACEC,MAAOxD,KAAKa,aAAe,SAC3BsD,UAAW,GAEVnE,KAAK4E,WAAW5E,KAAKuC,iBACrBvC,KAAKa,aAAeb,KAAK6E,oB,CAKxB,UAAAC,CAAWvE,EAAiBwE,EAAetE,GACjD,OACE8C,EAAA,mBACEvC,GAAIT,EAAKS,GACTgE,WAAYzE,EAAKS,GACjBiE,OAAQ,YAAYjF,KAAKmB,UACzB+D,WAAYH,IAAUtE,EAAS,EAC/B+C,MAAOxD,KAAKqE,MAEZd,EAAA,WACE4B,KAAMtD,EAAUuD,SAChB5E,QAASD,EAAKC,QACd6E,OAAQ,kBAAkBrF,KAAKmB,WAAWZ,EAAKS,KAC/CoD,MAAO7D,EAAKuC,KACZwC,UAAW/E,EAAKC,SAAWR,KAAKoB,mBAAqBpB,KAAKoB,oBAAsBpB,KAAKK,gBACrFgE,KAAMrE,KAAKqE,OAAStC,EAAYwD,QAAUxD,EAAYyD,MAAQxF,KAAKqE,O,CAMnE,UAAAO,CAAW1E,GACjB,IAAKA,EAAO,CACV,M,CAEF,IAAKA,EAAMO,QAAUT,KAAKa,YAAa,CACrC,OAAOb,KAAKyF,uB,CAGd,GAAIzF,KAAK0F,cAAe,CACtB,OAAO1F,KAAK2F,aAAa3F,KAAKC,U,CAGhC,OACEsD,EAAA,UACGrD,EAAMoB,KAAI,CAACf,EAAMqF,IACT5F,KAAK8E,WAAWvE,EAAMqF,EAAG1F,EAAMO,U,CAMtC,YAAAkF,CAAazF,GACnB,MAAM2F,EAAU3F,EAAM4F,QAAO,CAACC,EAAOxF,EAAMwE,K,MACzC,MAAMiB,SAACA,GAAYzF,EACnB,MAAM0F,EAAYjG,KAAK8E,WAAWvE,EAAMwE,EAAO7E,EAAMO,QAErDsF,EAAMC,IAAYE,EAAAH,EAAMC,MAAS,MAAAE,SAAA,EAAAA,EAAI,GACrCH,EAAMC,GAAUvD,KAAKwD,GAErB,OAAOF,CAAK,GACX,IAEH,MAAMI,EAAazD,OAAO0D,QAAQP,GAAuDvE,KAAI,EAAE+E,EAAKzD,KAEhGW,EAAA,+BAA4B+C,EAAgBC,SAC1ChD,EAAA,QACEC,MAAM,+BACNgD,KAAK,gBAEJH,GAEFzD,EAAMtB,KAAKf,GAASA,OAK3B,OAAOgD,EAAA,UAAK4C,E,CAGN,qBAAAV,GACN,OACElC,EAAA,UACEA,EAAA,mBACEvC,GAAG,aACHyF,KAAMzG,KAAK0G,eACX1B,WAAW,aACX2B,KAAK,kBACLnD,MAAOxD,KAAKqE,O,CAMZ,iBAAAQ,GACN,OACEtB,EAAA,WACEA,EAAA,KACEE,QAAS,IAAMzD,KAAKmC,mBACpB6B,QAAUjD,GAAqBkD,EAAqBlD,EAAGf,KAAKmC,kBAC5D+B,KAAK,SACLC,SAAU,GAETnE,KAAK4G,iB,CAMN,iBAAApC,GACN,IAAKxE,KAAKqD,OAAQ,CAChB,M,CAGF,OACEE,EAAA,WACE8B,OAAQ,GAAGrF,KAAKmB,iBAChBiD,MAAOpE,KAAK6G,YACZC,YAAa9G,KAAK+G,kBAClBC,UAAWhH,KAAKiH,YAChB9B,KAAMnF,KAAK4B,UACXgB,MAAO5C,KAAKa,YACZqG,QAAS,MACT7C,KAAMrE,KAAKqE,KACX8C,cAAgBpG,IACd,GAAIA,EAAEE,OAAOmG,UAAY,GAAI,CAC3B,OAAOpH,KAAKmC,kB,CAEdnC,KAAKa,YAAcE,EAAEE,OAAO2B,KAAK,G,CAMjC,cAAA8B,GACN,GAAI1E,KAAKa,YAAa,CACpB,M,CAGF,MAAMwG,EAAarH,KAAKK,kBAAoBL,KAAKC,UAAUQ,OAE3D,OACE8C,EAAA,OAAKC,MAAM,qBACTD,EAAA,WACE4B,KAAMtD,EAAUuD,SAChB5E,QAAS6G,EACThC,OAAQ,kBAAkBrF,KAAKmB,oBAC/BiD,MAAOiD,EAAarH,KAAKsH,eAAiBtH,KAAKuH,aAC/CjC,SAAUtF,KAAKoB,mBAAqBpB,KAAKoB,kBAAoBpB,KAAKC,UAAUQ,OAC5E4D,KAAMrE,KAAKqE,OAAStC,EAAYwD,QAAUxD,EAAYyD,MAAQxF,KAAKqE,O,CAM3E,MAAAmD,GACE,OACEjE,EAAA,OAAA8C,IAAA,yDACe,SAASrG,KAAKmB,UAC3BqC,MAAO,CAACiE,KAAMzH,KAAKqD,OAAQqE,MAAO1H,KAAK2H,QAASrC,SAAUtF,KAAKsF,UAC/DtE,GAAIhB,KAAKmB,SAERnB,KAAKsD,gBACJtD,KAAKsF,UAAYtF,KAAKsE,gB"}