{"version":3,"names":["stylesCss","ZTableHeaderStyle0","ZTableHeader","constructor","hostRef","this","emitOnSort","bind","sort","emit","columnId","sortDirection","handleSort","sortable","defaultSortDirection","handleMenuClick","popover","open","handleOutsideClick","e","tree","getElementTree","target","parent","find","elem","nodeName","toLowerCase","handleClickHeaders","parentColumnId","attributes","getNamedItem","value","isSortable","parentNode","componentWillRender","host","setAttribute","render","h","Host","key","class","onClick","name","showButton","ref","el","triggerButton","icon","variant","ButtonVariant","TERTIARY","size","ButtonSize","X_SMALL","position","PopoverPosition","BOTTOM","center","bindTo"],"sources":["src/deprecated/z-table-deprecated/z-table-header/styles.css?tag=z-table-header&encapsulation=shadow","src/deprecated/z-table-deprecated/z-table-header/index.tsx"],"sourcesContent":[":host {\n  position: relative;\n  display: table-cell;\n  border-bottom: var(--border-size-medium) solid var(--gray200);\n  background-color: var(--gray50);\n  font-family: var(--font-family-sans);\n  font-weight: var(--font-sb);\n  text-align: start;\n}\n\n.container {\n  display: flex;\n  align-items: flex-end;\n}\n\n:host(.sortable) {\n  cursor: pointer;\n}\n\n:host([padding=\"x-small\"]) {\n  padding: calc(var(--space-unit) * 0.5);\n}\n\n:host([padding=\"small\"]) {\n  padding: calc(var(--space-unit));\n}\n\n:host([padding=\"medium\"]) {\n  padding: calc(var(--space-unit) * 2);\n}\n\n:host([padding=\"large\"]) {\n  padding: calc(var(--space-unit) * 2.5);\n}\n\n:host([padding=\"special\"]) {\n  padding: 0;\n}\n\n/*\nSorting arrow\n*/\n.arrow {\n  padding-left: var(--space-unit);\n  opacity: 1;\n}\n\n/*\nContextual menu\n*/\n.popover-container {\n  position: absolute;\n  top: var(--space-unit);\n  right: var(--space-unit);\n  display: none;\n}\n\n.popover-container z-popover {\n  --z-popover-theme--surface: var(--gray200);\n\n  position: relative;\n  z-index: 1;\n}\n\n.popover-container.visible {\n  display: block;\n}\n\n:host(:hover) .popover-container {\n  display: block;\n}\n","import {Component, Element, Event, EventEmitter, h, Host, Listen, Prop} from \"@stencil/core\";\nimport {ButtonSize, ButtonVariant, PopoverPosition} from \"../../../beans\";\nimport {getElementTree} from \"../../../utils/utils\";\n\n/**\n * @deprecated\n */\n@Component({\n  tag: \"z-table-header\",\n  styleUrl: \"styles.css\",\n  shadow: true,\n})\nexport class ZTableHeader {\n  @Element() host: HTMLZTableHeaderElement;\n\n  /** Column ID */\n  @Prop()\n  columnId: string;\n\n  /** Set padding size of cell, if special 0px padding will be set */\n  @Prop({reflect: true})\n  padding: \"x-small\" | \"small\" | \"medium\" | \"large\" | \"special\" = \"medium\";\n\n  /** [Optional] Make the header sortable */\n  @Prop()\n  sortable?: boolean;\n\n  /** [Optional] Show contextual menu button */\n  @Prop()\n  showButton?: boolean;\n\n  /** [Optional] Default sort order */\n  @Prop()\n  defaultSortDirection?: \"asc\" | \"desc\" | \"none\" = \"asc\";\n\n  /** Sort direction */\n  @Prop({mutable: true})\n  sortDirection: \"asc\" | \"desc\" | \"none\" = \"none\";\n\n  private popover?: HTMLZPopoverElement;\n\n  private triggerButton?: HTMLZButtonElement;\n\n  constructor() {\n    this.emitOnSort = this.emitOnSort.bind(this);\n  }\n\n  /** [Optional] callback for sorting */\n  @Event()\n  sort: EventEmitter;\n\n  private emitOnSort(): void {\n    this.sort.emit({\n      columnId: this.columnId,\n      sortDirection: this.sortDirection,\n    });\n  }\n\n  private handleSort(): void {\n    if (!this.sortable) {\n      return;\n    }\n\n    this.sortDirection = (() => {\n      switch (this.sortDirection) {\n        case \"asc\":\n          return \"desc\";\n        case \"desc\":\n          return \"asc\";\n        case \"none\":\n          return this.defaultSortDirection;\n        default:\n          return \"none\";\n      }\n    })();\n\n    this.emitOnSort();\n  }\n\n  private handleMenuClick(): void {\n    this.popover.open = !this.popover.open;\n  }\n\n  @Listen(\"click\", {target: \"body\", capture: true})\n  handleOutsideClick(e: MouseEvent): void {\n    const tree = getElementTree(e.target as Element);\n    const parent = tree.find((elem: Element) => elem.nodeName.toLowerCase() === \"z-popover\");\n\n    if (!parent && this.popover) {\n      this.popover.open = false;\n    }\n  }\n\n  @Listen(\"click\", {target: \"body\", capture: true})\n  handleClickHeaders(e: MouseEvent): void {\n    const target = e.target as HTMLElement;\n    const parent = getElementTree(target).find((elem: Element) => elem.nodeName.toLowerCase() === \"z-table-header\");\n\n    if (!this.sortable || !parent) {\n      return;\n    }\n\n    const parentColumnId = parent.attributes.getNamedItem(\"column-id\").value;\n    const isSortable =\n      (target.parentNode as HTMLZTableHeaderElement).sortable || (target as HTMLZTableHeaderElement).sortable;\n\n    if (parentColumnId !== this.columnId && isSortable) {\n      this.sortDirection = \"none\";\n    }\n  }\n\n  componentWillRender(): void {\n    this.host.setAttribute(\"role\", \"columnheader\");\n  }\n\n  render(): HTMLZTableHeaderElement {\n    return (\n      <Host\n        class={{\n          sortable: this.sortable,\n        }}\n        onClick={() => this.handleSort()}\n      >\n        <div class=\"container\">\n          <slot />\n          {this.sortable && this.sortDirection !== \"none\" && (\n            <z-icon\n              name={this.sortDirection === \"asc\" ? \"arrow-up\" : \"arrow-down\"}\n              class=\"arrow\"\n            />\n          )}\n        </div>\n\n        {this.showButton && (\n          <div class=\"popover-container\">\n            <z-button\n              ref={(el) => (this.triggerButton = el as HTMLZButtonElement)}\n              class=\"contextual-popover-button\"\n              icon=\"contextual-menu\"\n              variant={ButtonVariant.TERTIARY}\n              size={ButtonSize.X_SMALL}\n              onClick={() => this.handleMenuClick()}\n            ></z-button>\n\n            <z-popover\n              ref={(el) => (this.popover = el as HTMLZPopoverElement)}\n              position={PopoverPosition.BOTTOM}\n              center={true}\n              bindTo={this.triggerButton as HTMLElement}\n            >\n              <div>\n                <slot name=\"contextual-menu\" />\n              </div>\n            </z-popover>\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n"],"mappings":"sJAAA,MAAMA,EAAY,84BAClB,MAAAC,EAAeD,E,MCWFE,EAAY,MA+BvB,WAAAC,CAAAC,G,0EAtBgE,S,4EAYf,M,mBAIR,OAOvCC,KAAKC,WAAaD,KAAKC,WAAWC,KAAKF,K,CAOjC,UAAAC,GACND,KAAKG,KAAKC,KAAK,CACbC,SAAUL,KAAKK,SACfC,cAAeN,KAAKM,e,CAIhB,UAAAC,GACN,IAAKP,KAAKQ,SAAU,CAClB,M,CAGFR,KAAKM,cAAgB,MACnB,OAAQN,KAAKM,eACX,IAAK,MACH,MAAO,OACT,IAAK,OACH,MAAO,MACT,IAAK,OACH,OAAON,KAAKS,qBACd,QACE,MAAO,OAEZ,EAXoB,GAarBT,KAAKC,Y,CAGC,eAAAS,GACNV,KAAKW,QAAQC,MAAQZ,KAAKW,QAAQC,I,CAIpC,kBAAAC,CAAmBC,GACjB,MAAMC,EAAOC,EAAeF,EAAEG,QAC9B,MAAMC,EAASH,EAAKI,MAAMC,GAAkBA,EAAKC,SAASC,gBAAkB,cAE5E,IAAKJ,GAAUlB,KAAKW,QAAS,CAC3BX,KAAKW,QAAQC,KAAO,K,EAKxB,kBAAAW,CAAmBT,GACjB,MAAMG,EAASH,EAAEG,OACjB,MAAMC,EAASF,EAAeC,GAAQE,MAAMC,GAAkBA,EAAKC,SAASC,gBAAkB,mBAE9F,IAAKtB,KAAKQ,WAAaU,EAAQ,CAC7B,M,CAGF,MAAMM,EAAiBN,EAAOO,WAAWC,aAAa,aAAaC,MACnE,MAAMC,EACHX,EAAOY,WAAuCrB,UAAaS,EAAmCT,SAEjG,GAAIgB,IAAmBxB,KAAKK,UAAYuB,EAAY,CAClD5B,KAAKM,cAAgB,M,EAIzB,mBAAAwB,GACE9B,KAAK+B,KAAKC,aAAa,OAAQ,e,CAGjC,MAAAC,GACE,OACEC,EAACC,EAAI,CAAAC,IAAA,2CACHC,MAAO,CACL7B,SAAUR,KAAKQ,UAEjB8B,QAAS,IAAMtC,KAAKO,cAEpB2B,EAAA,OAAAE,IAAA,2CAAKC,MAAM,aACTH,EAAA,QAAAE,IAAA,6CACCpC,KAAKQ,UAAYR,KAAKM,gBAAkB,QACvC4B,EAAA,UACEK,KAAMvC,KAAKM,gBAAkB,MAAQ,WAAa,aAClD+B,MAAM,WAKXrC,KAAKwC,YACJN,EAAA,OAAKG,MAAM,qBACTH,EAAA,YACEO,IAAMC,GAAQ1C,KAAK2C,cAAgBD,EACnCL,MAAM,4BACNO,KAAK,kBACLC,QAASC,EAAcC,SACvBC,KAAMC,EAAWC,QACjBZ,QAAS,IAAMtC,KAAKU,oBAGtBwB,EAAA,aACEO,IAAMC,GAAQ1C,KAAKW,QAAU+B,EAC7BS,SAAUC,EAAgBC,OAC1BC,OAAQ,KACRC,OAAQvD,KAAK2C,eAEbT,EAAA,WACEA,EAAA,QAAMK,KAAK,uB"}