{"version":3,"names":["stylesCss","ZTableRowStyle0","ZTableRow","ZTableRowExpandedType","NONE","emitOnExpand","this","expand","emit","expanded","handleExpand","renderExpandButton","expandedType","EXPANDABLE","h","style","borderRight","name","class","render","Host","key","role","onClick","event","preventExpand","target","classList","contains","isExpandable"],"sources":["src/deprecated/z-table-deprecated/z-table-row/styles.css?tag=z-table-row","src/deprecated/z-table-deprecated/z-table-row/index.tsx"],"sourcesContent":["z-table-row {\n  display: table-row;\n  font-family: var(--font-family-sans);\n}\n\nz-table-row[expanded-type=\"expandable\"]:hover {\n  cursor: pointer;\n}\n\nz-table-row[expanded-type=\"expandable\"] > z-table-cell:first-child,\nz-table-row[expanded-type=\"padding\"] > z-table-cell:first-child {\n  --z-icon-width: 16px;\n  --z-icon-height: 16px;\n\n  width: 24px;\n  box-sizing: border-box;\n  padding-right: 0;\n  padding-left: 16px;\n  fill: var(--gray800);\n  text-align: center;\n  user-select: none;\n}\n\n.z-icon-placeholder {\n  width: 24px;\n  padding-right: 0;\n}\n\nz-table-row[expanded-type=\"expandable\"] > z-table-cell:nth-child(2),\nz-table-row[expanded-type=\"padding\"] > z-table-cell:nth-child(2) {\n  padding-left: 8px;\n}\n\nz-table-row[expanded-type]:hover > z-table-cell:first-child {\n  fill: var(--color-hover-primary);\n}\n\nz-table-row[expanded] > z-table-cell {\n  border-bottom: none;\n  background-color: var(--gray50);\n}\n\nz-table-row[expanded] + z-table-expanded-row {\n  display: table-row;\n}\n","import {Component, Prop, State, Host, h, Event, EventEmitter} from \"@stencil/core\";\nimport {ZTableRowExpandedType} from \"../../../beans\";\n\n/**\n * @deprecated\n */\n@Component({\n  tag: \"z-table-row\",\n  styleUrl: \"styles.css\",\n  shadow: false,\n  scoped: false,\n})\nexport class ZTableRow {\n  /** Table row expanded type */\n  @Prop({reflect: true})\n  expandedType: ZTableRowExpandedType = ZTableRowExpandedType.NONE;\n\n  @State()\n  expanded = false;\n\n  /** Row has been expanded */\n  @Event()\n  expand: EventEmitter;\n\n  private emitOnExpand(): void {\n    this.expand.emit({expanded: this.expanded});\n  }\n\n  private handleExpand(): void {\n    this.expanded = !this.expanded;\n\n    this.emitOnExpand();\n  }\n\n  private renderExpandButton(): HTMLZTableCellElement {\n    if (this.expandedType == ZTableRowExpandedType.EXPANDABLE) {\n      return (\n        <z-table-cell style={{borderRight: \"none\"}}>\n          <z-icon name={this.expanded ? \"minus-circled\" : \"plus-circled\"} />\n        </z-table-cell>\n      );\n    }\n\n    return (\n      <z-table-cell style={{borderRight: \"none\"}}>\n        <div class=\"z-icon-placeholder\" />\n      </z-table-cell>\n    );\n  }\n\n  render(): HTMLZTableRowElement {\n    return (\n      <Host\n        role=\"row\"\n        expanded={this.expanded}\n        onClick={(event) => {\n          const preventExpand = event.target.classList.contains(\"prevent-expand\");\n          const isExpandable = this.expandedType === ZTableRowExpandedType.EXPANDABLE;\n\n          if (isExpandable && !preventExpand) {\n            this.handleExpand();\n          }\n        }}\n      >\n        {this.expandedType !== ZTableRowExpandedType.NONE && this.renderExpandButton()}\n        <slot />\n      </Host>\n    );\n  }\n}\n"],"mappings":"6FAAA,MAAMA,EAAY,i1BAClB,MAAAC,EAAeD,E,MCWFE,EAAS,M,0EAGkBC,EAAsBC,K,cAGjD,K,CAMH,YAAAC,GACNC,KAAKC,OAAOC,KAAK,CAACC,SAAUH,KAAKG,U,CAG3B,YAAAC,GACNJ,KAAKG,UAAYH,KAAKG,SAEtBH,KAAKD,c,CAGC,kBAAAM,GACN,GAAIL,KAAKM,cAAgBT,EAAsBU,WAAY,CACzD,OACEC,EAAA,gBAAcC,MAAO,CAACC,YAAa,SACjCF,EAAA,UAAQG,KAAMX,KAAKG,SAAW,gBAAkB,iB,CAKtD,OACEK,EAAA,gBAAcC,MAAO,CAACC,YAAa,SACjCF,EAAA,OAAKI,MAAM,uB,CAKjB,MAAAC,GACE,OACEL,EAACM,EAAI,CAAAC,IAAA,2CACHC,KAAK,MACLb,SAAUH,KAAKG,SACfc,QAAUC,IACR,MAAMC,EAAgBD,EAAME,OAAOC,UAAUC,SAAS,kBACtD,MAAMC,EAAevB,KAAKM,eAAiBT,EAAsBU,WAEjE,GAAIgB,IAAiBJ,EAAe,CAClCnB,KAAKI,c,IAIRJ,KAAKM,eAAiBT,EAAsBC,MAAQE,KAAKK,qBAC1DG,EAAA,QAAAO,IAAA,6C"}