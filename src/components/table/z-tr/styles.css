:host {
  /* number of columns of the row. will be set in component's ts code */
  --columns: 1;

  position: sticky;
  left: 0;
  display: grid;
  min-width: max-content;
  box-sizing: border-box;
  grid-auto-flow: column;
  grid-template-columns: var(--z-table--expand-button-size, 0) repeat(var(--columns), minmax(128px, 1fr));
}

* {
  box-sizing: border-box;
}

:host([expandable]) {
  --show-expandable-button: visible;

  cursor: pointer;
}

:host([expandable]) ::slotted(*) {
  grid-row: 1;
}

:host([expandable]) ::slotted(*:last-child) {
  border-left: 0;
  grid-column: 1 / span calc(var(--columns) + 1);
  grid-row: 2;
}

:host([expandable]:not([expanded])) ::slotted(*:last-child) {
  display: none;
}

:host([expanded]) {
  margin-bottom: 4px; /* prevents shadow to be cut by the next element */
  box-shadow: 0 4px 4px -2px var(--shadow-color-base);
}

:host([expanded]) .z-tr-expand-button-container,
:host([expanded]) ::slotted(*) {
  background-color: var(--color-surface02);
}

.z-tr-expand-button-container {
  display: flex;
  align-items: center;
  justify-content: center;
  border-bottom: 1px solid var(--color-surface03);
}

.z-tr-expand-button-container button {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0;
  border: none;
  margin: auto;
  appearance: none;
  background: transparent;
  cursor: pointer;
  visibility: var(--show-expandable-button, hidden);
}

.z-tr-expand-button-container button z-icon {
  --z-icon-width: 16px;
  --z-icon-height: 16px;
}

::slotted(*:not(:first-child)) {
  border-left: var(--z-table--cell-left-border, none);
}
