/* The width of the card must be set by its container,
respecting the grid indications of the design. */

:host {
  /* Override this var to change the cover's aspect ratio */
  --aspect-ratio: 1.62;
  --z-card--border-color: var(--gray200);
  --z-card--color-cover-background: var(--color-surface02);

  position: relative;
  display: flex;
  flex-direction: column;
  font-family: var(--font-family-sans);
  font-weight: var(--font-rg);
}

:host(:not([variant='overlay'])) .cover-container {
  position: relative;
  width: 100%;
}

/* Old good trick with percentage padding to keep the aspect ratio.
Unfortunately the `aspect-ratio` property is still experimental */
.cover-container {
  padding-bottom: calc(100% / var(--aspect-ratio));
}

::slotted([slot='cover']),
.color-cover {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
}

.cover-container > z-icon {
  --z-icon-width: calc(var(--space-unit) * 11);
  --z-icon-height: var(--z-icon-width);

  position: absolute;
  top: calc(50% - calc(var(--z-icon-height) / 2));
  left: calc(50% - calc(var(--z-icon-width) / 2));
  fill: var(--color-primary01);
}

.color-cover {
  background-color: var(--z-card--color-cover-background);
}

.content {
  display: flex;
  flex-direction: column;
  padding-top: var(--space-unit);
}

.color-cover .cover-content {
  display: flex;
  flex-direction: column;
  padding: var(--space-unit);
}

/* Truncates overflowing text */
::slotted([slot='metadata']),
::slotted([slot='title']),
::slotted([slot='text']) {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

::slotted([slot='title']) {
  margin: 0;
  -webkit-line-clamp: 2;
}

::slotted([slot='metadata']:not(:last-child)) {
  margin: 0 0 calc(var(--space-unit) * 0.25);
  -webkit-line-clamp: 1;
  text-transform: uppercase;
}

::slotted([slot='text']) {
  -webkit-line-clamp: 3;
}

::slotted([slot='text']),
::slotted([slot='actions']) {
  margin: 0;
}

* + ::slotted([slot='text']),
* + ::slotted([slot='actions']) {
  margin-top: var(--space-unit);
}

.actions {
  display: flex;
  flex-direction: row;
  align-items: center;
  margin: var(--space-unit) 0 0;
}

::slotted([slot='action']:not(:last-child)) {
  margin-right: calc(var(--space-unit) * 1.5);
}

/* VARIANTS */
:host([clickable]) {
  cursor: pointer;
}

:host([clickable]:focus:focus-visible) {
  outline: none;
}

:host([variant='default'][clickable]:focus:focus-visible) {
  padding: calc(var(--space-unit) * 0.5);
  box-shadow: var(--shadow-focus-primary);
}

:host([variant='border']) > .content,
:host([variant='shadow']) > .content {
  height: 100%;
  padding: var(--space-unit) var(--space-unit) calc(var(--space-unit) * 2);
}

:host([variant='border']) .actions,
:host([variant='shadow']) .actions {
  margin-top: auto;
}

/* Border */
:host([variant='border']) {
  border: var(--border-size-small) solid var(--z-card--border-color);
}

:host([variant='border'][clickable]:hover) > .content {
  background: var(--color-background);
}

:host([variant='border'][clickable]:focus:focus-visible) {
  box-shadow: var(--shadow-focus-primary);
}

:host([variant='border'][clickable]:active) {
  border: none;
}

/* Shadow */
:host([variant='shadow']) {
  box-shadow: var(--shadow-2);
}

:host([variant='shadow'][clickable]:hover) {
  box-shadow: var(--shadow-4);
}

:host([variant='shadow'][clickable]:focus:focus-visible) {
  box-shadow: var(--shadow-4);
}

:host([variant='shadow'][clickable]:active) {
  box-shadow: none;
}

/* Overlay */
:host([variant='overlay']) .content {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  justify-content: flex-end;
  padding: var(--space-unit);
  background-image: linear-gradient(to top, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0));
  color: var(--color-text-inverse);
  fill: var(--color-text-inverse);
}
