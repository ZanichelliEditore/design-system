:host {
  display: inline-block;
  width: inherit;
  color: var(--color-default-text);
  font-family: var(--font-family-sans);
  font-size: var(--font-size-3);
  font-weight: var(--font-rg);
}

:host([size="small"]),
:host([size="x-small"]) {
  font-size: var(--font-size-2);
}

.select-wrapper > z-input {
  width: 100%;
}

.select-wrapper > z-input .input-icon {
  cursor: pointer;
}

.select-wrapper > div {
  position: relative;
}

.select-wrapper > div.closed {
  overflow: hidden;
  height: 0;
}

.select-wrapper .ul-scroll-wrapper {
  position: absolute;
  width: 100%;
  box-sizing: border-box;
  border-top: none;
  background: var(--color-form-background);
  box-shadow: var(--shadow-2);
  outline: none;
}

.select-wrapper .closed .ul-scroll-wrapper {
  z-index: 10;
}

.select-wrapper .open .ul-scroll-wrapper {
  z-index: 20;
}

.select-wrapper .ul-scroll-wrapper.fixed {
  position: static;
}

.select-wrapper .ul-scroll-wrapper > z-list {
  position: relative;
  overflow: auto;
  max-height: 240px;
  padding: 0 calc(var(--space-unit) * 1.5);
  outline: none;

  /* Firefox scrollbar */
  scrollbar-color: var(--color-primary01) transparent;
}

.select-wrapper .ul-scroll-wrapper > z-list::-webkit-scrollbar {
  width: 10px;
  background: linear-gradient(to right, transparent 0 3px, var(--gray200) 3px 7px, transparent 7px 10px);
  border-radius: var(--border-radius);
}

.select-wrapper .ul-scroll-wrapper > z-list::-webkit-scrollbar-track {
  background-color: transparent;
}

.select-wrapper .ul-scroll-wrapper > z-list::-webkit-scrollbar-thumb {
  width: 10px;
  background-color: var(--color-primary01);
  border-radius: var(--border-radius);
}

.select-wrapper .ul-scroll-wrapper > z-list::-webkit-scrollbar-thumb:hover {
  background-color: var(--color-hover-primary);
}

.select-wrapper .ul-scroll-wrapper z-list z-list-element[disabled] {
  color: var(--color-form-disabled03);
}

.select-wrapper .ul-scroll-wrapper z-list z-list-element .list-element-container {
  display: flex;
  align-items: center;
  padding: calc(var(--space-unit) / 2) var(--space-unit);
  column-gap: var(--space-unit);
}

.select-wrapper .ul-scroll-wrapper z-list z-list-element .list-element-container .list-element-content {
  margin-right: auto;
}

.select-wrapper .ul-scroll-wrapper z-list z-list-element .list-element-container > z-icon + .list-element-content {
  padding: calc(var(--space-unit) * 0.5) var(--space-unit);
}

:host([size="x-small"])
  .select-wrapper
  .ul-scroll-wrapper
  z-list
  z-list-element
  .list-element-container
  .list-element-content {
  padding: 0;
}

:host([size="small"]) .select-wrapper .ul-scroll-wrapper z-list z-list-element .list-element-container > z-icon {
  --z-icon-width: 16px;
  --z-icon-height: 16px;
}

:host([size="x-small"]) .select-wrapper .ul-scroll-wrapper z-list z-list-element .list-element-container > z-icon {
  --z-icon-width: 14px;
  --z-icon-height: 14px;
}

:host([size="x-small"])
  .select-wrapper
  .ul-scroll-wrapper
  z-list
  z-list-element
  .list-element-container
  > z-icon
  + .list-element-content {
  padding: 0 var(--space-unit);
}

.select-wrapper .ul-scroll-wrapper z-list z-list-element .list-element-container .list-element-content.selected {
  font-weight: var(--font-sb);
}

.select-wrapper .ul-scroll-wrapper .no-results z-icon {
  margin-right: var(--space-unit);
}

.z-list-group-title {
  color: var(--color-default-text);
}

.reset-item {
  color: var(--color-primary01);
  fill: var(--color-primary01-icon);
}

.reset-item-content {
  display: flex;
  align-items: center;
}

.reset-item.reset-item-margin .reset-item-content {
  margin-left: var(--space-unit);
}

.reset-item .reset-item-content > z-icon {
  margin-right: var(--space-unit);
}

.reset-item.hide {
  display: none;
}

z-list-element {
  position: relative;
  display: block;
}

z-list z-list-element::before {
  position: absolute;
  z-index: 100;
  top: 10px;
  left: -15px;
  width: 8px;
  height: 1em;
  border-bottom: 1px solid var(--color-disabled01-icon);
  border-left: 1px solid var(--color-disabled01-icon);
  content: "";
  cursor: pointer;
}

z-list z-list-element::after {
  position: absolute;
  z-index: 100;
  top: 10px;
  left: -15px;
  width: 8px;
  height: 100%;
  border-left: 1px solid var(--color-disabled01-icon);
  content: "";
  cursor: pointer;
}

z-list z-list-element:last-child::after {
  display: none;
}

z-list > z-list-element::before,
z-list > z-list-element::after,
z-list > z-list-group > z-list-element::before,
z-list > z-list-group > z-list-element::after {
  display: none;
}

z-list > div.children-node {
  padding-left: calc(var(--space-unit) * 2);
}

z-list-element > .list-element {
  display: flex;
  justify-content: space-between;
  padding: calc(var(--space-unit) * 1.25) 0;
  cursor: pointer;
}

z-list-element > .list-element:focus-visible {
  box-shadow: var(--shadow-focus-primary);
  outline: none;
}

z-list-element > .list-element .item.ellipsis {
  overflow: hidden;
}

/* Si può cancellare quello sotto per list-item-1 ?? */
z-list-element .list-element::after {
  position: absolute;
  top: 0;
  right: -1px;
  display: block;
  width: 100%;
  height: 40px;
  content: "";
  transform: translateX(-100%);
}

/* per rimuovere il fottuto padding del z-list-element (da faresolo quando la prop hasTreItemè true */
:host::part(list-item-container) {
  display: block;
  min-height: unset;
  padding: 0;
}

z-list-element #list-item-1.list-element::after {
  position: absolute;
  top: 0;
  right: -1px;
  display: block;
  width: 100%;
  height: 40px;
  content: "";
  transform: translateX(-100%);
}

z-list-element .list-element.focused.hovered::after {
  padding-left: 6px;
}

z-list-element > .list-element:hover,
z-list-element > .list-element:hover::after {
  background-color: var(--color-background);
  cursor: pointer;
}
