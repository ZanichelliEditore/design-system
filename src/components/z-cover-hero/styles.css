:host {
  --cover-hero-height: auto;
  --cover-hero-overlay: none;
  --cover-hero-text-color: var(--gray100);
  --cover-hero-columns: 1 / -1;

  display: block;
}

:host,
* {
  box-sizing: border-box;
}

:host .hero {
  position: relative;
  align-items: baseline;
  width: 100%;
  height: var(--cover-hero-height);
  background-color: var(--gray600);
}

:host .container {
  display: grid;
  color: var(--cover-hero-text-color);
  fill: var(--cover-hero-text-color);
}

/* Cover hero - div with image & z-info-reveal */
:host .hero .cover {
  position: absolute;
  z-index: 0;
  width: 100%;
  height: 100%;
}

:host .hero .cover img,
:host .hero .cover ::slotted(*) {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: top center;
  -webkit-user-drag: none;
}

:host .hero .cover z-info-reveal {
  position: absolute;
  bottom: var(--grid-margin);
  right: var(--grid-margin);
  z-index: 1;
}

/* Cover hero - div with slotted content */
:host .hero .container ::slotted(:not(:last-child)),
:host .container ::slotted(:not(:last-child)) {
  margin-bottom: var(--grid-margin);
}

:host([variant="stacked"]) .cover-hero,
:host([variant="overlay"]) .hero {
  display: grid;
  grid-template-columns: repeat(var(--grid-columns), 1fr);
  column-gap: var(--grid-gutter);
}

/* Variant overlay */
:host([variant="overlay"]) .hero .cover::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--cover-hero-overlay);
}

:host([variant="overlay"]) .hero .container {
  position: relative;
  z-index: 1;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  max-width: 100%;
  margin-right: auto;
  width: 100%;
  padding: var(--grid-margin);
  margin-bottom: calc(var(--grid-margin) * 2);
  grid-column: var(--cover-hero-columns);
}

/* Variant stacked */
:host([variant="stacked"]) {
  --cover-hero-text-color: var(--gray800);
}

:host([variant="stacked"]) .container,
:host([variant="stacked"]) .hero {
  grid-column: 1 / -1;
}

:host([variant="stacked"]) .hero {
  min-height: calc(var(--space-unit) * 30);
}

:host([variant="stacked"]) .container {
  padding: var(--grid-margin) 0;
}

/* Tablet breakpoint */
@media only screen and (min-width: 768px) {
  :host {
    --cover-hero-columns: span calc(var(--grid-tablet-column) / 2);
  }
}

/* Desktop breakpoint */
@media only screen and (min-width: 1152px) {
  :host {
    --cover-hero-columns: span calc(var(--grid-desktop-column) / 2);
  }
}

/* Wide breakpoint */
@media only screen and (min-width: 1366px) {
  :host {
    --cover-hero-columns: span calc(var(--grid-wide-column) / 2);
  }
}
