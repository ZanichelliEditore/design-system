:host {
  --z-offcanvas--container-width: 375px;

  z-index: 1000;
  display: none;
  justify-content: end;
  height: 100%;
  min-width: 100%;
  font-family: var(--font-family-sans);
  font-weight: var(--font-rg);
}

.canvas-container {
  display: flex;
  flex-direction: column;
  z-index: 1010;
  min-width: 100%;
  height: 100%;
  overflow: -moz-scrollbars-none;
  overflow: hidden;
  background: var(--color-surface01);
}

:host > .canvas-container {
  transform: translateX(100%);
}

@keyframes enterRight {
  from {transform: translateX(100%);}
  to {transform: translateX(0);}
}

:host([open]) > .canvas-container {
  animation-name: enterRight;
  animation-duration:0.4s;
  animation-timing-function: ease-out;
  transform: translateX(0);
}

@keyframes exitRight {
  from {transform: translateX(0);}
  to {transform: translateX(100%);}
}

:host(:not([open])[variant="overlay"]) > .canvas-container {
  animation-name: exitRight;
  animation-duration:0.4s;
  animation-timing-function: ease-out;
  transform: translateX(100%);
}

:host([variant="overlay"]) {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

:host([variant="overlay"]) .canvas-background {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--gray900);
  opacity: 0.7;
}

:host([transitiondirection="right"]) {
  justify-content: start;
}

:host([transitiondirection="right"]) > .canvas-container {
  transform: translateX(-100%);
}

@keyframes enterLeft {
  from {transform: translateX(-100%);}
  to {transform: translateX(0);}
}

:host([transitiondirection="right"][open]) > .canvas-container {
  animation-name: enterLeft;
  animation-duration: 0.4s;
  animation-timing-function: ease-out;
  transform: translateX(0);
}

@keyframes exitLeft {
  from {transform: translateX(0);}
  to {transform: translateX(-100%);}
}

:host(:not([open])[variant="overlay"][transitiondirection="right"]) > .canvas-container {
  animation-name: exitLeft;
  animation-duration:0.4s;
  animation-timing-function: ease-out;
  transform: translateX(-100%);
}

.canvas-container > .canvas-content {
  flex: 1 auto;
  overflow: auto;
  overflow-x: hidden;
  padding: 0 calc(var(--space-unit) * 2) ;
  margin: calc(var(--space-unit) * 2) calc(var(--space-unit) / 2) calc(var(--space-unit) * 2) 0;
}

.canvas-container .canvas-content::-webkit-scrollbar {
  background: linear-gradient(
    to right,
    transparent 0 3px,
    var(--gray200) 3px 7px,
    transparent 7px 10px
  );
  width: 10px;
  border-radius: var(--border-radius);
}

.canvas-container .canvas-content::-webkit-scrollbar-track {
  background-color: transparent;
}

.canvas-container .canvas-content::-webkit-scrollbar-thumb {
  background-color: var(--color-primary01);
  border-radius: var(--border-radius);
  width: 10px;
}

.canvas-container .canvas-content::-webkit-scrollbar-thumb:hover {
  background-color: var(--color-hover-primary);
}

/* Firefox */
.canvas-container .canvas-content {
  scrollbar-color: var(--color-primary01) transparent;
}

/* Tablet / Desktop */
@media only screen and (min-width: 768px) {
  :host {
    min-width: auto;
  }
  .canvas-container {
    width: auto;
    height: auto;
    min-width: max(var(--z-offcanvas--container-width), 375px);
    min-height: calc(var(--space-unit) * 40);
    max-width: max(var(--z-offcanvas--container-width), 375px);
  }

  @keyframes grow {
    from {width: 0;}
    to {width: max(var(--z-offcanvas--container-width), 375px)}
  }

  :host(:not([variant="overlay"])[open]) {
    animation-name: grow;
    animation-duration: 0.4s;
    animation-timing-function: ease-out;
    width: auto;
  }
}

