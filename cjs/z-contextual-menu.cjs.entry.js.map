{"file":"z-contextual-menu.entry.cjs.js","mappings":";;;;;;;AAAA,MAAM,SAAS,GAAG,o4BAAo4B,CAAC;AACv5B,8BAAe,SAAS;;MCOX,eAAe;;;;;qBAWT,iBAAiB;+BAMEA,uBAAe,CAAC,YAAY;;IAiBhE,mBAAmB;QACjB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;SACvE;KACF;IAED,gBAAgB;QACd,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC;KAC5C;IAEO,QAAQ;QACd,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,OAAO,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KAC5D;IAEO,aAAa;QACnB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE;YACxB,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;SAC5B;KACF;IAED,MAAM;;QACJ,QACEC,QAACC,UAAI,uDACHD,qEACE,GAAG,EAAE,CAAC,EAAE,MAAM,IAAI,CAAC,aAAa,GAAG,EAAuB,CAAC,gBAC/C,CAAA,MAAA,IAAI,CAAC,SAAS,0CAAE,IAAI,IAAG,yBAAyB,GAAG,uBAAuB,EACtF,OAAO,EAAE,MAAM,IAAI,CAAC,aAAa,EAAE,IAEnCA,qEACE,IAAI,EAAC,iBAAiB,EACtB,IAAI,EAAE,IAAI,CAAC,KAAK,GAChB,CACK,EACTA,wEACE,GAAG,EAAE,CAAC,EAAE,MAAM,IAAI,CAAC,SAAS,GAAG,EAAyB,CAAC,EACzD,QAAQ,EAAE,IAAI,CAAC,eAAe,IAE9BA,kEAAK,KAAK,EAAC,2BAA2B,IACpCA,uEACEA,2FAA2B,SAAS,IACjC,MAAA,IAAI,CAAC,YAAY,0CAAE,GAAG,CAAC,CAAC,OAAO,EAAEE,OAAK,MACrCF,4BACE,SAAS,EAAE,CAAC,OAAO,CAAC,QAAQ,EAC5B,KAAK,EAAC,mBAAmB,kBACZ,MAAM,sBACF,WAAW,EAC5B,KAAK,EAAE,OAAO,CAAC,QAAQ,GAAG,kBAAkB,GAAG,IAAI,CAAC,KAAK,EACzD,gBAAgB,QAChB,aAAa,EAAEE,OAAK,EACpB,WAAW,EAAE,CAAC,KAAK,KAAK,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAEnEF,iBAAK,KAAK,EAAE,OAAO,CAAC,QAAQ,GAAG,4BAA4B,GAAG,mBAAmB,IAC9E,IAAI,CAAC,QAAQ,EAAE,KACdA,iBAAK,KAAK,EAAC,cAAc,IACvBA,oBACE,IAAI,EAAE,OAAO,CAAC,IAAI,EAClB,KAAK,EAAE,EAAE,EACT,MAAM,EAAE,EAAE,GACV,CACE,CACP,EACDA,iBAAK,KAAK,EAAC,cAAc,IACvBA,sBAAO,OAAO,CAAC,IAAI,CAAQ,CACvB,CACF,CACS,CAClB,CAAC,CACW,CACR,CACL,CACI,CACP,EACP;KACH;;;;;;","names":["PopoverPosition","h","Host","index"],"sources":["src/components/z-contextual-menu/styles.css?tag=z-contextual-menu&encapsulation=shadow","src/components/z-contextual-menu/index.tsx"],"sourcesContent":[":host {\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-family: var(--font-family-sans);\n  font-weight: var(--font-rg);\n}\n\nbutton {\n  width: 100%;\n  height: 100%;\n  padding: 0;\n  border: none;\n  background: transparent;\n  cursor: pointer;\n}\n\nz-popover {\n  overflow: hidden;\n}\n\n.popover-content-container {\n  position: relative;\n  min-width: 112px;\n  max-width: 280px;\n  background-color: var(--color-surface02);\n  box-shadow: var(--shadow-2);\n  white-space: nowrap;\n}\n\n.element-container:hover {\n  color: var(--color-hover-primary);\n  fill: var(--color-hover-primary);\n}\n\n.element-text {\n  overflow: hidden;\n  font-size: 14px;\n  text-overflow: ellipsis;\n}\n\n.element-container,\n.disabled-element-container {\n  display: flex;\n  min-height: calc(var(--space-unit) * 4);\n  box-sizing: border-box;\n  align-items: center;\n  padding: calc(var(--space-unit) / 2) var(--space-unit);\n  fill: var(--color-disabled03);\n  gap: var(--space-unit);\n}\n\n.element-container {\n  fill: var(--color-primary01);\n}\n\n.element-icon {\n  display: flex;\n}\n","import {Component, Event, EventEmitter, Prop, h, Host} from \"@stencil/core\";\nimport {PopoverPosition} from \"../../beans\";\n\n@Component({\n  tag: \"z-contextual-menu\",\n  styleUrl: \"styles.css\",\n  shadow: true,\n})\nexport class ZContextualMenu {\n  /**\n   * Elements of ZContextualMenu\n   */\n  @Prop()\n  elements?: string;\n\n  /**\n   * [optional] Sets text color of ZContextualMenu's content\n   */\n  @Prop()\n  color?: string = \"color-primary01\";\n\n  /**\n   * [optional] Sets the position of the popover\n   */\n  @Prop({reflect: true})\n  popoverPosition?: PopoverPosition = PopoverPosition.BOTTOM_RIGHT;\n\n  private triggerButton?: HTMLButtonElement;\n\n  private popoverEl?: HTMLZPopoverElement;\n\n  /** remove filter click event, returns filterid */\n  @Event({\n    eventName: \"clickContextualMenu\",\n    composed: true,\n    cancelable: true,\n    bubbles: true,\n  })\n  clickContextualMenu: EventEmitter;\n\n  private jsonElements;\n\n  componentWillRender(): void {\n    if (this.elements) {\n      this.jsonElements = JSON.parse(this.elements.replace(/&quot;/g, '\"'));\n    }\n  }\n\n  componentDidLoad(): void {\n    this.popoverEl.bindTo = this.triggerButton;\n  }\n\n  private showIcon(): boolean {\n    return !this.jsonElements.some((element) => !element.icon);\n  }\n\n  private togglePopover(): void {\n    if (!this.popoverEl.open) {\n      this.popoverEl.open = true;\n    }\n  }\n\n  render(): HTMLZContextualMenuElement {\n    return (\n      <Host>\n        <button\n          ref={(el) => (this.triggerButton = el as HTMLButtonElement)}\n          aria-label={this.popoverEl?.open ? \"chiudi menu contestuale\" : \"apri menu contestuale\"}\n          onClick={() => this.togglePopover()}\n        >\n          <z-icon\n            name=\"contextual-menu\"\n            fill={this.color}\n          />\n        </button>\n        <z-popover\n          ref={(el) => (this.popoverEl = el as HTMLZPopoverElement)}\n          position={this.popoverPosition}\n        >\n          <div class=\"popover-content-container\">\n            <z-list>\n              <z-list-group divider-type=\"element\">\n                {this.jsonElements?.map((element, index) => (\n                  <z-list-element\n                    clickable={!element.disabled}\n                    class=\"my-z-list-element\"\n                    align-button=\"left\"\n                    expandable-style=\"accordion\"\n                    color={element.disabled ? `color-disabled03` : this.color}\n                    isContextualMenu\n                    listElementId={index}\n                    onClickItem={(event) => this.clickContextualMenu.emit(event.detail)}\n                  >\n                    <div class={element.disabled ? \"disabled-element-container\" : \"element-container\"}>\n                      {this.showIcon() && (\n                        <div class=\"element-icon\">\n                          <z-icon\n                            name={element.icon}\n                            width={16}\n                            height={16}\n                          />\n                        </div>\n                      )}\n                      <div class=\"element-text\">\n                        <span>{element.text}</span>\n                      </div>\n                    </div>\n                  </z-list-element>\n                ))}\n              </z-list-group>\n            </z-list>\n          </div>\n        </z-popover>\n      </Host>\n    );\n  }\n}\n"],"version":3}