{"file":"z-avatar.entry.cjs.js","mappings":";;;;;;;AAAA,MAAM,SAAS,GAAG,ihBAAihB,CAAC;AACpiB,sBAAe,SAAS;;MCOX,OAAO;IAqBlB;;;oBAlBoBA,kBAAU,CAAC,MAAM;;yBAQhB,aAAa;+BAIP,SAAS;;QAOlC,IAAI,CAAA,MAAA,IAAI,CAAC,IAAI,0CAAE,MAAM,MAAK,CAAC,IAAI,CAAA,MAAA,IAAI,CAAC,KAAK,0CAAE,MAAM,MAAK,CAAC,EAAE;YACvD,OAAO,CAAC,IAAI,CAAC,gEAAgE,CAAC,CAAC;SAChF;KACF;IAEO,WAAW;QACjB,IAAI,IAAI,CAAC,IAAI,KAAKA,kBAAU,CAAC,KAAK,EAAE;YAClC,OAAO,GAAG,CAAC;SACZ;aAAM,IAAI,IAAI,CAAC,IAAI,KAAKA,kBAAU,CAAC,MAAM,EAAE;YAC1C,OAAO,GAAG,CAAC;SACZ;aAAM,IAAI,IAAI,CAAC,IAAI,KAAKA,kBAAU,CAAC,KAAK,EAAE;YACzC,OAAO,GAAG,CAAC;SACZ;KACF;IAED,MAAM;QACJ,QACEC,QAACC,UAAI,qDACH,KAAK,EAAE,EAAC,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC,QAAQ,IAAI,CAAC,WAAW,EAAE,KAAK,GAAG,IAAI,EAAC,EACnE,KAAK,EAAE;gBACL,KAAK,EAAE,SAAS,IAAI,CAAC,SAAS,GAAG;gBACjC,eAAe,EAAE,SAAS,IAAI,CAAC,eAAe,GAAG;aAClD,IAEA,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,IAAID,sBAAO,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAQ,EACpE,IAAI,CAAC,KAAK,KACTA,iBACE,GAAG,EAAE,IAAI,CAAC,KAAK,EACf,OAAO,EAAE,OAAO,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,GAChC,CACH,CACI,EACP;KACH;;;;;;","names":["AvatarSize","h","Host"],"sources":["src/components/z-avatar/styles.css?tag=z-avatar&encapsulation=shadow","src/components/z-avatar/index.tsx"],"sourcesContent":[":host {\n  display: inline-flex;\n  overflow: hidden;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--gray700);\n  border-radius: 50%;\n  font-family: var(--font-family-sans);\n  text-transform: uppercase;\n}\n\n:host(.small),\n:host(.small) > img {\n  width: calc(var(--space-unit) * 3);\n  height: calc(var(--space-unit) * 3);\n}\n\n:host(.medium),\n:host(.medium) > img {\n  width: calc(var(--space-unit) * 4);\n  height: calc(var(--space-unit) * 4);\n}\n\n:host(.large),\n:host(.large) > img {\n  width: calc(var(--space-unit) * 5);\n  height: calc(var(--space-unit) * 5);\n}\n\n:host > img {\n  object-fit: cover;\n}\n","import {Component, Prop, h, Host} from \"@stencil/core\";\nimport {AvatarSize} from \"../../beans\";\n\n@Component({\n  tag: \"z-avatar\",\n  styleUrl: \"styles.css\",\n  shadow: true,\n})\nexport class ZAvatar {\n  /** [optional] Avatar size */\n  @Prop()\n  size?: AvatarSize = AvatarSize.MEDIUM;\n\n  /** [optional] Avatar text */\n  @Prop()\n  text?: string;\n\n  /** [optional] Avatar text color */\n  @Prop()\n  textColor?: string = \"color-white\";\n\n  /** [optional] Avatar background color */\n  @Prop()\n  backgroundColor?: string = \"gray700\";\n\n  /** [optional] Avatar image */\n  @Prop({mutable: true})\n  image?: string;\n\n  constructor() {\n    if (this.text?.length === 0 && this.image?.length === 0) {\n      console.warn(\"z-avatar must contain at least one prop between text and image\");\n    }\n  }\n\n  private getTextSize(): string {\n    if (this.size === AvatarSize.SMALL) {\n      return \"5\";\n    } else if (this.size === AvatarSize.MEDIUM) {\n      return \"4\";\n    } else if (this.size === AvatarSize.LARGE) {\n      return \"2\";\n    }\n  }\n\n  render(): HTMLZAvatarElement {\n    return (\n      <Host\n        class={{[this.size]: true, [`body-${this.getTextSize()}-sb`]: true}}\n        style={{\n          color: `var(--${this.textColor})`,\n          backgroundColor: `var(--${this.backgroundColor})`,\n        }}\n      >\n        {this.text && !this.image && <span>{this.text.substring(0, 2)}</span>}\n        {this.image && (\n          <img\n            src={this.image}\n            onError={() => (this.image = \"\")}\n          />\n        )}\n      </Host>\n    );\n  }\n}\n"],"version":3}