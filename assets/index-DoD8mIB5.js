import"./index-CMdrQeyy.js";import{s as d,g as s}from"./chunk-L4EGOTBX-lo-pZyle.js";import"./entry-preview-Cx7Tr7Nx.js";import{d as a,H as n,h as i,a as l}from"./index-BZ0rSFNp.js";import{c as p,L as r,D as h,d as c}from"./index-BBy8evlc.js";const m=":host{font-family:var(--font-family-sans);font-weight:var(--font-rg)}:host>.z-list-group-header-container{color:var(--gray700);font-size:var(--font-size-2);font-weight:var(--font-sb) !important;letter-spacing:0.16px;line-height:1.4}:host>.z-list-group-header-container.has-header{padding-top:var(--space-unit);padding-bottom:var(--space-unit)}:host>.z-list-group-header-container.has-header>z-divider{margin-top:var(--space-unit)}:host>.grouped-tree-list-header{padding-top:var(--space-unit);padding-bottom:0}",u=class extends n{constructor(){super(),this.__registerHost(),this.__attachShadow(),this.size=p.MEDIUM,this.dividerType=r.NONE,this.dividerSize=h.SMALL,this.dividerColor="gray200",this.listType=c.NONE}componentDidLoad(){const t=this.host.children;for(let e=0;e<t.length;e++)t.length-1>e&&(t[e].setAttribute("divider-type",this.dividerType),t[e].setAttribute("divider-size",this.dividerSize),t[e].setAttribute("divider-color",this.dividerColor)),t[e].setAttribute("size",this.size),t[e].setAttribute("list-type",this.listType),t[e].setAttribute("list-element-position",e.toString())}componentWillLoad(){this.hasHeader=!!this.host.querySelector('[slot="header-title"]')}render(){return i(l,{key:"1fb6fcb0e830e3feefcb1c7db0e198cc59d1d3ae",role:"group"},i("div",{key:"eaebb493fac45f9b285215c80ec2d1e8b8a5dce5",class:{"z-list-group-header-container":!0,"has-header":this.hasHeader&&!this.hasTreeItems,"grouped-tree-list-header":this.hasTreeItems}},i("slot",{key:"88566971078bd900e807ab469fb80a0f206b7a90",name:"header-title"}),this.dividerType===r.HEADER&&i("z-divider",{key:"2bfd29842e49f5b0cf85b2311302addbe5ba8676",color:this.dividerColor,size:this.dividerSize})),i("slot",{key:"cdb688c9ba78165017030e6e669995abd1a58d1b"}))}get host(){return this}static get style(){return m}};a(u,[1,"z-list-group",{size:[520],dividerType:[520,"divider-type"],dividerSize:[520,"divider-size"],dividerColor:[513,"divider-color"],listType:[520,"list-type"],hasTreeItems:[4,"has-tree-items"]}]);const o={schemaVersion:"1.0.0",modules:[{kind:"javascript-module",path:"",declarations:[{kind:"class",name:"ZListGroup",tagName:"z-list-group",customElement:!0,members:[{kind:"field",name:"size",type:"any",description:"[optional] Sets size of inside elements.",default:"ListSize.MEDIUM"},{kind:"field",name:"dividerType",type:"any",description:"[optional] Sets the position where to insert the divider.",default:"ListDividerType.NONE"},{kind:"field",name:"dividerSize",type:"any",description:"[optional] Sets the divider size.",default:"DividerSize.SMALL"},{kind:"field",name:"dividerColor",type:"string",description:"[optional] Sets the divider color.",default:'"gray200"'},{kind:"field",name:"listType",type:"any",description:"[optional] type of the list marker for each element",default:"ListType.NONE"},{kind:"field",name:"hasTreeItems",type:"boolean",description:"[optional] check for tree items in grouped lists"}],events:[]}],exports:[{kind:"js",name:"ZListGroup",declaration:{name:"ZListGroup",module:"src/components/list/z-list-group/index.tsx"}},{kind:"custom-element-definition",name:"z-list-group",declaration:{name:"ZListGroup",module:"src/components/list/z-list-group/index.tsx"}}]}]};d({...s()||{},...o,modules:[...(s()||{}).modules||[],...o.modules]});
