{"file":"z-anchor-navigation.entry.js","mappings":";;;AAAA,MAAM,SAAS,GAAG,s9EAAs9E,CAAC;AACz+E,gCAAe,SAAS;;MCsBX,iBAAiB;;;8BAMX,KAAK;yBAMV,KAAK;;;;;IAQT,cAAc;QACpB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI;YACzC,MAAM,MAAM,GAAG,IAAI,YAAY,iBAAiB,GAAG,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YAClF,MAAM,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC;YACvD,MAAM,CAAC,YAAY,CAAC,cAAc,EAAE,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC1D,IAAI,CAAC,eAAe,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;SACjD,CAAC,CAAC;KACJ;;;;IAKO,eAAe;QACrB,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC;KAClC;IAED,gBAAgB;QACd,MAAM,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACtE,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;IAED,oBAAoB;QAClB,MAAM,CAAC,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;KAC/D;IAED,MAAM;QACJ,QACE,EAAC,IAAI,qDAAC,SAAS,EAAE,IAAI,CAAC,SAAS,IAC7B,iEACE,KAAK,EAAC,QAAQ,EACd,OAAO,EAAE,aAAa,CAAC,SAAS,EAChC,IAAI,EAAE,IAAI,CAAC,SAAS,GAAG,YAAY,GAAG,cAAc,EACpD,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,cAG/B,EACX,4DAAK,GAAG,EAAE,CAAC,EAAE,MAAM,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,IAC/B,8DAAa,CACT,CACD,EACP;KACH;;;;;;","names":[],"sources":["src/components/z-anchor-navigation/styles.css?tag=z-anchor-navigation","src/components/z-anchor-navigation/index.tsx"],"sourcesContent":["html {\n  scroll-behavior: smooth;\n}\n\nz-anchor-navigation nav {\n  display: none;\n  flex-direction: column;\n  justify-content: flex-start;\n  row-gap: calc(var(--space-unit) / 2);\n}\n\nz-anchor-navigation[collapsed] nav {\n  display: flex;\n  margin-top: var(--space-unit);\n}\n\nz-anchor-navigation nav a {\n  display: -webkit-box;\n  overflow: clip;\n  width: 100%;\n  box-sizing: border-box;\n  padding: calc(var(--space-unit) * 1.5) calc(var(--space-unit) * 2);\n  -webkit-box-orient: vertical;\n  color: inherit;\n  font-weight: inherit;\n  -webkit-line-clamp: 2;\n  overflow-clip-margin: content-box;\n  text-decoration: none;\n}\n\nz-anchor-navigation nav * a:not(:only-child) {\n  padding-right: calc(var(--space-unit) * 5);\n}\n\n@supports not (overflow-clip-margin: content-box) {\n  z-anchor-navigation nav a {\n    display: inline-block;\n    overflow: hidden;\n    -webkit-line-clamp: none;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n}\n\nz-anchor-navigation nav > * {\n  position: relative;\n  border-left: var(--border-size-large) solid var(--color-surface04);\n  color: var(--color-default-text);\n  font-family: var(--font-family-sans);\n  transition:\n    background-color 0.3s ease-in-out,\n    border-color 0.3s ease-in-out,\n    color 0.3s ease-in-out;\n}\n\nz-anchor-navigation nav > [data-current] {\n  border-left-color: var(--color-primary01);\n  color: var(--color-link-primary);\n  font-weight: var(--font-sb);\n}\n\nz-anchor-navigation nav > * > *:is(z-button, button, z-icon) {\n  position: absolute;\n  top: 50%;\n  right: 0;\n  transform: translateY(-50%);\n  transition: opacity 0.3s ease-in-out;\n}\n\nz-anchor-navigation nav button {\n  padding: 0;\n  border: none;\n  margin: 0;\n  background-color: transparent;\n}\n\nz-anchor-navigation nav z-icon {\n  --z-icon-width: 16px;\n  --z-icon-height: 16px;\n\n  display: flex;\n  padding: calc(var(--space-unit) * 1.5);\n  fill: var(--color-default-icon);\n}\n\n@media (min-width: 768px) {\n  z-anchor-navigation z-button.toggle {\n    display: none !important;\n  }\n\n  z-anchor-navigation nav {\n    display: flex;\n  }\n\n  z-anchor-navigation nav a {\n    outline: none;\n  }\n\n  @media (hover: hover) {\n    z-anchor-navigation nav > *:hover {\n      border-left-color: var(--color-hover-secondary);\n      background-color: var(--color-hover-surface);\n      color: var(--color-hover-link);\n    }\n  }\n\n  z-anchor-navigation nav > *:is(:focus, :focus-within),\n  z-anchor-navigation nav :is(z-icon, button):focus:focus-visible {\n    box-shadow: var(--shadow-focus-primary);\n    outline: none;\n  }\n\n  z-anchor-navigation[hide-unselected] nav > *:not([data-current], :hover, :focus, :focus-within) {\n    color: transparent;\n  }\n\n  z-anchor-navigation\n    nav\n    > *:not([data-current], :hover, :focus, :focus-within)\n    > *:is(z-button, button, z-icon):not(:focus:focus-visible) {\n    opacity: 0;\n    pointer-events: none;\n  }\n\n  @media (hover: none) {\n    z-anchor-navigation:not([hide-unselected]) nav > * > *:is(z-button, button, z-icon) {\n      opacity: 1;\n      pointer-events: all;\n    }\n  }\n}\n","import {Component, h, Host, Prop, State} from \"@stencil/core\";\nimport {ButtonVariant} from \"../../beans\";\n\n/**\n * * Anchor navigation component.\n * @slot Main slot. Put some `<a>` tags inside. If you need an action button/icon, wrap it and the <a> inside another tag.\n * @example\n * ```\n * <z-anchor-navigation>\n *  <div>\n *    <a href=\"#section-id\">Section name</a>\n *    <button type=\"button\">\n *      <z-icon name=\"share\" />\n *    </button>\n *  </div>\n * </z-anchor-navigation>\n * ```\n */\n@Component({\n  tag: \"z-anchor-navigation\",\n  styleUrl: \"styles.css\",\n  shadow: false,\n})\nexport class ZAnchorNavigation {\n  /**\n   * If enabled, the text of each anchor will be hidden unless\n   * for the current one or the one the user is hovering.\n   */\n  @Prop({reflect: true})\n  hideUnselected = false;\n\n  /**\n   * Whether the mobile list is collapsed.\n   */\n  @State()\n  collapsed = false;\n\n  /** Reference to the nav element. */\n  private nav: HTMLElement;\n\n  /**\n   * Set aria-current attribute to the anchors.\n   */\n  private setAriaCurrent(): void {\n    Array.from(this.nav.children).forEach((item) => {\n      const anchor = item instanceof HTMLAnchorElement ? item : item.querySelector(\"a\");\n      const isCurrent = window.location.href === anchor.href;\n      anchor.setAttribute(\"aria-current\", isCurrent.toString());\n      item.toggleAttribute(\"data-current\", isCurrent);\n    });\n  }\n\n  /**\n   * Toggle collapsed state.\n   */\n  private toggleCollapsed(): void {\n    this.collapsed = !this.collapsed;\n  }\n\n  componentDidLoad(): void {\n    window.addEventListener(\"hashchange\", this.setAriaCurrent.bind(this));\n    this.setAriaCurrent();\n  }\n\n  disconnectedCallback(): void {\n    window.removeEventListener(\"hashchange\", this.setAriaCurrent);\n  }\n\n  render(): HTMLZAnchorNavigationElement {\n    return (\n      <Host collapsed={this.collapsed}>\n        <z-button\n          class=\"toggle\"\n          variant={ButtonVariant.SECONDARY}\n          icon={this.collapsed ? \"chevron-up\" : \"chevron-down\"}\n          onClick={this.toggleCollapsed.bind(this)}\n        >\n          salta a\n        </z-button>\n        <nav ref={(el) => (this.nav = el)}>\n          <slot></slot>\n        </nav>\n      </Host>\n    );\n  }\n}\n"],"version":3}