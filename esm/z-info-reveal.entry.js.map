{"file":"z-info-reveal.entry.js","mappings":";;;AAAA,MAAM,SAAS,GAAG,2/DAA2/D,CAAC;AAC9gE,0BAAe,SAAS;;MCkBX,WAAW;;;oBAKd,mBAAmB;wBAIK,kBAAkB,CAAC,YAAY;;oBAQxD,KAAK;4BAIW,IAAI;;IAG3B,UAAU;QACR,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,KAAK;YAChD,IAAI,IAAI,CAAC,YAAY,KAAK,KAAK,EAAE;gBAC/B,KAAK,CAAC,YAAY,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC;aACxC;iBAAM;gBACL,KAAK,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;aACvC;SACF,CAAC,CAAC;KACJ;;;;IAKO,WAAW;QACjB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;;;;IAKO,YAAY;QAClB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;KACnB;;;;;IAMO,IAAI;QACV,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QAC1C,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE;YACjD,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;KACF;IAED,MAAM;QACJ,QACE,EAAC,IAAI,qDAAC,IAAI,EAAE,IAAI,CAAC,IAAI,IACnB,+DACE,KAAK,EAAC,uBAAuB,EAC7B,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAEnC,IAAI,CAAC,KAAK,IAAI,YAAM,KAAK,EAAC,qBAAqB,IAAE,IAAI,CAAC,KAAK,CAAQ,EACpE,+DAAQ,IAAI,EAAE,IAAI,CAAC,IAAI,GAAW,CAC3B,EACR,IAAI,CAAC,IAAI,KACR,WACE,KAAK,EAAC,UAAU,EAChB,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAC7B,QAAQ,EAAE,CAAC,IAEX,eAAa,EACb,cACE,KAAK,EAAC,qBAAqB,EAC3B,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,IAErC,cAAQ,IAAI,EAAC,OAAO,GAAU,CACvB,CACL,CACP,CACI,EACP;KACH;;;;;;;;;;","names":[],"sources":["src/components/z-info-reveal/styles.css?tag=z-info-reveal&encapsulation=shadow","src/components/z-info-reveal/index.tsx"],"sourcesContent":[":host {\n  --z-info-reveal-theme--surface: var(--color-black);\n  --z-info-reveal-theme--text: var(--color-white);\n  --z-info-reveal-shadow: var(--shadow-2);\n  --z-info-reveal-max-width: 375px; /* defaults to average width of mobile devices */\n\n  position: relative;\n  display: flex;\n  width: fit-content;\n  background-color: var(--z-info-reveal-theme--surface);\n  color: var(--z-info-reveal-theme--text);\n  font-size: var(--font-size-3);\n  font-weight: var(--font-rg);\n  letter-spacing: 0;\n  line-height: 1.5;\n}\n\nbutton {\n  padding: 0;\n  border: none;\n  background-color: transparent;\n  border-radius: 0;\n  color: inherit;\n  cursor: pointer;\n  fill: currentcolor;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  line-height: inherit;\n}\n\nz-icon {\n  --z-icon-width: calc(var(--space-unit) * 3);\n  --z-icon-height: calc(var(--space-unit) * 3);\n\n  display: flex;\n}\n\n.z-info-reveal-trigger {\n  display: flex;\n  width: fit-content;\n  height: 100%;\n  align-items: center;\n  padding: calc(var(--space-unit) / 2);\n  box-shadow: var(--z-info-reveal-shadow);\n  column-gap: calc(var(--space-unit) / 2);\n}\n\n:host([position=\"top_left\"]) .z-info-reveal-trigger,\n:host([position=\"bottom_left\"]) .z-info-reveal-trigger {\n  flex-direction: row-reverse;\n}\n\n:host([open]) .z-info-reveal-trigger {\n  box-shadow: none;\n}\n\n.info-box {\n  position: absolute;\n  display: flex;\n  max-width: var(--z-info-reveal-max-width);\n  padding: calc(var(--space-unit) / 2);\n  background-color: var(--z-info-reveal-theme--surface);\n  box-shadow: var(--z-info-reveal-shadow);\n  column-gap: calc(var(--space-unit) / 2);\n  cursor: pointer;\n}\n\n:host([position=\"bottom_left\"]) .info-box,\n:host([position=\"bottom_right\"]) .info-box {\n  bottom: 0;\n}\n\n:host([position=\"top_right\"]) .info-box,\n:host([position=\"bottom_right\"]) .info-box {\n  right: 0;\n}\n\n:host([position=\"top_left\"]) .info-box,\n:host([position=\"bottom_left\"]) .info-box {\n  left: 0;\n  flex-direction: row-reverse;\n}\n\n::slotted(*) {\n  display: none;\n  width: max-content;\n}\n\n::slotted([data-current]) {\n  display: block;\n}\n\n:host([position=\"top_left\"]) .z-info-reveal-close,\n:host([position=\"top_right\"]) .z-info-reveal-close {\n  align-self: flex-start;\n}\n\n:host([position=\"bottom_left\"]) .z-info-reveal-close,\n:host([position=\"bottom_right\"]) .z-info-reveal-close {\n  align-self: flex-end;\n}\n","import {Component, h, Prop, State, Watch, Element, Host} from \"@stencil/core\";\nimport {InfoRevealPosition} from \"../../beans\";\n\n@Component({\n  tag: \"z-info-reveal\",\n  styleUrl: \"styles.css\",\n  shadow: true,\n})\n\n/**\n * Info reveal component.\n *\n * @slot - info to display in the info box. If more than one element has been slotted,\n * by clicking on the panel it switches to the next info element.\n * @cssprop --z-info-reveal-theme--surface - background color of the info reveal panel.\n * @cssprop --z-info-reveal-theme--text - foreground color of the info reveal panel.\n * @cssprop --z-info-reveal-shadow - shadow of the info reveal panel.\n * @cssprop --z-info-reveal-max-width - max width of the info reveal panel.\n */\nexport class ZInfoReveal {\n  @Element() el: HTMLZInfoRevealElement;\n\n  /** Name of the icon for the open button */\n  @Prop()\n  icon? = \"informationsource\";\n\n  /** Info reveal's position */\n  @Prop({reflect: true})\n  position?: InfoRevealPosition = InfoRevealPosition.BOTTOM_RIGHT;\n\n  /** Text that appears on closed panel next to the open button. */\n  @Prop()\n  label?: string;\n\n  /** Whether the info panel is open. */\n  @State()\n  open = false;\n\n  /** Current index for the info queue. */\n  @State()\n  currentIndex: number = null;\n\n  @Watch(\"currentIndex\")\n  watchItems(): void {\n    Array.from(this.el.children).forEach((child, index) => {\n      if (this.currentIndex === index) {\n        child.setAttribute(\"data-current\", \"\");\n      } else {\n        child.removeAttribute(\"data-current\");\n      }\n    });\n  }\n\n  /**\n   * Open the info box.\n   */\n  private openInfoBox(): void {\n    this.currentIndex = 0;\n    this.open = true;\n  }\n\n  /**\n   * Close the info box.\n   */\n  private closeInfoBox(): void {\n    this.open = false;\n  }\n\n  /**\n   * Navigate slotted info.\n   * It closes the info box after the last info has been navigated.\n   */\n  private next(): void {\n    this.currentIndex = this.currentIndex + 1;\n    if (this.currentIndex === this.el.children.length) {\n      this.closeInfoBox();\n    }\n  }\n\n  render(): HTMLZInfoRevealElement {\n    return (\n      <Host open={this.open}>\n        <button\n          class=\"z-info-reveal-trigger\"\n          onClick={this.openInfoBox.bind(this)}\n        >\n          {this.label && <span class=\"z-info-reveal-label\">{this.label}</span>}\n          <z-icon name={this.icon}></z-icon>\n        </button>\n        {this.open && (\n          <div\n            class=\"info-box\"\n            onClick={this.next.bind(this)}\n            tabIndex={0}\n          >\n            <slot></slot>\n            <button\n              class=\"z-info-reveal-close\"\n              onClick={this.closeInfoBox.bind(this)}\n            >\n              <z-icon name=\"close\"></z-icon>\n            </button>\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n"],"version":3}