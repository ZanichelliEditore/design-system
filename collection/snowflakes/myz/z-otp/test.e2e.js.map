{"version":3,"file":"test.e2e.js","sourceRoot":"","sources":["../../../../../src/snowflakes/myz/z-otp/test.e2e.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,UAAU,EAAC,MAAM,uBAAuB,CAAC;AAQjD,EAAE,CAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;IACvD,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;IAEhC,sDAAsD;IACtD,IAAI,UAAU,GAAG,EAAE,CAAC;IACpB,MAAM,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,EAAE;QAC7C,UAAU,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;IAC9B,CAAC,CAAC,CAAC;IAEH,sFAAsF;IACtF,MAAM,IAAI,GAAG,WAAW,CAAC;IACzB,IAAI,CAAC,qBAAqB,CAAC,CAAC,IAAI,EAAE,EAAE;QAClC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC,CAAc,EAAE,EAAE;YACjD,MAAM,CAAC,WAAW,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,EAAC,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC,EAAE,IAAI,CAAC,CAAC;IAET,MAAM,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;IACzC,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;IAErD,MAAM,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAE/B,MAAM,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACvB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAC5B,MAAM,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC","sourcesContent":["import {newE2EPage} from \"@stencil/core/testing\";\n\ndeclare global {\n  interface Window {\n    onOtpChange: (e) => void;\n  }\n}\n\nit(\"Test ZOtp should emit inputChange event\", async () => {\n  const page = await newE2EPage();\n\n  // Define a window.onCustomEvent function on the page.\n  let inputValue = \"\";\n  await page.exposeFunction(\"onOtpChange\", (e) => {\n    inputValue = e.detail.value;\n  });\n\n  // Attach an event listener to page to capture a custom event on page load/navigation.\n  const type = \"otpChange\";\n  page.evaluateOnNewDocument((type) => {\n    document.addEventListener(type, (e: CustomEvent) => {\n      window.onOtpChange({type, detail: e.detail});\n    });\n  }, type);\n\n  await page.setContent(`<z-otp></z-otp>`);\n  const input = await page.find(\"z-otp >>> div input\");\n\n  expect(inputValue).toEqual(\"\");\n\n  await input.press(\"6\");\n  await page.waitForChanges();\n  expect(inputValue).toEqual(\"6\");\n});\n"]}