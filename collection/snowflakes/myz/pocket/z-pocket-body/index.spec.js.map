{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../../../../../../src/snowflakes/myz/pocket/z-pocket-body/index.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,WAAW,EAAC,MAAM,uBAAuB,CAAC;AAElD,OAAO,EAAC,WAAW,EAAC,MAAM,SAAS,CAAC;AAEpC,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE;IACtC,EAAE,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;QACvC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,WAAW,CAAC;YACzB,IAAI,EAAE,iCAAiC;SACxC,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;KAQ7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;QACpD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,WAAW,CAAC;YACzB,IAAI,EAAE,iEAAiE;SACxE,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;KAQ7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;QACtD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,WAAW,CAAC;YACzB,IAAI,EAAE,oDAAoD;SAC3D,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;KAS7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {newSpecPage} from \"@stencil/core/testing\";\n\nimport {ZPocketBody} from \"./index\";\n\ndescribe(\"Suite test ZPocketBody\", () => {\n  it(\"Test render ZPocketBody\", async () => {\n    const page = await newSpecPage({\n      components: [ZPocketBody],\n      html: `<z-pocket-body></z-pocket-body>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-pocket-body>\n        <mock:shadow-root>\n          <main class=\"preview\">\n            <slot></slot>\n          </main>\n        </mock:shadow-root>\n      </z-pocket-body>\n    `);\n  });\n\n  it(\"Test render ZPocketBody - with props\", async () => {\n    const page = await newSpecPage({\n      components: [ZPocketBody],\n      html: `<z-pocket-body pocketid=\"pocket\" status=\"open\"></z-pocket-body>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-pocket-body pocketid=\"pocket\" status=\"open\">\n        <mock:shadow-root>\n          <main class=\"open\">\n            <slot></slot>\n          </main>\n        </mock:shadow-root>\n      </z-pocket-body>\n    `);\n  });\n\n  it(\"Test render ZPocketBody - with content\", async () => {\n    const page = await newSpecPage({\n      components: [ZPocketBody],\n      html: `<z-pocket-body>pocket body content</z-pocket-body>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-pocket-body>\n        <mock:shadow-root>\n          <main class=\"preview\">\n            <slot></slot>\n          </main>\n        </mock:shadow-root>\n        pocket body content\n      </z-pocket-body>\n    `);\n  });\n});\n"]}