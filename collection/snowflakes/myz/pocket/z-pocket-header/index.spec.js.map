{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../../../../../src/snowflakes/myz/pocket/z-pocket-header/index.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,WAAW,EAAC,MAAM,uBAAuB,CAAC;AAElD,OAAO,EAAC,aAAa,EAAC,MAAM,SAAS,CAAC;AAEtC,QAAQ,CAAC,0BAA0B,EAAE,GAAG,EAAE;IACxC,EAAE,CAAC,2BAA2B,EAAE,KAAK,IAAI,EAAE;QACzC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,aAAa,CAAC;YAC3B,IAAI,EAAE,qCAAqC;SAC5C,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;KAQ7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;QACtD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,aAAa,CAAC;YAC3B,IAAI,EAAE,uDAAuD;SAC9D,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;KAQ7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;QACxD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,aAAa,CAAC;YAC3B,IAAI,EAAE,0DAA0D;SACjE,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;KAS7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {newSpecPage} from \"@stencil/core/testing\";\n\nimport {ZPocketHeader} from \"./index\";\n\ndescribe(\"Suite test ZPocketHeader\", () => {\n  it(\"Test render ZPocketHeader\", async () => {\n    const page = await newSpecPage({\n      components: [ZPocketHeader],\n      html: `<z-pocket-header></z-pocket-header>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-pocket-header>\n        <mock:shadow-root>\n          <header role=\"button\" tabindex=\"0\" style=\"undefined: rgba(0,0,0,0);\">\n            <slot></slot>\n          </header>\n        </mock:shadow-root>\n      </z-pocket-header>\n    `);\n  });\n\n  it(\"Test render ZPocketHeader - with props\", async () => {\n    const page = await newSpecPage({\n      components: [ZPocketHeader],\n      html: `<z-pocket-header pocketid=\"pocket\"></z-pocket-header>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-pocket-header pocketid=\"pocket\">\n        <mock:shadow-root>\n          <header role=\"button\" tabindex=\"0\" style=\"undefined: rgba(0,0,0,0);\">\n            <slot></slot>\n          </header>\n        </mock:shadow-root>\n      </z-pocket-header>\n    `);\n  });\n\n  it(\"Test render ZPocketHeader - with content\", async () => {\n    const page = await newSpecPage({\n      components: [ZPocketHeader],\n      html: `<z-pocket-header>pocket header content</z-pocket-header>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-pocket-header>\n        <mock:shadow-root>\n          <header role=\"button\" tabindex=\"0\" style=\"undefined: rgba(0,0,0,0);\">\n            <slot></slot>\n          </header>\n        </mock:shadow-root>\n        pocket header content\n      </z-pocket-header>\n    `);\n  });\n});\n"]}