{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../../../../../../src/snowflakes/myz/pocket/z-pocket/index.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,WAAW,EAAC,MAAM,uBAAuB,CAAC;AAElD,OAAO,EAAC,OAAO,EAAC,MAAM,SAAS,CAAC;AAEhC,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,EAAE,CAAC,qBAAqB,EAAE,KAAK,IAAI,EAAE;QACnC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;YACrB,IAAI,EAAE,uBAAuB;SAC9B,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;KAW7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8BAA8B,EAAE,KAAK,IAAI,EAAE;QAC5C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;YACrB,IAAI,EAAE,uCAAuC;SAC9C,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;KAW7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;QAC1C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;YACrB,IAAI,EAAE,qCAAqC;SAC5C,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;KAW7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;QAChD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;YACrB,IAAI,EAAE,0DAA0D;SACjE,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;KAW7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;QAClD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,OAAO,CAAC;YACrB,IAAI,EAAE;;kBAEM;SACb,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;KAY7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {newSpecPage} from \"@stencil/core/testing\";\n\nimport {ZPocket} from \"./index\";\n\ndescribe(\"Suite test ZPocket\", () => {\n  it(\"Test render ZPocket\", async () => {\n    const page = await newSpecPage({\n      components: [ZPocket],\n      html: `<z-pocket></z-pocket>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-pocket>\n        <mock:shadow-root>\n          <div>\n            <div data-action=\"pocketBackground\" class=\"background preview\"></div>\n            <div id=\"\" class=\"content-wrapper\">\n              <div><slot></slot></div>\n            </div>\n          </div>\n        </mock:shadow-root>\n      </z-pocket>\n    `);\n  });\n\n  it(\"Test render ZPocket - closed\", async () => {\n    const page = await newSpecPage({\n      components: [ZPocket],\n      html: `<z-pocket status=\"closed\"></z-pocket>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-pocket status=\"closed\">\n        <mock:shadow-root>\n          <div>\n            <div data-action=\"pocketBackground\" class=\"background closed\"></div>\n            <div id=\"\" class=\"content-wrapper\">\n              <div><slot></slot></div>\n            </div>\n          </div>\n        </mock:shadow-root>\n      </z-pocket>\n    `);\n  });\n\n  it(\"Test render ZPocket - open\", async () => {\n    const page = await newSpecPage({\n      components: [ZPocket],\n      html: `<z-pocket status=\"open\"></z-pocket>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-pocket status=\"open\">\n        <mock:shadow-root>\n          <div>\n            <div data-action=\"pocketBackground\" class=\"background open\"></div>\n            <div id=\"\" class=\"content-wrapper\">\n              <div><slot></slot></div>\n            </div>\n          </div>\n        </mock:shadow-root>\n      </z-pocket>\n    `);\n  });\n\n  it(\"Test render ZPocket - with props\", async () => {\n    const page = await newSpecPage({\n      components: [ZPocket],\n      html: `<z-pocket pocketid=\"pocket\" status=\"preview\"></z-pocket>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-pocket pocketid=\"pocket\" status=\"preview\">\n        <mock:shadow-root>\n          <div>\n            <div data-action=\"pocketBackground\" data-pocket=\"pocket\" class=\"background preview\"></div>\n            <div id=\"pocket\" class=\"content-wrapper\">\n              <div><slot></slot></div>\n            </div>\n          </div>\n        </mock:shadow-root>\n      </z-pocket>\n    `);\n  });\n\n  it(\"Test render ZPocket - with content\", async () => {\n    const page = await newSpecPage({\n      components: [ZPocket],\n      html: `<z-pocket status=\"open\">\n        <div>z-pocket main content</div>\n      </z-pocket>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-pocket status=\"open\">\n        <mock:shadow-root>\n          <div>\n            <div data-action=\"pocketBackground\" class=\"background open\"></div>\n            <div id=\"\" class=\"content-wrapper\">\n              <div><slot></slot></div>\n            </div>\n          </div>\n        </mock:shadow-root>\n        <div>z-pocket main content</div>\n      </z-pocket>\n    `);\n  });\n});\n"]}