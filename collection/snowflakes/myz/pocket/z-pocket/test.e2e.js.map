{"version":3,"file":"test.e2e.js","sourceRoot":"","sources":["../../../../../../src/snowflakes/myz/pocket/z-pocket/test.e2e.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,UAAU,EAAC,MAAM,uBAAuB,CAAC;AASjD,EAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;IAC3D,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;IAEhC,sDAAsD;IACtD,IAAI,MAAM,GAAG,IAAI,CAAC;IAClB,MAAM,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC,CAAC,EAAE,EAAE;QAChD,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;IAC3B,CAAC,CAAC,CAAC;IAEH,sFAAsF;IACtF,MAAM,IAAI,GAAG,cAAc,CAAC;IAC5B,IAAI,CAAC,qBAAqB,CAAC,CAAC,IAAI,EAAE,EAAE;QAClC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC,CAAc,EAAE,EAAE;YACjD,MAAM,CAAC,cAAc,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,EAAC,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;IACL,CAAC,EAAE,IAAI,CAAC,CAAC;IAET,MAAM,IAAI,CAAC,UAAU,CAAC;;cAEV,CAAC,CAAC;IACd,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;IAC7D,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC;IAExE,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAClC,MAAM,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IAE1C,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;IACrB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAC5B,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC/B,MAAM,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAEvC,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;IACrB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAC5B,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACjC,MAAM,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IAEzC,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;IACrB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAC5B,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC/B,MAAM,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAEvC,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;IACrB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAC5B,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACjC,MAAM,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC;AAEH,EAAE,CAAC,qDAAqD,EAAE,KAAK,IAAI,EAAE;IACnE,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;IAEhC,sDAAsD;IACtD,IAAI,kBAAkB,GAAG,CAAC,CAAC;IAC3B,MAAM,IAAI,CAAC,cAAc,CAAC,qBAAqB,EAAE,GAAG,EAAE;QACpD,kBAAkB,EAAE,CAAC;IACvB,CAAC,CAAC,CAAC;IAEH,sFAAsF;IACtF,MAAM,gBAAgB,GAAG,mBAAmB,CAAC;IAC7C,IAAI,CAAC,qBAAqB,CAAC,CAAC,gBAAgB,EAAE,EAAE;QAC9C,QAAQ,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,GAAG,EAAE;YAC/C,MAAM,CAAC,mBAAmB,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC,EAAE,gBAAgB,CAAC,CAAC;IAErB,MAAM,IAAI,CAAC,UAAU,CAAC;;cAEV,CAAC,CAAC;IACd,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;IAE7D,MAAM,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAEtC,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;IACrB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAC5B,MAAM,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAEtC,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;IACrB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAC5B,MAAM,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC;AAEH,EAAE,CAAC,uEAAuE,EAAE,KAAK,IAAI,EAAE;IACrF,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;IAEhC,sDAAsD;IACtD,IAAI,MAAM,GAAG,IAAI,CAAC;IAClB,IAAI,aAAa,GAAG,CAAC,CAAC;IACtB,MAAM,IAAI,CAAC,cAAc,CAAC,gBAAgB,EAAE,CAAC,CAAC,EAAE,EAAE;QAChD,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;QACzB,aAAa,EAAE,CAAC;IAClB,CAAC,CAAC,CAAC;IAEH,sFAAsF;IACtF,MAAM,IAAI,GAAG,cAAc,CAAC;IAC5B,IAAI,CAAC,qBAAqB,CAAC,CAAC,IAAI,EAAE,EAAE;QAClC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC,CAAc,EAAE,EAAE;YACjD,MAAM,CAAC,cAAc,CAAC,EAAC,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,EAAC,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;IACL,CAAC,EAAE,IAAI,CAAC,CAAC;IAET,MAAM,IAAI,CAAC,UAAU,CAAC;;cAEV,CAAC,CAAC;IACd,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;IAC7D,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC;IAExE,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IAClC,MAAM,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;IAC1C,MAAM,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAEjC,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;IACrB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAC5B,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACnC,MAAM,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC3C,MAAM,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAEjC,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;IACrB,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;IAC5B,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACrC,MAAM,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IAC7C,MAAM,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC","sourcesContent":["import {newE2EPage} from \"@stencil/core/testing\";\n\ndeclare global {\n  interface Window {\n    onPocketToggle: (e) => void;\n    onPocketHeaderClick: () => void;\n  }\n}\n\nit(\"Test ZPocket should emit pocketToggle event\", async () => {\n  const page = await newE2EPage();\n\n  // Define a window.onCustomEvent function on the page.\n  let status = null;\n  await page.exposeFunction(\"onPocketToggle\", (e) => {\n    status = e.detail.status;\n  });\n\n  // Attach an event listener to page to capture a custom event on page load/navigation.\n  const type = \"pocketToggle\";\n  page.evaluateOnNewDocument((type) => {\n    document.addEventListener(type, (e: CustomEvent) => {\n      window.onPocketToggle({type, detail: e.detail});\n    });\n  }, type);\n\n  await page.setContent(`<z-pocket pocketid=\"pocket\">\n    <z-pocket-header pocketid=\"pocket\"></z-pocket-header>\n  </z-pocket>`);\n  const header = await page.find(\"z-pocket-header >>> header\");\n  const background = await page.find(\"z-pocket >>> div > div.background\");\n\n  expect(status).toEqual(\"preview\");\n  expect(background).toHaveClass(\"preview\");\n\n  await header.click();\n  await page.waitForChanges();\n  expect(status).toEqual(\"open\");\n  expect(background).toHaveClass(\"open\");\n\n  await header.click();\n  await page.waitForChanges();\n  expect(status).toEqual(\"closed\");\n  expect(background).toHaveClass(\"closed\");\n\n  await header.click();\n  await page.waitForChanges();\n  expect(status).toEqual(\"open\");\n  expect(background).toHaveClass(\"open\");\n\n  await header.click();\n  await page.waitForChanges();\n  expect(status).toEqual(\"closed\");\n  expect(background).toHaveClass(\"closed\");\n});\n\nit(\"Test ZPocket should receive pocketHeaderClick event\", async () => {\n  const page = await newE2EPage();\n\n  // Define a window.onCustomEvent function on the page.\n  let headerClickCounter = 0;\n  await page.exposeFunction(\"onPocketHeaderClick\", () => {\n    headerClickCounter++;\n  });\n\n  // Attach an event listener to page to capture a custom event on page load/navigation.\n  const headerClickEvent = \"pocketHeaderClick\";\n  page.evaluateOnNewDocument((headerClickEvent) => {\n    document.addEventListener(headerClickEvent, () => {\n      window.onPocketHeaderClick();\n    });\n  }, headerClickEvent);\n\n  await page.setContent(`<z-pocket pocketid=\"pocket\">\n    <z-pocket-header pocketid=\"pocket\"></z-pocket-header>\n  </z-pocket>`);\n  const header = await page.find(\"z-pocket-header >>> header\");\n\n  expect(headerClickCounter).toEqual(0);\n\n  await header.click();\n  await page.waitForChanges();\n  expect(headerClickCounter).toEqual(1);\n\n  await header.click();\n  await page.waitForChanges();\n  expect(headerClickCounter).toEqual(2);\n});\n\nit(\"Test ZPocket should not emit pocketToggle event with wrong/missing id\", async () => {\n  const page = await newE2EPage();\n\n  // Define a window.onCustomEvent function on the page.\n  let status = null;\n  let toggleCounter = 0;\n  await page.exposeFunction(\"onPocketToggle\", (e) => {\n    status = e.detail.status;\n    toggleCounter++;\n  });\n\n  // Attach an event listener to page to capture a custom event on page load/navigation.\n  const type = \"pocketToggle\";\n  page.evaluateOnNewDocument((type) => {\n    document.addEventListener(type, (e: CustomEvent) => {\n      window.onPocketToggle({type, detail: e.detail});\n    });\n  }, type);\n\n  await page.setContent(`<z-pocket pocketid=\"pocket\">\n    <z-pocket-header></z-pocket-header>\n  </z-pocket>`);\n  const header = await page.find(\"z-pocket-header >>> header\");\n  const background = await page.find(\"z-pocket >>> div > div.background\");\n\n  expect(status).toEqual(\"preview\");\n  expect(background).toHaveClass(\"preview\");\n  expect(toggleCounter).toEqual(1);\n\n  await header.click();\n  await page.waitForChanges();\n  expect(status).not.toEqual(\"open\");\n  expect(background).not.toHaveClass(\"open\");\n  expect(toggleCounter).toEqual(1);\n\n  await header.click();\n  await page.waitForChanges();\n  expect(status).not.toEqual(\"closed\");\n  expect(background).not.toHaveClass(\"closed\");\n  expect(toggleCounter).toEqual(1);\n});\n"]}