{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../../../../../../src/snowflakes/myz/pocket/z-messages-pocket/index.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,WAAW,EAAC,MAAM,uBAAuB,CAAC;AAElD,OAAO,EAAC,eAAe,EAAC,MAAM,SAAS,CAAC;AAExC,QAAQ,CAAC,4BAA4B,EAAE,GAAG,EAAE;IAC1C,EAAE,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC3C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,eAAe,CAAC;YAC7B,IAAI,EAAE,yCAAyC;SAChD,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;KAmB7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;QAClD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,eAAe,CAAC;YAC7B,IAAI,EAAE,uDAAuD;SAC9D,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;KAiB7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;QACpD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,eAAe,CAAC;YAC7B,IAAI,EAAE,yDAAyD;SAChE,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;KAmB7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;QACxD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,eAAe,CAAC;YAC7B,IAAI,EAAE,wFAAwF;SAC/F,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;KAmB7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE,KAAK,IAAI,EAAE;QAC1D,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,eAAe,CAAC;YAC7B,IAAI,EAAE;;2BAEe;SACtB,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;KAkB7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {newSpecPage} from \"@stencil/core/testing\";\n\nimport {ZMessagesPocket} from \"./index\";\n\ndescribe(\"Suite test ZMessagesPocket\", () => {\n  it(\"Test render ZMessagesPocket\", async () => {\n    const page = await newSpecPage({\n      components: [ZMessagesPocket],\n      html: `<z-messages-pocket></z-messages-pocket>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-messages-pocket>\n        <mock:shadow-root>\n          <z-pocket status=\"preview\" class=\"preview\">\n            <z-pocket-header>\n              <span>\n                Messaggi <span class=\"badge\"></span>\n              </span>\n              <z-icon name=\"chevron-up\" height=\"14\" width=\"14\"></z-icon>\n            </z-pocket-header>\n            <z-pocket-body>\n              <div class=\"body\">\n                <slot></slot>\n              </div>\n              <div class=\"gradient\"></div>\n            </z-pocket-body>\n          </z-pocket>\n        </mock:shadow-root>\n      </z-messages-pocket>\n    `);\n  });\n\n  it(\"Test render ZMessagesPocket - open\", async () => {\n    const page = await newSpecPage({\n      components: [ZMessagesPocket],\n      html: `<z-messages-pocket status=\"open\"></z-messages-pocket>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-messages-pocket status=\"open\">\n        <mock:shadow-root>\n          <z-pocket status=\"open\" class=\"open\">\n            <z-pocket-header>\n              <span>Riduci</span>\n              <z-icon name=\"chevron-down\" height=\"14\" width=\"14\"></z-icon>\n            </z-pocket-header>\n            <z-pocket-body>\n              <div class=\"body\">\n                <slot></slot>\n              </div>\n              <div class=\"gradient\"></div>\n            </z-pocket-body>\n          </z-pocket>\n        </mock:shadow-root>\n      </z-messages-pocket>\n    `);\n  });\n\n  it(\"Test render ZMessagesPocket - closed\", async () => {\n    const page = await newSpecPage({\n      components: [ZMessagesPocket],\n      html: `<z-messages-pocket status=\"closed\"></z-messages-pocket>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-messages-pocket status=\"closed\">\n        <mock:shadow-root>\n          <z-pocket status=\"closed\" class=\"closed\">\n            <z-pocket-header>\n              <span>\n                Messaggi <span class=\"badge\"></span>\n              </span>\n              <z-icon name=\"chevron-up\" height=\"14\" width=\"14\"></z-icon>\n            </z-pocket-header>\n            <z-pocket-body>\n              <div class=\"body\">\n                <slot></slot>\n              </div>\n              <div class=\"gradient\"></div>\n            </z-pocket-body>\n          </z-pocket>\n        </mock:shadow-root>\n      </z-messages-pocket>\n    `);\n  });\n\n  it(\"Test render ZMessagesPocket - with props\", async () => {\n    const page = await newSpecPage({\n      components: [ZMessagesPocket],\n      html: `<z-messages-pocket status=\"closed\" messages=\"2\" pocketid=\"pocket\"></z-messages-pocket>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-messages-pocket status=\"closed\" messages=\"2\" pocketid=\"pocket\">\n        <mock:shadow-root>\n          <z-pocket status=\"closed\" class=\"closed\" pocketid=\"pocket\">\n            <z-pocket-header pocketid=\"pocket\">\n              <span>\n                Messaggi <span class=\"badge\">2</span>\n              </span>\n              <z-icon name=\"chevron-up\" height=\"14\" width=\"14\"></z-icon>\n            </z-pocket-header>\n            <z-pocket-body pocketid=\"pocket\">\n              <div class=\"body\">\n                <slot></slot>\n              </div>\n              <div class=\"gradient\"></div>\n            </z-pocket-body>\n          </z-pocket>\n        </mock:shadow-root>\n      </z-messages-pocket>\n    `);\n  });\n\n  it(\"Test render ZMessagesPocket - with content\", async () => {\n    const page = await newSpecPage({\n      components: [ZMessagesPocket],\n      html: `<z-messages-pocket status=\"open\">\n        <z-pocket-message>message</z-pocket-message>\n      </z-messages-pocket>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-messages-pocket status=\"open\">\n        <mock:shadow-root>\n          <z-pocket status=\"open\" class=\"open\">\n            <z-pocket-header>\n              <span>Riduci</span>\n              <z-icon name=\"chevron-down\" height=\"14\" width=\"14\"></z-icon>\n            </z-pocket-header>\n            <z-pocket-body>\n              <div class=\"body\">\n                <slot></slot>\n              </div>\n              <div class=\"gradient\"></div>\n            </z-pocket-body>\n          </z-pocket>\n        </mock:shadow-root>\n        <z-pocket-message>message</z-pocket-message>\n      </z-messages-pocket>\n    `);\n  });\n});\n"]}