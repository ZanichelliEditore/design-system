{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../../../../../../src/snowflakes/myz/pocket/z-pocket-message/index.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,WAAW,EAAC,MAAM,uBAAuB,CAAC;AAElD,OAAO,EAAC,cAAc,EAAC,MAAM,SAAS,CAAC;AAEvC,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;IACnC,EAAE,CAAC,sBAAsB,EAAE,KAAK,IAAI,EAAE;QACpC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,cAAc,CAAC;YAC5B,IAAI,EAAE,uCAAuC;SAC9C,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;KAc7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE;QACnD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,cAAc,CAAC;YAC5B,IAAI,EAAE,sDAAsD;SAC7D,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;KAe7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;QAC3D,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,cAAc,CAAC;YAC5B,IAAI,EAAE;;;;0BAIc;SACrB,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;KAiB7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {newSpecPage} from \"@stencil/core/testing\";\n\nimport {ZPocketMessage} from \"./index\";\n\ndescribe(\"Suite test ZMessage\", () => {\n  it(\"Test render ZMessage\", async () => {\n    const page = await newSpecPage({\n      components: [ZPocketMessage],\n      html: `<z-pocket-message></z-pocket-message>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-pocket-message>\n        <mock:shadow-root>\n          <div>\n            <z-icon name=\"exclamation-circle\"></z-icon>\n            <div class=\"content\">\n              <slot></slot>\n            </div>\n            <div class=\"cta-wrapper\">\n              <slot name=\"cta\"></slot>\n            </div>\n          </div>\n        </mock:shadow-root>\n      </z-pocket-message>\n    `);\n  });\n\n  it(\"Test render ZMessage - with content\", async () => {\n    const page = await newSpecPage({\n      components: [ZPocketMessage],\n      html: `<z-pocket-message>message content</z-pocket-message>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-pocket-message>\n        <mock:shadow-root>\n          <div>\n            <z-icon name=\"exclamation-circle\"></z-icon>\n            <div class=\"content\">\n              <slot></slot>\n            </div>\n            <div class=\"cta-wrapper\">\n              <slot name=\"cta\"></slot>\n            </div>\n          </div>\n        </mock:shadow-root>\n        message content\n      </z-pocket-message>\n    `);\n  });\n\n  it(\"Test render ZMessage - with content and cta\", async () => {\n    const page = await newSpecPage({\n      components: [ZPocketMessage],\n      html: `<z-pocket-message>\n        message content\n        <z-button slot=\"cta\">cta 1</z-button>\n        <z-button slot=\"cta\">cta 2</z-button>\n      </z-pocket-message>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-pocket-message>\n        <mock:shadow-root>\n          <div>\n            <z-icon name=\"exclamation-circle\"></z-icon>\n            <div class=\"content\">\n              <slot></slot>\n            </div>\n            <div class=\"cta-wrapper\">\n              <slot name=\"cta\"></slot>\n            </div>\n          </div>\n        </mock:shadow-root>\n        message content\n        <z-button slot=\"cta\">cta 1</z-button>\n        <z-button slot=\"cta\">cta 2</z-button>\n      </z-pocket-message>\n    `);\n  });\n});\n"]}