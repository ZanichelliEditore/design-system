{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../../src/snowflakes/myz/card/z-myz-card-dictionary/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAE,KAAK,EAAgB,MAAM,EAAE,IAAI,EAAE,CAAC,EAAC,MAAM,eAAe,CAAC;AAC9E,OAAO,EAAC,UAAU,EAAE,aAAa,EAAC,MAAM,mBAAmB,CAAC;AAE5D;;;GAGG;AAMH,MAAM,OAAO,kBAAkB;;;;wBAWlB,KAAK;uBAIN,KAAK;+BAIG,MAAM;2BAIV,KAAK;;IAGnB,cAAc,CAAC,CAAc;QAC3B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;IAC1B,CAAC;IAMO,QAAQ,CAAC,QAAQ,GAAG,IAAI;QAC9B,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC;QACxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;IAED,MAAM;QACJ,OAAO,CACL;YACE;gBACE,0EAAmB,MAAM,EAAE,IAAI,CAAC,IAAI,GAAsB;gBAC1D,4DAAK,KAAK,EAAE,WAAW,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;oBACpD,4DAAK,KAAK,EAAC,OAAO;wBAChB;4BACE,yEACE,IAAI,EAAC,OAAO,EACZ,MAAM,EAAE,IAAI,CAAC,IAAI,EACjB,GAAG,EAAE,IAAI,CAAC,KAAK,EACf,KAAK,EAAE,IAAI,CAAC,QAAQ,GACpB,CACc;wBAClB,iEACE,KAAK,EAAE,EAAC,WAAW,EAAE,IAAI,CAAC,WAAW,EAAC,EACtC,OAAO,EAAE,aAAa,CAAC,SAAS,EAChC,IAAI,EAAC,mBAAmB,EACxB,IAAI,EAAE,UAAU,CAAC,OAAO,EACxB,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAClC,QAAQ,EAAE,IAAI,CAAC,OAAO,IAErB,IAAI,CAAC,eAAe,CACZ,CACP;oBACN,4DAAK,KAAK,EAAC,MAAM;wBACf,6DAAM,IAAI,EAAC,MAAM,GAAG,CAChB,CACF;gBACN,8DAAQ,CACG,CACT,CACP,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import {Component, Event, EventEmitter, Listen, Prop, h} from \"@stencil/core\";\nimport {ButtonSize, ButtonVariant} from \"../../../../beans\";\n\n/**\n * @slot  - generic card slot\n * @slot info - flipped card info\n */\n@Component({\n  tag: \"z-myz-card-dictionary\",\n  styleUrl: \"styles.css\",\n  shadow: true,\n})\nexport class ZMyzCardDictionary {\n  /** card title */\n  @Prop()\n  name: string;\n\n  /** card cover */\n  @Prop()\n  cover: string;\n\n  /** card is disabled */\n  @Prop()\n  disabled = false;\n\n  /** card is flipped */\n  @Prop({mutable: true})\n  flipped = false;\n\n  /** flip button label */\n  @Prop()\n  flipbuttonlabel = \"INFO\";\n\n  /** hide info button */\n  @Prop()\n  hideinfobtn = false;\n\n  @Listen(\"flipCard\")\n  handleFlipCard(e: CustomEvent): void {\n    this.flipCard(e.detail);\n  }\n\n  /** when card is flipped */\n  @Event()\n  cardFlipped: EventEmitter;\n\n  private flipCard(showBack = true): void {\n    this.flipped = showBack;\n    this.cardFlipped.emit(showBack);\n  }\n\n  render(): HTMLDivElement {\n    return (\n      <div>\n        <z-myz-card>\n          <z-myz-card-header titolo={this.name}></z-myz-card-header>\n          <div class={`content ${this.flipped ? \"flipped\" : \"\"}`}>\n            <div class=\"front\">\n              <z-myz-card-body>\n                <z-myz-card-cover\n                  slot=\"cover\"\n                  titolo={this.name}\n                  img={this.cover}\n                  faded={this.disabled}\n                />\n              </z-myz-card-body>\n              <z-button\n                class={{\"hide-info\": this.hideinfobtn}}\n                variant={ButtonVariant.SECONDARY}\n                icon=\"informationsource\"\n                size={ButtonSize.X_SMALL}\n                onClick={() => this.flipCard(true)}\n                disabled={this.flipped}\n              >\n                {this.flipbuttonlabel}\n              </z-button>\n            </div>\n            <div class=\"back\">\n              <slot name=\"info\" />\n            </div>\n          </div>\n          <slot />\n        </z-myz-card>\n      </div>\n    );\n  }\n}\n"]}