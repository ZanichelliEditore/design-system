{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../../../../../src/snowflakes/myz/card/z-myz-card-dictionary/index.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,WAAW,EAAC,MAAM,uBAAuB,CAAC;AAElD,OAAO,EAAC,kBAAkB,EAAC,MAAM,SAAS,CAAC;AAE3C,QAAQ,CAAC,+BAA+B,EAAE,GAAG,EAAE;IAC7C,EAAE,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;QACtD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,kBAAkB,CAAC;YAChC,IAAI,EAAE,iDAAiD;SACxD,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;KAsB7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;QAC3D,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,kBAAkB,CAAC;YAChC,IAAI,EAAE,8FAA8F;SACrG,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;KAsB7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;QACxD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,kBAAkB,CAAC;YAChC,IAAI,EAAE,6FAA6F;SACpG,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;KAsB7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gEAAgE,EAAE,KAAK,IAAI,EAAE;QAC9E,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,kBAAkB,CAAC;YAChC,IAAI,EAAE,iHAAiH;SACxH,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;KAsB7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {newSpecPage} from \"@stencil/core/testing\";\n\nimport {ZMyzCardDictionary} from \"./index\";\n\ndescribe(\"Suite test ZMyzCardDictionary\", () => {\n  it(\"Test render ZMyzCardDictionary - empty\", async () => {\n    const page = await newSpecPage({\n      components: [ZMyzCardDictionary],\n      html: `<z-myz-card-dictionary></z-myz-card-dictionary>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <z-myz-card-dictionary>\n        <mock:shadow-root>\n          <div>\n            <z-myz-card>\n              <z-myz-card-header></z-myz-card-header>\n              <div class=\"content\">\n                <div class=\"front\">\n                  <z-myz-card-body>\n                    <z-myz-card-cover slot=\"cover\"></z-myz-card-cover>\n                  </z-myz-card-body>\n                  <z-button variant=\"secondary\" icon=\"informationsource\" size=\"x-small\">INFO</z-button>\n                </div>\n                <div class=\"back\">\n                  <slot name=\"info\"></slot>\n                </div>\n              </div>\n              <slot></slot>\n            </z-myz-card>\n          </div>\n        </mock:shadow-root>\n      </z-myz-card-dictionary>\n    `);\n  });\n\n  it(\"Test render ZMyzCardDictionary - with props\", async () => {\n    const page = await newSpecPage({\n      components: [ZMyzCardDictionary],\n      html: `<z-myz-card-dictionary name=\"title\" cover=\"img-url\" disabled=\"true\"></z-myz-card-dictionary>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <z-myz-card-dictionary name=\"title\" cover=\"img-url\" disabled=\"true\">\n        <mock:shadow-root>\n          <div>\n            <z-myz-card>\n              <z-myz-card-header titolo=\"title\"></z-myz-card-header>\n              <div class=\"content\">\n                <div class=\"front\">\n                  <z-myz-card-body>\n                    <z-myz-card-cover titolo=\"title\" img=\"img-url\" slot=\"cover\" faded=\"\"></z-myz-card-cover>\n                  </z-myz-card-body>\n                  <z-button variant=\"secondary\" icon=\"informationsource\" size=\"x-small\">INFO</z-button>\n                </div>\n                <div class=\"back\">\n                  <slot name=\"info\"></slot>\n                </div>\n              </div>\n              <slot></slot>\n            </z-myz-card>\n          </div>\n        </mock:shadow-root>\n      </z-myz-card-dictionary>\n    `);\n  });\n\n  it(\"Test render ZMyzCardDictionary - flipped\", async () => {\n    const page = await newSpecPage({\n      components: [ZMyzCardDictionary],\n      html: `<z-myz-card-dictionary name=\"title\" cover=\"img-url\" flipped=\"true\"></z-myz-card-dictionary>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <z-myz-card-dictionary name=\"title\" cover=\"img-url\" flipped=\"true\">\n        <mock:shadow-root>\n          <div>\n            <z-myz-card>\n              <z-myz-card-header titolo=\"title\"></z-myz-card-header>\n              <div class=\"content flipped\">\n                <div class=\"front\">\n                  <z-myz-card-body>\n                    <z-myz-card-cover titolo=\"title\" img=\"img-url\" slot=\"cover\"></z-myz-card-cover>\n                  </z-myz-card-body>\n                  <z-button disabled variant=\"secondary\" icon=\"informationsource\" size=\"x-small\">INFO</z-button>\n                </div>\n                <div class=\"back\">\n                  <slot name=\"info\"></slot>\n                </div>\n              </div>\n              <slot></slot>\n            </z-myz-card>\n          </div>\n        </mock:shadow-root>\n      </z-myz-card-dictionary>\n    `);\n  });\n\n  it(\"Test render ZMyzCardDictionary - with props info button hidden\", async () => {\n    const page = await newSpecPage({\n      components: [ZMyzCardDictionary],\n      html: `<z-myz-card-dictionary hideinfobtn=\"true\" name=\"title\" cover=\"img-url\" disabled=\"true\"></z-myz-card-dictionary>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <z-myz-card-dictionary name=\"title\" cover=\"img-url\" disabled=\"true\" hideinfobtn=\"true\" >\n        <mock:shadow-root>\n          <div>\n            <z-myz-card>\n              <z-myz-card-header titolo=\"title\"></z-myz-card-header>\n              <div class=\"content\">\n                <div class=\"front\">\n                  <z-myz-card-body>\n                    <z-myz-card-cover titolo=\"title\" img=\"img-url\" slot=\"cover\" faded=\"\"></z-myz-card-cover>\n                  </z-myz-card-body>\n                  <z-button class=\"hide-info\" variant=\"secondary\" icon=\"informationsource\" size=\"x-small\">INFO</z-button>\n                </div>\n                <div class=\"back\">\n                  <slot name=\"info\"></slot>\n                </div>\n              </div>\n              <slot></slot>\n            </z-myz-card>\n          </div>\n        </mock:shadow-root>\n      </z-myz-card-dictionary>\n    `);\n  });\n});\n"]}