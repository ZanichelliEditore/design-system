{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../../../../../src/snowflakes/myz/card/z-myz-card-icon/index.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,WAAW,EAAC,MAAM,uBAAuB,CAAC;AAElD,OAAO,EAAC,YAAY,EAAC,MAAM,SAAS,CAAC;AAErC,QAAQ,CAAC,yBAAyB,EAAE,GAAG,EAAE;IACvC,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;QAC9C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,YAAY,CAAC;YAC1B,IAAI,EAAE,iDAAiD;SACxD,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;KAU7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;QACxD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,YAAY,CAAC;YAC1B,IAAI,EAAE,yEAAyE;SAChF,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;KAU7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;QACjD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,YAAY,CAAC;YAC1B,IAAI,EAAE,4DAA4D;SACnE,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;KAU7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {newSpecPage} from \"@stencil/core/testing\";\n\nimport {ZMyzCardIcon} from \"./index\";\n\ndescribe(\"Suite test ZMyzCardIcon\", () => {\n  it(\"Test render ZMyzCardIcon vuoto\", async () => {\n    const page = await newSpecPage({\n      components: [ZMyzCardIcon],\n      html: `<z-myz-card-icon icon=\"icon\"></z-myz-card-icon>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n    <z-myz-card-icon icon=\"icon\">\n      <mock:shadow-root>\n        <button aria-label=\"\">\n          <span>\n            <z-icon height=\"16\" name=\"icon\" width=\"16\"></z-icon>\n          </span>\n        </button>\n      </mock:shadow-root>\n    </z-myz-card-icon>\n    `);\n  });\n  it(\"Test render ZMyzCardIcon with aria-label\", async () => {\n    const page = await newSpecPage({\n      components: [ZMyzCardIcon],\n      html: `<z-myz-card-icon icon=\"icon\" aria-label=\"test label\"></z-myz-card-icon>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n    <z-myz-card-icon icon=\"icon\" aria-label=\"test label\">\n      <mock:shadow-root>\n        <button aria-label=\"test label\">\n          <span>\n            <z-icon height=\"16\" name=\"icon\" width=\"16\"></z-icon>\n          </span>\n        </button>\n      </mock:shadow-root>\n    </z-myz-card-icon>\n    `);\n  });\n  it(\"Test render ZMyzCardIcon disabled\", async () => {\n    const page = await newSpecPage({\n      components: [ZMyzCardIcon],\n      html: `<z-myz-card-icon icon=\"icon\" isdisabled></z-myz-card-icon>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n    <z-myz-card-icon icon=\"icon\" isdisabled>\n      <mock:shadow-root>\n        <button aria-label=\"\" disabled>\n          <span>\n            <z-icon height=\"16\" name=\"icon\" width=\"16\"></z-icon>\n          </span>\n        </button>\n      </mock:shadow-root>\n    </z-myz-card-icon>\n    `);\n  });\n});\n"]}