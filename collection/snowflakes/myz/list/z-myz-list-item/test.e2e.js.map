{"version":3,"file":"test.e2e.js","sourceRoot":"","sources":["../../../../../src/snowflakes/myz/list/z-myz-list-item/test.e2e.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,UAAU,EAAC,MAAM,uBAAuB,CAAC;AAEjD,QAAQ,CAAC,8BAA8B,EAAE,GAAG,EAAE;IAC5C,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;QAC1C,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,qCAAqC,CAAC,CAAC;QAC7D,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC9C,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC1B,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC;IACrC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;QAC9C,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,qCAAqC,CAAC,CAAC;QAE7D,MAAM,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC,GAAQ,EAAE,EAAE;YAC/C,GAAG,CAAC,IAAI,GAAG,UAAU,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5B,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC;QAC5D,MAAM,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;QAC9C,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,qCAAqC,CAAC,CAAC;QAE7D,MAAM,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,CAAC,GAAQ,EAAE,EAAE;YAC/C,GAAG,CAAC,IAAI,GAAG,UAAU,CAAC;YACtB,GAAG,CAAC,IAAI,GAAG,sBAAsB,CAAC;QACpC,CAAC,CAAC,CAAC;QAEH,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAE5B,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;QAC7D,MAAM,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QACnC,MAAM,CAAC,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAE7D,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC;QAErE,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC;IAC5B,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {newE2EPage} from \"@stencil/core/testing\";\n\ndescribe(\"z-myz-list-item test end2end\", () => {\n  it(\"Test that component exists\", async () => {\n    const page = await newE2EPage();\n    await page.setContent(`<z-myz-list-item></z-myz-list-item>`);\n    const el = await page.find(\"z-myz-list-item\");\n    expect(el).not.toBeNull();\n    expect(el.shadowRoot).not.toBeNull;\n  });\n\n  it(\"Test that prop text is created\", async () => {\n    const page = await newE2EPage();\n    await page.setContent(`<z-myz-list-item></z-myz-list-item>`);\n\n    await page.$eval(\"z-myz-list-item\", (elm: any) => {\n      elm.text = \"elemento\";\n    });\n\n    await page.waitForChanges();\n\n    const el = await page.find(\"z-myz-list-item >>> li > span\");\n    expect(el).toEqualText(\"elemento\");\n  });\n\n  it(\"Test that prop link is created\", async () => {\n    const page = await newE2EPage();\n    await page.setContent(`<z-myz-list-item></z-myz-list-item>`);\n\n    await page.$eval(\"z-myz-list-item\", (elm: any) => {\n      elm.text = \"elemento\";\n      elm.link = \"http://www.google.it\";\n    });\n\n    await page.waitForChanges();\n\n    const el = await page.find(\"z-myz-list-item >>> li span a \");\n    expect(el).toEqualText(\"elemento\");\n    expect(el.getAttribute(\"href\")).toBe(\"http://www.google.it\");\n\n    const iconElem = await page.find(\"z-myz-list-item >>> li span img \");\n\n    expect(iconElem).toBeNull;\n  });\n});\n"]}