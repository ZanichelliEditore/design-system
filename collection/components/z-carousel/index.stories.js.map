{"version":3,"file":"index.stories.js","sourceRoot":"","sources":["../../../../src/components/z-carousel/index.stories.ts"],"names":[],"mappings":"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","sourcesContent":["import {Meta, StoryObj} from \"@storybook/web-components\";\nimport {html} from \"lit\";\nimport {repeat} from \"lit/directives/repeat.js\";\nimport {type ZCarousel} from \".\";\nimport {CarouselArrowsPosition, CarouselProgressMode} from \"../../beans\";\nimport {CSSVarsArguments} from \"../../utils/storybook-utils\";\nimport \"../z-ghost-loading/index\";\nimport \"./index\";\nimport \"./index.stories.css\";\n\ntype ZCarouselStoriesArgs = ZCarousel & {itemsCount: number} & CSSVarsArguments<\"z-carousel-gutter\">;\n\n/**\n * This component was conceived as a list of elements to respect the rules of accessibility (https://www.w3.org/WAI/tutorials/carousels/working-example/).\n * Pass any number of elements inside its main `slot`.\n * @example```html\n * <z-carousel>\n *  <li>element</li>\n *  <li>element</li>\n *  <li>element</li>\n * </z-carousel>\n * ```\n * > Note: always use `li` elements as direct children of `z-carousel`, as it wraps them with an `ul` element.\n * You can set the gutter between the elements by using the `--z-carousel-gutter` custom property.\n * @example```css\n * z-carousel {\n *  --z-carousel-gutter: calc(var(--space-unit) * 2);\n * }```\n */\nconst StoryMeta = {\n  title: \"ZCarousel\",\n  component: \"z-carousel\",\n  decorators: [(Story) => html`<div class=\"z-carousel-story-container\">${Story()}</div>`],\n} satisfies Meta<ZCarouselStoriesArgs>;\n\nexport default StoryMeta;\n\ntype Story = StoryObj<ZCarouselStoriesArgs>;\n\nexport const SlideshowWithArrowsOver = {\n  args: {\n    \"label\": \"\",\n    \"--z-carousel-gutter\": \"var(--space-unit)\",\n    \"infinite\": false,\n    \"fixedArrows\": true,\n    \"itemsCount\": 8,\n  },\n  render: (args) =>\n    html`<z-carousel\n      .arrowsPosition=${CarouselArrowsPosition.OVER}\n      .fixedArrows=${args.fixedArrows}\n      .infinite=${args.infinite}\n      label=${args.label}\n      style=\"--z-carousel-gutter: ${args[\"--z-carousel-gutter\"]}\"\n    >\n      ${repeat(\n        [...new Array(args.itemsCount)].map((_, i) => i),\n        (i) => i,\n        (_, index) => html`<li><div class=\"carousel-box\">${index + 1}</div></li>`\n      )}\n    </z-carousel>`,\n} satisfies Story;\n\nexport const SingleMode = {\n  parameters: {\n    layout: \"centered\",\n  },\n  argTypes: {\n    arrowsPosition: {\n      control: {\n        type: \"inline-radio\",\n      },\n      options: Object.values(CarouselArrowsPosition),\n    },\n    progressMode: {\n      control: {\n        type: \"inline-radio\",\n      },\n      options: Object.values(CarouselProgressMode),\n    },\n  },\n  args: {\n    label: \"Carousel title\",\n    progressMode: CarouselProgressMode.DOTS,\n    arrowsPosition: CarouselArrowsPosition.BOTTOM,\n    infinite: false,\n    fixedArrows: true,\n    itemsCount: 8,\n  },\n  render: (args) =>\n    html`<z-carousel\n      .arrowsPosition=${args.arrowsPosition}\n      .fixedArrows=${args.fixedArrows}\n      .infinite=${args.infinite}\n      .progressMode=${args.progressMode}\n      .single=${true}\n      label=${args.label}\n    >\n      ${repeat(\n        [...new Array(args.itemsCount)].map((_, i) => i),\n        (i) => i,\n        (_, index) => html`<li><div class=\"carousel-box\">${index + 1}</div></li>`\n      )}\n    </z-carousel>`,\n} satisfies Story;\n\n/**\n * You can handle ghost loading for the whole z-carousel by setting two properties:\n * - `isLoading` (boolean): to show a `z-ghost-loading` component instead of the carousel content.\n * - `ghostLoadingHeight` (number): to set the height of the `z-ghost-loading` component.\n * You can also manually handle ghost loading by putting <z-ghost-loading> elements as items.\n */\nexport const GhostLoading = {\n  args: {\n    label: \"Carousel title\",\n    ghostLoadingHeight: 265,\n  },\n  parameters: {\n    controls: {\n      exclude: [\"infinite\"],\n    },\n  },\n  render: (args) =>\n    html`<z-carousel\n      label=${args.label}\n      .isLoading=${true}\n      .ghostLoadingHeight=${args.ghostLoadingHeight}\n    ></z-carousel>`,\n} satisfies Story;\n\nexport const LoadingItems = {\n  args: {\n    \"label\": \"Carousel title\",\n    \"--z-carousel-gutter\": \"8px\",\n  },\n  parameters: {\n    controls: {\n      exclude: [\"infinite\"],\n    },\n  },\n  render: (args) =>\n    html`<z-carousel\n      label=${args.label}\n      .infinite=${args.infinite}\n      style=\"--z-carousel-gutter: ${args[\"--z-carousel-gutter\"]}\"\n    >\n      ${repeat(\n        new Array(8),\n        () =>\n          html`<li>\n            <div class=\"carousel-box-loading\">\n              <z-ghost-loading></z-ghost-loading>\n            </div>\n          </li>`\n      )}\n    </z-carousel>`,\n} satisfies Story;\n"]}