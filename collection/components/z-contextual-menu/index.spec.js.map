{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../../../src/components/z-contextual-menu/index.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,WAAW,EAAC,MAAM,uBAAuB,CAAC;AAElD,OAAO,EAAC,eAAe,EAAC,MAAM,SAAS,CAAC;AAExC,QAAQ,CAAC,4BAA4B,EAAE,GAAG,EAAE;IAC1C,EAAE,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;QACjD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,eAAe,CAAC;YAC7B,IAAI,EAAE,yEAAyE;SAChF,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;KAe7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;QACzD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,eAAe,CAAC;YAC7B,IAAI,EAAE,uLAAuL;SAC9L,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAwC7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {newSpecPage} from \"@stencil/core/testing\";\n\nimport {ZContextualMenu} from \"./index\";\n\ndescribe(\"Suite test ZContextualMenu\", () => {\n  it(\"Test render ZContextualMenu vuoto\", async () => {\n    const page = await newSpecPage({\n      components: [ZContextualMenu],\n      html: `<z-contextual-menu popover-position=\"bottom_right\"></z-contextual-menu>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-contextual-menu popover-position=\"bottom_right\">\n        <mock:shadow-root>\n          <button aria-label=\"apri menu contestuale\">\n            <z-icon fill=\"color-primary01\" name=\"contextual-menu\"></z-icon>\n          </button>\n          <z-popover position=\"bottom_right\">\n            <div class=\"popover-content-container\">\n              <z-list>\n                <z-list-group divider-type=\"element\"></z-list-group>\n              </z-list>\n            </div>\n          </z-popover>\n        </mock:shadow-root>\n      </z-contextual-menu>\n    `);\n  });\n\n  it(\"Test render ZContextualMenu elements prop\", async () => {\n    const page = await newSpecPage({\n      components: [ZContextualMenu],\n      html: `<z-contextual-menu popover-position=\"bottom_right\" elements='[{\"icon\":\"share\",\"text\":\"Element 1\",\"key\": \"0\"},{\"icon\":\"delete\",\"text\":\"Elemento 2\",\"key\": \"1\"}]''></z-contextual-menu>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <z-contextual-menu '=\"\" elements='[{\"icon\":\"share\",\"text\":\"Element 1\",\"key\": \"0\"},{\"icon\":\"delete\",\"text\":\"Elemento 2\",\"key\": \"1\"}]' popover-position=\"bottom_right\">\n        <mock:shadow-root>\n            <button aria-label=\"apri menu contestuale\">\n              <z-icon fill=\"color-primary01\" name=\"contextual-menu\"></z-icon>\n            </button>\n            <z-popover position=\"bottom_right\">\n                 <div class=\"popover-content-container\">\n                   <z-list>\n                     <z-list-group divider-type=\"element\">\n                       <z-list-element align-button=\"left\" class=\"my-z-list-element\" clickable=\"\" color=\"color-primary01\" expandable-style=\"accordion\" iscontextualmenu=\"\" listelementid=\"0\">\n                         <div class=\"element-container\">\n                         <div class=\"element-icon\">\n                           <z-icon height=\"16\" name=\"share\" width=\"16\"></z-icon>\n                           </div>\n                           <div class=\"element-text\">\n                             <span>\n                               Element 1\n                             </span>\n                           </div>\n                         </div>\n                       </z-list-element>\n                       <z-list-element align-button=\"left\" class=\"my-z-list-element\" clickable=\"\" color=\"color-primary01\" expandable-style=\"accordion\" iscontextualmenu=\"\" listelementid=\"1\">\n                         <div class=\"element-container\">\n                         <div class=\"element-icon\">\n                           <z-icon  height=\"16\" name=\"delete\" width=\"16\"></z-icon>\n                           </div>\n                           <div class=\"element-text\">\n                             <span>\n                               Elemento 2\n                             </span>\n                           </div>\n                         </div>\n                       </z-list-element>\n                     </z-list-group>\n                   </z-list>\n                 </div>\n               </z-popover>\n        </mock:shadow-root>\n      </z-contextual-menu>\n    `);\n  });\n});\n"]}