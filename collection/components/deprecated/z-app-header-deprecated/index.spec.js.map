{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../../../../../src/components/deprecated/z-app-header-deprecated/index.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,WAAW,EAAC,MAAM,uBAAuB,CAAC;AAElD,OAAO,EAAC,oBAAoB,EAAC,MAAM,SAAS,CAAC;AAE7C,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;IACrC,EAAE,CAAC,8BAA8B,EAAE,KAAK,IAAI,EAAE;QAC5C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,oBAAoB,CAAC;YAClC,IAAI,EAAE,qDAAqD;SAC5D,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA6B7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE,KAAK,IAAI,EAAE;QACjD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,oBAAoB,CAAC;YAClC,IAAI,EAAE;;iCAEqB;SAC5B,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA8B7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE,KAAK,IAAI,EAAE;QAC9D,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,oBAAoB,CAAC;YAClC,IAAI,EAAE;;;iCAGqB;SAC5B,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAgC7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oDAAoD,EAAE,KAAK,IAAI,EAAE;QAClE,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,oBAAoB,CAAC;YAClC,IAAI,EAAE;;;iCAGqB;SAC5B,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAgC7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;QACxD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,oBAAoB,CAAC;YAClC,IAAI,EAAE;;iCAEqB;SAC5B,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA8B7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {newSpecPage} from \"@stencil/core/testing\";\n\nimport {ZAppHeaderDeprecated} from \"./index\";\n\ndescribe(\"Suite test ZAppHeader\", () => {\n  it(\"Test render empty ZAppHeader\", async () => {\n    const page = await newSpecPage({\n      components: [ZAppHeaderDeprecated],\n      html: `<z-app-header-deprecated></z-app-header-deprecated>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-app-header-deprecated menu-length=\"0\" flow=\"auto\">\n        <mock:shadow-root>\n          <div class=\"heading-panel\">\n            <div class=\"heading-container\">\n              <div class=\"heading-subtitle\">\n                <slot name=\"top-subtitle\"></slot>\n              </div>\n              <div class=\"heading-title\">\n                <slot name=\"title\"></slot>\n              </div>\n              <div class=\"heading-subtitle\">\n                <slot name=\"subtitle\"></slot>\n              </div>\n            </div>\n            <div class=\"menu-container\">\n              <slot name=\"menu\"></slot>\n            </div>\n          </div>\n          <z-offcanvas transitiondirection=\"right\" variant=\"overlay\">\n            <button aria-label=\"Chiudi menu\" class=\"drawer-close\" slot=\"canvasContent\" aria-hidden=\"true\" disabled>\n              <z-icon name=\"close\"></z-icon>\n            </button>\n            <div class=\"drawer-content\" slot=\"canvasContent\" aria-hidden=\"true\">\n              <slot name=\"menu\"></slot>\n            </div>\n          </z-offcanvas>\n        </mock:shadow-root>\n      </z-app-header-deprecated>\n    `);\n  });\n\n  it(\"Test render ZAppHeader with title\", async () => {\n    const page = await newSpecPage({\n      components: [ZAppHeaderDeprecated],\n      html: `<z-app-header-deprecated>\n        <h1 slot=\"title\">Titolo di test</h1>\n      </z-app-header-deprecated>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-app-header-deprecated menu-length=\"0\" flow=\"auto\">\n        <mock:shadow-root>\n          <div class=\"heading-panel\">\n            <div class=\"heading-container\">\n              <div class=\"heading-subtitle\">\n                <slot name=\"top-subtitle\"></slot>\n              </div>\n              <div class=\"heading-title\">\n                <slot name=\"title\"></slot>\n              </div>\n              <div class=\"heading-subtitle\">\n                <slot name=\"subtitle\"></slot>\n              </div>\n            </div>\n            <div class=\"menu-container\">\n              <slot name=\"menu\"></slot>\n            </div>\n          </div>\n          <z-offcanvas transitiondirection=\"right\" variant=\"overlay\">\n            <button aria-label=\"Chiudi menu\" class=\"drawer-close\" slot=\"canvasContent\" aria-hidden=\"true\" disabled>\n              <z-icon name=\"close\"></z-icon>\n            </button>\n            <div class=\"drawer-content\" slot=\"canvasContent\" aria-hidden=\"true\">\n              <slot name=\"menu\"></slot>\n            </div>\n          </z-offcanvas>\n        </mock:shadow-root>\n        <h1 slot=\"title\">Titolo di test</h1>\n      </z-app-header-deprecated>\n    `);\n  });\n\n  it(\"Test render ZAppHeader with title and subtitle\", async () => {\n    const page = await newSpecPage({\n      components: [ZAppHeaderDeprecated],\n      html: `<z-app-header-deprecated>\n        <h1 slot=\"title\">Titolo di test</h1>\n        <h2 slot=\"subtitle\">Sottotitolo di test</h2>\n      </z-app-header-deprecated>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-app-header-deprecated menu-length=\"0\" flow=\"auto\">\n        <mock:shadow-root>\n          <div class=\"heading-panel\">\n            <div class=\"heading-container\">\n              <div class=\"heading-subtitle\">\n                <slot name=\"top-subtitle\"></slot>\n              </div>\n              <div class=\"heading-title\">\n                <slot name=\"title\"></slot>\n              </div>\n              <div class=\"heading-subtitle\">\n                <slot name=\"subtitle\"></slot>\n              </div>\n            </div>\n            <div class=\"menu-container\">\n              <slot name=\"menu\"></slot>\n            </div>\n          </div>\n        </div>\n        <z-offcanvas transitiondirection=\"right\" variant=\"overlay\">\n            <button aria-label=\"Chiudi menu\" class=\"drawer-close\" slot=\"canvasContent\" aria-hidden=\"true\" disabled>\n              <z-icon name=\"close\"></z-icon>\n            </button>\n            <div class=\"drawer-content\" slot=\"canvasContent\" aria-hidden=\"true\">\n              <slot name=\"menu\"></slot>\n            </div>\n          </z-offcanvas>\n        </mock:shadow-root>\n        <h1 slot=\"title\">Titolo di test</h1>\n        <h2 slot=\"subtitle\">Sottotitolo di test</h2>\n      </z-app-header-deprecated>\n    `);\n  });\n\n  it(\"Test render ZAppHeader with title and top subtitle\", async () => {\n    const page = await newSpecPage({\n      components: [ZAppHeaderDeprecated],\n      html: `<z-app-header-deprecated>\n        <h2 slot=\"top-subtitle\">Sottotitolo di test</h2>\n        <h1 slot=\"title\">Titolo di test</h1>\n      </z-app-header-deprecated>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-app-header-deprecated menu-length=\"0\" flow=\"auto\">\n        <mock:shadow-root>\n          <div class=\"heading-panel\">\n            <div class=\"heading-container\">\n              <div class=\"heading-subtitle\">\n                <slot name=\"top-subtitle\"></slot>\n              </div>\n              <div class=\"heading-title\">\n                <slot name=\"title\"></slot>\n              </div>\n              <div class=\"heading-subtitle\">\n                <slot name=\"subtitle\"></slot>\n              </div>\n            </div>\n            <div class=\"menu-container\">\n              <slot name=\"menu\"></slot>\n            </div>\n          </div>\n        </div>\n        <z-offcanvas transitiondirection=\"right\" variant=\"overlay\">\n            <button aria-label=\"Chiudi menu\" class=\"drawer-close\" slot=\"canvasContent\" aria-hidden=\"true\" disabled>\n              <z-icon name=\"close\"></z-icon>\n            </button>\n            <div class=\"drawer-content\" slot=\"canvasContent\" aria-hidden=\"true\">\n              <slot name=\"menu\"></slot>\n            </div>\n          </z-offcanvas>\n        </mock:shadow-root>\n        <h2 slot=\"top-subtitle\">Sottotitolo di test</h2>\n        <h1 slot=\"title\">Titolo di test</h1>\n      </z-app-header-deprecated>\n    `);\n  });\n\n  it(\"Test render ZAppHeader with stuck layout\", async () => {\n    const page = await newSpecPage({\n      components: [ZAppHeaderDeprecated],\n      html: `<z-app-header-deprecated stuck>\n        <h1 slot=\"title\">Titolo di test</h1>\n      </z-app-header-deprecated>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-app-header-deprecated menu-length=\"0\" flow=\"auto\" stuck>\n        <mock:shadow-root>\n          <div class=\"heading-panel\">\n            <div class=\"heading-container\">\n              <div class=\"heading-subtitle\">\n                <slot name=\"top-subtitle\"></slot>\n              </div>\n              <div class=\"heading-title\">\n                <slot name=\"title\"></slot>\n              </div>\n              <div class=\"heading-subtitle\">\n                <slot name=\"subtitle\"></slot>\n              </div>\n            </div>\n            <div class=\"menu-container\">\n              <slot name=\"menu\"></slot>\n            </div>\n          </div>\n          <z-offcanvas transitiondirection=\"right\" variant=\"overlay\">\n            <button aria-label=\"Chiudi menu\" class=\"drawer-close\" slot=\"canvasContent\" aria-hidden=\"true\" disabled>\n              <z-icon name=\"close\"></z-icon>\n            </button>\n            <div class=\"drawer-content\" slot=\"canvasContent\" aria-hidden=\"true\">\n              <slot name=\"menu\"></slot>\n            </div>\n          </z-offcanvas>\n        </mock:shadow-root>\n        <h1 slot=\"title\">Titolo di test</h1>\n      </z-app-header-deprecated>\n    `);\n  });\n});\n"]}