{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../../../../../src/components/file-upload/z-file-upload/index.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,WAAW,EAAC,MAAM,uBAAuB,CAAC;AAElD,OAAO,EAAC,WAAW,EAAC,MAAM,SAAS,CAAC;AAEpC,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE;IACtC,EAAE,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;QAC/C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,WAAW,CAAC;YACzB,IAAI,EAAE;;;;;;8BAMkB;SACzB,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qBA6Bb,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;QAChD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,WAAW,CAAC;YACzB,IAAI,EAAE;;;;;8BAKkB;SACzB,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;aACd,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAmCI,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8DAA8D,EAAE,KAAK,IAAI,EAAE;QAC5E,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,WAAW,CAAC;YACzB,IAAI,EAAE;;;;;;;8BAOkB;SACzB,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;qBA0Bb,CAAC,CAAC;IACrB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {newSpecPage} from \"@stencil/core/testing\";\n\nimport {ZFileUpload} from \"./index\";\n\ndescribe(\"Suite test ZFileUpload\", () => {\n  it(\"Test render ZFileUpload default\", async () => {\n    const page = await newSpecPage({\n      components: [ZFileUpload],\n      html: `<z-file-upload type=\"default\"\n                            variant=\"primary\"\n                            main-title=\"Allega un file\"\n                            description=\"Vuoi allegare un file per chiarire meglio la tua richiesta?\"\n                            accepted-format= \".pdf, .doc, .tiff, .png, .jpg, .jpeg\"\n                            file-max-size=\"50\">>\n             </z-file-upload>`,\n    });\n    expect(page.root).toEqualHtml(`\n    <z-file-upload accepted-format=\".pdf, .doc, .tiff, .png, .jpg, .jpeg\" description=\"Vuoi allegare un file per chiarire meglio la tua richiesta?\" file-max-size=\"50\" main-title=\"Allega un file\" type=\"default\" variant=\"primary\">\n      <mock:shadow-root>\n       <div class=\"container default\">\n         <span id=\"title\">\n           Allega un file\n         </span>\n         <span class=\"body-3-sb\">\n           Vuoi allegare un file per chiarire meglio la tua richiesta?\n         </span>\n         <span class=\"body-3\">\n           Puoi allegare file nei formati PDF, DOC, TIFF, PNG, JPG, JPEG per un massimo di 50MB di peso.\n         </span>\n         <section class=\"files-container hidden\">\n          <span class=\"heading-4-sb\">\n            File appena caricati\n          </span>\n          <div class=\"files-wrapper\">\n            <slot name=\"files\"></slot>\n          </div>\n          <z-divider size=\"medium\"></z-divider>\n         </section>\n         <input accept=\".pdf, .doc, .tiff, .png, .jpg, .jpeg\" id=\"file-elem\" multiple=\"\" type=\"file\">\n         <z-button icon=\"upload\" id=\"fileSelect\">\n           allega\n         </z-button>\n       </div>\n      </mock:shadow-root>\n      &gt;\n    </z-file-upload>`);\n  });\n\n  it(\"Test render ZFileUpload dragdrop\", async () => {\n    const page = await newSpecPage({\n      components: [ZFileUpload],\n      html: `<z-file-upload type=\"dragdrop\"\n                            main-title=\"Allega un file\"\n                            description=\"Vuoi allegare un file per chiarire meglio la tua richiesta?\"\n                            accepted-format= \".pdf, .doc, .tiff, .png, .jpg, .jpeg\"\n                            file-max-size=\"50\">>\n             </z-file-upload>`,\n    });\n    expect(page.root)\n      .toEqualHtml(`     <z-file-upload accepted-format=\".pdf, .doc, .tiff, .png, .jpg, .jpeg\" description=\"Vuoi allegare un file per chiarire meglio la tua richiesta?\" file-max-size=\"50\" main-title=\"Allega un file\" type=\"dragdrop\">\n       <mock:shadow-root>\n       <div class=\"container dragdrop\">\n         <span id=\"title\">\n           Allega un file\n         </span>\n         <section class=\"files-container hidden\">\n          <span class=\"heading-4-sb\">\n            File appena caricati\n          </span>\n          <div class=\"files-wrapper\">\n            <slot name=\"files\"></slot>\n          </div>\n          <z-divider size=\"medium\"></z-divider>\n         </section>\n         <z-dragdrop-area drag-and-drop-label=\"Rilascia i file in questa area per allegarli.\">\n           <div class=\"text-container\">\n             <span class=\"body-1\">\n               Vuoi allegare un file per chiarire meglio la tua richiesta?\n             </span>\n             <input accept=\".pdf, .doc, .tiff, .png, .jpg, .jpeg\" id=\"file-elem\" multiple=\"\" type=\"file\">\n             <span class=\"body-1 upload-link-text\">\n               <span class=\"body-1-sb upload-link\" tabindex=\"0\">\n                 Carica\n               </span>\n               o trascina dal tuo computer\n             </span>\n             <span class=\"body-3\">\n               Puoi allegare file nei formati PDF, DOC, TIFF, PNG, JPG, JPEG per un massimo di 50MB di peso.\n             </span>\n           </div>\n         </z-dragdrop-area>\n       </div>\n      </mock:shadow-root>\n      &gt;\n      </z-file-upload>`);\n  });\n\n  it(\"Test render ZFileUpload with custom label and not main-title\", async () => {\n    const page = await newSpecPage({\n      components: [ZFileUpload],\n      html: `<z-file-upload type=\"default\"\n                            variant=\"primary\"\n                            description=\"Vuoi allegare un file per chiarire meglio la tua richiesta?\"\n                            accepted-format=\".pdf, .doc, .tiff, .png, .jpg, .jpeg\"\n                            upload-btn-label=\"testo custom\"\n                            drag-and-drop-label=\"drag and drop custom label\"\n                            file-max-size=\"50\">>\n             </z-file-upload>`,\n    });\n    expect(page.root).toEqualHtml(`\n    <z-file-upload accepted-format=\".pdf, .doc, .tiff, .png, .jpg, .jpeg\" description=\"Vuoi allegare un file per chiarire meglio la tua richiesta?\" file-max-size=\"50\" upload-btn-label=\"testo custom\" drag-and-drop-label=\"drag and drop custom label\" type=\"default\" variant=\"primary\">\n      <mock:shadow-root>\n       <div class=\"container default\">\n         <span class=\"body-3-sb\">\n           Vuoi allegare un file per chiarire meglio la tua richiesta?\n         </span>\n         <span class=\"body-3\">\n           Puoi allegare file nei formati PDF, DOC, TIFF, PNG, JPG, JPEG per un massimo di 50MB di peso.\n         </span>\n         <section class=\"files-container hidden\">\n          <span class=\"heading-4-sb\">\n            File appena caricati\n          </span>\n          <div class=\"files-wrapper\">\n            <slot name=\"files\"></slot>\n          </div>\n          <z-divider size=\"medium\"></z-divider>\n         </section>\n         <input accept=\".pdf, .doc, .tiff, .png, .jpg, .jpeg\" id=\"file-elem\" multiple=\"\" type=\"file\">\n         <z-button icon=\"upload\" id=\"fileSelect\">\n           testo custom\n         </z-button>\n       </div>\n      </mock:shadow-root>\n      &gt;\n    </z-file-upload>`);\n  });\n});\n"]}