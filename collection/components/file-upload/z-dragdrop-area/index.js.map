{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/components/file-upload/z-dragdrop-area/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAE,CAAC,EAAE,KAAK,EAAgB,IAAI,EAAC,MAAM,eAAe,CAAC;AAOtE,MAAM,OAAO,aAAa;;;;IAShB,kBAAkB,CAAC,KAAe;QACxC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IAIO,uBAAuB;QAC7B,OAAO,CACL,WAAK,KAAK,EAAC,oBAAoB;YAC7B,WAAK,KAAK,EAAC,kBAAkB;gBAC3B,YAAM,KAAK,EAAC,WAAW,IAAE,IAAI,CAAC,gBAAgB,CAAQ,CAClD,CACF,CACP,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,OAAO,CACL,4DACE,QAAQ,EAAE,CAAC,EACX,GAAG,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC,EAC5C,KAAK,EAAC,UAAU,EAChB,UAAU,EAAE,CAAC,CAAC,EAAE,EAAE;gBAChB,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACnD,CAAC,EACD,WAAW,EAAE,GAAG,EAAE;gBAChB,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YACtD,CAAC,EACD,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE;gBACZ,CAAC,CAAC,cAAc,EAAE,CAAC;gBACnB,IAAI,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;oBAChC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;oBACpD,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBAChD,CAAC;YACH,CAAC;YAEA,IAAI,CAAC,uBAAuB,EAAE;YAC/B,8DAAQ,CACJ,CACP,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import {Component, h, Event, EventEmitter, Prop} from \"@stencil/core\";\n\n@Component({\n  tag: \"z-dragdrop-area\",\n  styleUrl: \"styles.css\",\n  shadow: true,\n})\nexport class ZDragdropArea {\n  /** drag & drop button label */\n  @Prop()\n  dragAndDropLabel: string;\n\n  /** Emitted when user drop one or more files */\n  @Event()\n  fileDropped: EventEmitter;\n\n  private fileDroppedHandler(files: FileList): void {\n    this.fileDropped.emit(files);\n  }\n\n  private dragDropContainer: HTMLDivElement;\n\n  private renderOnDragOverMessage(): HTMLDivElement {\n    return (\n      <div class=\"dragover-container\">\n        <div class=\"dragover-message\">\n          <span class=\"body-2-sb\">{this.dragAndDropLabel}</span>\n        </div>\n      </div>\n    );\n  }\n\n  render(): HTMLDivElement {\n    return (\n      <div\n        tabIndex={0}\n        ref={(val) => (this.dragDropContainer = val)}\n        class=\"dragdrop\"\n        onDragOver={(e) => {\n          e.preventDefault();\n          this.dragDropContainer.classList.add(\"dragover\");\n        }}\n        onDragLeave={() => {\n          this.dragDropContainer.classList.remove(\"dragover\");\n        }}\n        onDrop={(e) => {\n          e.preventDefault();\n          if (e.dataTransfer.files.length) {\n            this.dragDropContainer.classList.remove(\"dragover\");\n            this.fileDroppedHandler(e.dataTransfer.files);\n          }\n        }}\n      >\n        {this.renderOnDragOverMessage()}\n        <slot />\n      </div>\n    );\n  }\n}\n"]}