{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../../../../src/components/z-button-sort/index.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {newSpecPage} from \"@stencil/core/testing\";\n\nimport {ZButtonSort} from \"./index\";\n\ndescribe(\"Suite test ZButtonSort\", () => {\n  it(\"Test render ZButtonSort vuoto\", async () => {\n    const page = await newSpecPage({\n      components: [ZButtonSort],\n      html: `<z-button-sort></z-button-sort>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <z-button-sort>\n        <mock:shadow-root>\n          <button>\n            <span class=\"ellipsis\"></span>\n            <span class=\"counter\"></span>\n            <span class=\"sort\">A-Z</span>\n            <z-icon name=\"caret-up-down\" width=\"16\" height=\"16\" />\n          </button>\n        </mock:shadow-root>\n      </z-button-sort>\n    `);\n  });\n\n  it(\"Test render ZButtonSort con prop\", async () => {\n    const page = await newSpecPage({\n      components: [ZButtonSort],\n      html: `<z-button-sort label=\"label\" counter=\"5\"></z-button-sort>`,\n    });\n    expect(page.root).toEqualHtml(`\n      <z-button-sort label=\"label\" counter=\"5\">\n        <mock:shadow-root>\n          <button>\n            <span class=\"ellipsis\">label</span>\n            <span class=\"counter\"> (5)</span>\n            <span class=\"sort\">A-Z</span>\n            <z-icon name=\"caret-up-down\" width=\"16\" height=\"16\" />\n          </button>\n        </mock:shadow-root>\n      </z-button-sort>\n    `);\n  });\n\n  it(\"Test render ZButtonSort selected\", async () => {\n    const page = await newSpecPage({\n      components: [ZButtonSort],\n      html: `<z-button-sort></z-button-sort>`,\n    });\n    page.rootInstance.isselected = true;\n    await page.waitForChanges();\n    expect(page.root).toEqualHtml(`\n      <z-button-sort>\n        <mock:shadow-root>\n          <button class=\"selected\">\n            <span class=\"ellipsis\"></span>\n            <span class=\"counter\"></span>\n            <span class=\"sort\">A-Z</span>\n            <z-icon name=\"caret-up-down\" width=\"16\" height=\"16\" />\n          </button>\n        </mock:shadow-root>\n      </z-button-sort>\n    `);\n  });\n\n  it(\"Test render ZButtonSort sort\", async () => {\n    const page = await newSpecPage({\n      components: [ZButtonSort],\n      html: `<z-button-sort></z-button-sort>`,\n    });\n    page.rootInstance.isselected = true;\n    page.rootInstance.sortasc = false;\n    await page.waitForChanges();\n    expect(page.root).toEqualHtml(`\n      <z-button-sort>\n        <mock:shadow-root>\n          <button class=\"selected\">\n            <span class=\"ellipsis\"></span>\n            <span class=\"counter\"></span>\n            <span class=\"sort\">Z-A</span>\n            <z-icon name=\"caret-up-down\" width=\"16\" height=\"16\" />\n          </button>\n        </mock:shadow-root>\n      </z-button-sort>\n    `);\n  });\n\n  it(\"Test click ZButtonSort\", async () => {\n    const page = await newSpecPage({\n      components: [ZButtonSort],\n      html: `<z-button-sort></z-button-sort>`,\n    });\n\n    const button = page.root.shadowRoot.querySelector(\"button\");\n    expect(page.rootInstance.isselected).toEqual(false);\n    expect(page.rootInstance.sortasc).toEqual(true);\n    button.click();\n    await page.waitForChanges();\n    expect(page.rootInstance.isselected).toEqual(true);\n    expect(page.rootInstance.sortasc).toEqual(true);\n    button.click();\n    await page.waitForChanges();\n    expect(page.rootInstance.isselected).toEqual(true);\n    expect(page.rootInstance.sortasc).toEqual(false);\n  });\n\n  it(\"Test ZButtonSort has ellipsis\", async () => {\n    const page = await newSpecPage({\n      components: [ZButtonSort],\n      html: `<z-button-sort label=\"Testo molto lungo lungo lungo lunghissimo lunghissimo lunghissimo ancora di pi첫\" counter=\"5\"></z-button-sort>`,\n    });\n    page.rootInstance.allowTooltip = true;\n    await page.waitForChanges();\n    expect(page.root).toEqualHtml(`\n      <z-button-sort label=\"Testo molto lungo lungo lungo lunghissimo lunghissimo lunghissimo ancora di pi첫\" counter=\"5\">\n        <mock:shadow-root>\n          <button title=\"Testo molto lungo lungo lungo lunghissimo lunghissimo lunghissimo ancora di pi첫\">\n            <span class=\"ellipsis\">Testo molto lungo lungo lungo lunghissimo lunghissimo lunghissimo ancora di pi첫</span>\n            <span class=\"counter\"> (5)</span>\n            <span class=\"sort\">A-Z</span>\n            <z-icon name=\"caret-up-down\" width=\"16\" height=\"16\" />\n          </button>\n        </mock:shadow-root>\n      </z-button-sort>\n    `);\n  });\n\n  it(\"Test ZButtonSort has not ellipsis\", async () => {\n    const page = await newSpecPage({\n      components: [ZButtonSort],\n      html: `<z-button-sort label=\"Testo corto\" counter=\"5\"></z-button-sort>`,\n    });\n    page.rootInstance.allowTooltip = false;\n    await page.waitForChanges();\n    expect(page.root).toEqualHtml(`\n      <z-button-sort label=\"Testo corto\" counter=\"5\">\n        <mock:shadow-root>\n          <button title=\"\">\n            <span class=\"ellipsis\">Testo corto</span>\n            <span class=\"counter\"> (5)</span>\n            <span class=\"sort\">A-Z</span>\n            <z-icon name=\"caret-up-down\" width=\"16\" height=\"16\" />\n          </button>\n        </mock:shadow-root>\n      </z-button-sort>\n    `);\n  });\n});\n"]}