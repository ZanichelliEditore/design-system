{"version":3,"file":"test.e2e.js","sourceRoot":"","sources":["../../../../src/components/z-logo/test.e2e.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,UAAU,EAAC,MAAM,uBAAuB,CAAC;AAEjD,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;IACnC,EAAE,CAAC,4BAA4B,EAAE,KAAK,IAAI,EAAE;QAC1C,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC;QAC3C,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACrC,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC1B,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC;IACrC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+BAA+B,EAAE,KAAK,IAAI,EAAE;QAC7C,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC;QAC3C,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,GAAQ,EAAE,EAAE;YACtC,GAAG,CAAC,IAAI,GAAG,2BAA2B,CAAC;QACzC,CAAC,CAAC,CAAC;QACH,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC3C,MAAM,CAAC,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;IACpE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;QACrD,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;QAChC,MAAM,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC;QAC3C,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,GAAQ,EAAE,EAAE;YACtC,GAAG,CAAC,IAAI,GAAG,2BAA2B,CAAC;YACvC,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;QACH,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC;QAC5B,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC3C,MAAM,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {newE2EPage} from \"@stencil/core/testing\";\n\ndescribe(\"z-logo test end2end\", () => {\n  it(\"Test that component exists\", async () => {\n    const page = await newE2EPage();\n    await page.setContent(`<z-logo></z-logo>`);\n    const el = await page.find(\"z-logo\");\n    expect(el).not.toBeNull();\n    expect(el.shadowRoot).not.toBeNull;\n  });\n\n  it('Test that \"a href\" is created', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`<z-logo></z-logo>`);\n    await page.$eval(\"z-logo\", (elm: any) => {\n      elm.link = \"https://www.zanichelli.it\";\n    });\n    await page.waitForChanges();\n    const el = await page.find(\"z-logo >>> a\");\n    expect(el.getAttribute(\"href\")).toBe(\"https://www.zanichelli.it\");\n  });\n\n  it('Test that \"a target blank\" is created', async () => {\n    const page = await newE2EPage();\n    await page.setContent(`<z-logo></z-logo>`);\n    await page.$eval(\"z-logo\", (elm: any) => {\n      elm.link = \"https://www.zanichelli.it\";\n      elm.targetBlank = true;\n    });\n    await page.waitForChanges();\n    const el = await page.find(\"z-logo >>> a\");\n    expect(el.getAttribute(\"target\")).toBe(\"_blank\");\n  });\n});\n"]}