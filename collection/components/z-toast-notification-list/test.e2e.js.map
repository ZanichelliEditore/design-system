{"version":3,"file":"test.e2e.js","sourceRoot":"","sources":["../../../../src/components/z-toast-notification-list/test.e2e.ts"],"names":[],"mappings":"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","sourcesContent":["import {newE2EPage} from \"@stencil/core/testing\";\n\ndescribe(\"z-toast-notification-list test end2end\", () => {\n  it(\"Test correct exit animation on close button click\", async () => {\n    const page = await newE2EPage();\n\n    await page.setContent(`\n      <z-toast-notification-list position=\"bottom-centre\">\n        <z-toast-notification slot=\"toasts\" type=\"dark\" heading=\"Notification\" message=\"Senza pulsante.\"\n          transition=\"slide-in-up\" draggablepercentage=\"50\" closebutton>\n        </z-toast-notification>\n      </z-toast-notification-list>\n    `);\n    const notificationlist = await page.find(\"z-toast-notification-list z-toast-notification\");\n    const closebutton = await page.find(\"z-toast-notification-list z-toast-notification >>> div > z-icon\");\n\n    await closebutton.click();\n    await page.waitForChanges();\n\n    expect(notificationlist).toHaveClass(\"slide-out-down\");\n  });\n\n  it(\"Test event on close button click \", async () => {\n    const page = await newE2EPage();\n\n    await page.setContent(`\n    <z-toast-notification-list position=\"bottom-centre\">\n      <z-toast-notification slot=\"toasts\" type=\"dark\" heading=\"Notification\" message=\"Senza pulsante.\"\n        transition=\"slide-in-up\" draggablepercentage=\"50\" closebutton>\n      </z-toast-notification>\n    </z-toast-notification-list>`);\n\n    const notification = await page.find(\"z-toast-notification-list z-toast-notification\");\n    expect(notification).not.toBeNull();\n\n    const closebutton = await page.find(\"z-toast-notification-list z-toast-notification >>> div > z-icon \");\n\n    await closebutton.click();\n\n    await page.waitForFunction(() => !document.querySelector(\"z-toast-notification\"));\n\n    const checkNotification = await page.find(\"z-toast-notification-list z-toast-notification\");\n    expect(checkNotification).toBeNull();\n  });\n\n  it(\"Test z-toast-notification autoclose\", async () => {\n    const page = await newE2EPage();\n\n    await page.setContent(`\n    <z-toast-notification-list position=\"bottom-centre\">\n      <z-toast-notification slot=\"toasts\" type=\"dark\" heading=\"Notification\" message=\"Senza pulsante.\"\n        transition=\"slide-in-up\" draggablepercentage=\"50\" closebutton autoclose=\"1000\">\n      </z-toast-notification>\n    </z-toast-notification-list>`);\n\n    const notification = await page.find(\"z-toast-notification-list z-toast-notification\");\n    expect(notification).not.toBeNull();\n\n    await page.waitForFunction(() => !document.querySelector(\"z-toast-notification\"));\n\n    const checkNotification = await page.find(\"z-toast-notification-list z-toast-notification\");\n    expect(checkNotification).toBeNull();\n  });\n\n  it(\"Test z-toast-notification drag\", async () => {\n    const page = await newE2EPage();\n\n    await page.setContent(`\n    <z-toast-notification-list position=\"bottom-centre\">\n      <z-toast-notification slot=\"toasts\" type=\"dark\" heading=\"Notification\" message=\"Senza pulsante.\"\n        transition=\"slide-in-up\" draggablepercentage=\"50\" closebutton autoclose=\"1000\">\n      </z-toast-notification>\n    </z-toast-notification-list>`);\n\n    const notification = await page.find(\"z-toast-notification-list z-toast-notification\");\n    expect(notification).not.toBeNull();\n\n    const example = await page.$(\"z-toast-notification\");\n    const bounding_box = await example.boundingBox();\n    await page.mouse.move(bounding_box.x + bounding_box.width / 2, bounding_box.y + bounding_box.height / 2);\n    await page.mouse.down();\n    await page.mouse.move(bounding_box.width / 2, 0);\n    await page.mouse.up();\n\n    await page.waitForFunction(() => !document.querySelector(\"z-toast-notification\"));\n\n    const checkNotification = await page.find(\"z-toast-notification-list z-toast-notification\");\n    expect(checkNotification).toBeNull();\n  });\n});\n"]}