{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../../../../src/components/buttons/z-toggle-button/index.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {newSpecPage} from \"@stencil/core/testing\";\n\nimport {ZToggleButton} from \"./index\";\n\ndescribe(\"Suite test ZToggleButton\", () => {\n  it(\"Test render ZToggleButton vuoto\", async () => {\n    const page = await newSpecPage({\n      components: [ZToggleButton],\n      html: `<z-toggle-button></z-toggle-button>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-toggle-button>\n        <mock:shadow-root>\n          <button aria-expanded=\"false\" tabindex=\"0\" aria-label=\"\">\n            <z-icon height=\"16\" name=\"chevron-up\" width=\"16\"></z-icon>\n          </button>\n        </mock:shadow-root>\n      </z-toggle-button>\n    `);\n  });\n\n  it(\"Test render ZToggleButton con label\", async () => {\n    const page = await newSpecPage({\n      components: [ZToggleButton],\n      html: `<z-toggle-button label=\"label\"></z-toggle-button>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-toggle-button label=\"label\">\n        <mock:shadow-root>\n          <button aria-expanded=\"false\" tabindex=\"0\" aria-label=\"\">\n            <z-icon height=\"16\" name=\"chevron-up\" width=\"16\"></z-icon>\n            label\n          </button>\n        </mock:shadow-root>\n      </z-toggle-button>\n    `);\n  });\n\n  it(\"Test render ZToggleButton disabled\", async () => {\n    const page = await newSpecPage({\n      components: [ZToggleButton],\n      html: `<z-toggle-button label=\"label\" isdisabled=\"true\"></z-toggle-button>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-toggle-button label=\"label\" isdisabled=\"true\">\n        <mock:shadow-root>\n          <button aria-expanded=\"false\" disabled tabindex=\"0\" aria-label=\"\">\n            <z-icon height=\"16\" name=\"chevron-up\" width=\"16\"></z-icon>\n            label\n          </button>\n        </mock:shadow-root>\n      </z-toggle-button>\n    `);\n  });\n\n  it(\"Test render ZToggleButton avoidclick\", async () => {\n    const page = await newSpecPage({\n      components: [ZToggleButton],\n      html: `<z-toggle-button label=\"label\" avoidclick=\"true\"></z-toggle-button>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-toggle-button avoidclick=\"true\" label=\"label\">\n        <mock:shadow-root>\n          <button aria-expanded=\"false\" class=\"avoid-clicks\" tabindex=\"-1\" aria-label=\"\">\n            <z-icon height=\"16\" name=\"chevron-up\" width=\"16\"></z-icon>\n            label\n          </button>\n        </mock:shadow-root>\n      </z-toggle-button>\n    `);\n  });\n\n  it(\"Test render ZToggleButton opened\", async () => {\n    const page = await newSpecPage({\n      components: [ZToggleButton],\n      html: `<z-toggle-button label=\"label\" opened=\"true\"></z-toggle-button>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-toggle-button opened=\"true\" label=\"label\">\n        <mock:shadow-root>\n          <button aria-expanded=\"true\" class=\"isopen\" tabindex=\"0\" aria-label=\"\">\n            <z-icon height=\"16\" name=\"chevron-down\" width=\"16\"></z-icon>\n            label\n          </button>\n        </mock:shadow-root>\n      </z-toggle-button>\n    `);\n  });\n\n  it(\"Test click ZToggleButton\", async () => {\n    const page = await newSpecPage({\n      components: [ZToggleButton],\n      html: `<z-toggle-button></z-toggle-button>`,\n    });\n\n    const button = page.root.shadowRoot.querySelector(\"button\");\n    expect(page.rootInstance.opened).toEqual(false);\n    button.click();\n    await page.waitForChanges();\n    expect(page.rootInstance.opened).toEqual(true);\n    button.click();\n    await page.waitForChanges();\n    expect(page.rootInstance.opened).toEqual(false);\n  });\n\n  it(\"Test click ZToggleButton disabled\", async () => {\n    const page = await newSpecPage({\n      components: [ZToggleButton],\n      html: `<z-toggle-button isdisabled=\"true\"></z-toggle-button>`,\n    });\n\n    const button = page.root.shadowRoot.querySelector(\"button\");\n    expect(page.rootInstance.opened).toEqual(false);\n    button.click();\n    await page.waitForChanges();\n    expect(page.rootInstance.opened).toEqual(false);\n  });\n\n  it(\"Test render ZToggleButton con arialabel\", async () => {\n    const page = await newSpecPage({\n      components: [ZToggleButton],\n      html: `<z-toggle-button aria-label=\"aria label\"></z-toggle-button>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-toggle-button aria-label=\"aria label\">\n        <mock:shadow-root>\n          <button aria-expanded=\"false\" aria-label=\"aria label\" tabindex=\"0\">\n            <z-icon height=\"16\" name=\"chevron-up\" width=\"16\"></z-icon>\n          </button>\n        </mock:shadow-root>\n      </z-toggle-button>\n    `);\n  });\n});\n"]}