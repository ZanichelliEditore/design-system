{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../../../../src/components/buttons/z-chip/index.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,WAAW,EAAC,MAAM,uBAAuB,CAAC;AAClD,OAAO,EAAC,KAAK,EAAC,MAAM,SAAS,CAAC;AAE9B,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAChC,EAAE,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;QACvC,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,KAAK,CAAC;YACnB,IAAI,EAAE,kCAAkC;SACzC,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;KAI7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,+BAA+B,EAAE,KAAK,IAAI,EAAE;QAC7C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,KAAK,CAAC;YACnB,IAAI,EAAE,qCAAqC;SAC5C,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;KAI7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC3C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,KAAK,CAAC;YACnB,IAAI,EAAE,iDAAiD;SACxD,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;KAO7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;QACvD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,KAAK,CAAC;YACnB,IAAI,EAAE,kFAAkF;SACzF,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;KAS7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;QACjE,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,KAAK,CAAC;YACnB,IAAI,EAAE,qFAAqF;SAC5F,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;KAU7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2DAA2D,EAAE,KAAK,IAAI,EAAE;QACzE,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,KAAK,CAAC;YACnB,IAAI,EAAE,8FAA8F;SACrG,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;KAU7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6DAA6D,EAAE,KAAK,IAAI,EAAE;QAC3E,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,KAAK,CAAC;YACnB,IAAI,EAAE,mFAAmF;SAC1F,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;KAU7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {newSpecPage} from \"@stencil/core/testing\";\nimport {ZChip} from \"./index\";\n\ndescribe(\"Suite test ZChip\", () => {\n  it(\"Test render ZChip empty\", async () => {\n    const page = await newSpecPage({\n      components: [ZChip],\n      html: `<z-chip type=\"default\"></z-chip>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-chip type=\"default\">\n        <div class=\"default z-chip-container\"></div>\n      </z-chip>\n    `);\n  });\n\n  it(\"Test render ZChip type medium\", async () => {\n    const page = await newSpecPage({\n      components: [ZChip],\n      html: `<z-chip type=\"medium\">text</z-chip>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-chip type=\"medium\">\n        <div class=\"medium z-chip-container\">text</div>\n      </z-chip>\n    `);\n  });\n\n  it(\"Test render ZChip with icon\", async () => {\n    const page = await newSpecPage({\n      components: [ZChip],\n      html: `<z-chip icon=\"pdf\" type=\"default\">text</z-chip>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-chip icon=\"pdf\" type=\"default\">\n        <div class=\"default z-chip-container\">\n          <z-icon name=\"pdf\"></z-icon>\n          text\n        </div>\n      </z-chip>\n    `);\n  });\n\n  it(\"Test render ZChip with interactive-icon\", async () => {\n    const page = await newSpecPage({\n      components: [ZChip],\n      html: `<z-chip icon=\"\" interactive-icon=\"multiply-circled\" type=\"default\">text</z-chip>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-chip icon=\"\" interactive-icon=\"multiply-circled\" type=\"default\">\n        <div class=\"default z-chip-container z-chip-interactive\">\n          text\n          <button aria-label=\"\" type=\"button\">\n            <z-icon class=\"interactive-icon\" name=\"multiply-circled\"></z-icon>\n          </button\n        </div>\n      </z-chip>\n    `);\n  });\n\n  it(\"Test render ZChip with interactive-icon and icon \", async () => {\n    const page = await newSpecPage({\n      components: [ZChip],\n      html: `<z-chip icon=\"pdf\" interactive-icon=\"multiply-circled\" type=\"default\">text</z-chip>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-chip icon=\"pdf\" interactive-icon=\"multiply-circled\" type=\"default\">\n        <div class=\"default z-chip-container z-chip-interactive\">\n          <z-icon name=\"pdf\"></z-icon>\n          text\n          <button aria-label=\"\" type=\"button\">\n            <z-icon class=\"interactive-icon\" name=\"multiply-circled\"></z-icon>\n          </button\n        </div>\n      </z-chip>\n    `);\n  });\n\n  it(\"Test render ZChip with interactive-icon and icon disabled\", async () => {\n    const page = await newSpecPage({\n      components: [ZChip],\n      html: `<z-chip disabled icon=\"pdf\" interactive-icon=\"multiply-circled\" type=\"default\">text</z-chip>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-chip disabled=\"\" icon=\"pdf\" interactive-icon=\"multiply-circled\" type=\"default\">\n        <div aria-disabled=\"\" class=\"default z-chip-container z-chip-interactive\">\n            <z-icon name=\"pdf\"></z-icon>\n            text\n            <button aria-label=\"\" disabled=\"\" type=\"button\">\n              <z-icon class=\"interactive-icon\" name=\"multiply-circled\"></z-icon>\n            </button\n        </div>\n      </z-chip>\n    `);\n  });\n\n  it(\"Test render ZChip with interactive-icon and icon type small\", async () => {\n    const page = await newSpecPage({\n      components: [ZChip],\n      html: `<z-chip icon=\"pdf\" interactive-icon=\"multiply-circled\" type=\"small\">text</z-chip>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-chip icon=\"pdf\" interactive-icon=\"multiply-circled\" type=\"small\">\n        <div class=\"small z-chip-container z-chip-interactive\">\n          <z-icon name=\"pdf\"></z-icon>\n          text\n          <button aria-label=\"\" type=\"button\">\n          <z-icon class=\"interactive-icon\" name=\"multiply-circled\"></z-icon>\n          </button\n        </div>\n      </z-chip>\n    `);\n  });\n});\n"]}