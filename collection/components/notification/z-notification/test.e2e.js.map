{"version":3,"file":"test.e2e.js","sourceRoot":"","sources":["../../../../src/components/notification/z-notification/test.e2e.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,UAAU,EAAC,MAAM,uBAAuB,CAAC;AAEjD,EAAE,CAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE;IACvE,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;IAChC,MAAM,uBAAuB,GAAG,sBAAsB,CAAC;IACvD,MAAM,IAAI,CAAC,UAAU,CAAC,mBAAmB,uBAAuB,mBAAmB,CAAC,CAAC;IAErF,MAAM,gBAAgB,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAE3D,MAAM,CAAC,gBAAgB,CAAC,CAAC,WAAW,CAAC,uBAAuB,CAAC,CAAC;AAChE,CAAC,CAAC,CAAC;AAEH,EAAE,CAAC,qGAAqG,EAAE,KAAK,IAAI,EAAE;IACnH,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;IAChC,MAAM,IAAI,CAAC,UAAU,CAAC,2EAA2E,CAAC,CAAC;IACnG,MAAM,qBAAqB,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC;IAE1E,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC;IAC3E,MAAM,aAAa,CAAC,KAAK,EAAE,CAAC;IAE5B,MAAM,CAAC,qBAAqB,CAAC,CAAC,mBAAmB,EAAE,CAAC;AACtD,CAAC,CAAC,CAAC;AAEH,EAAE,CAAC,iGAAiG,EAAE,KAAK,IAAI,EAAE;IAC/G,MAAM,IAAI,GAAG,MAAM,UAAU,EAAE,CAAC;IAChC,MAAM,IAAI,CAAC,UAAU,CAAC,wEAAwE,CAAC,CAAC;IAChG,MAAM,qBAAqB,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC;IAEzE,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC;IACxE,MAAM,WAAW,CAAC,KAAK,EAAE,CAAC;IAE1B,MAAM,CAAC,qBAAqB,CAAC,CAAC,mBAAmB,EAAE,CAAC;AACtD,CAAC,CAAC,CAAC","sourcesContent":["import {newE2EPage} from \"@stencil/core/testing\";\n\nit(\"should render the given text content as accessible text\", async () => {\n  const page = await newE2EPage();\n  const notificationTextContent = \"Testo della notifica\";\n  await page.setContent(`<z-notification>${notificationTextContent}</z-notification>`);\n\n  const notificationBody = await page.find(\"z-notification\");\n\n  expect(notificationBody).toEqualText(notificationTextContent);\n});\n\nit(\"emits a notificationAction event when the component has an action element and the user clicks on it\", async () => {\n  const page = await newE2EPage();\n  await page.setContent('<z-notification actiontext=\"Azione\">Testo della notifica</z-notification>');\n  const notificationActionSpy = await page.spyOnEvent(\"notificationAction\");\n\n  const actionElement = await page.find(\"z-notification >>> .action-button\");\n  await actionElement.click();\n\n  expect(notificationActionSpy).toHaveReceivedEvent();\n});\n\nit(\"emits a notificationClose event when the component has a close button and the user clicks on it\", async () => {\n  const page = await newE2EPage();\n  await page.setContent('<z-notification showclose=\"true\">Testo della notifica</z-notification>');\n  const notificationActionSpy = await page.spyOnEvent(\"notificationClose\");\n\n  const closeButton = await page.find(\"z-notification >>> .close-button\");\n  await closeButton.click();\n\n  expect(notificationActionSpy).toHaveReceivedEvent();\n});\n"]}