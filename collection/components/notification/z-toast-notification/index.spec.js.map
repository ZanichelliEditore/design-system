{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../../../../src/components/notification/z-toast-notification/index.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,WAAW,EAAC,MAAM,uBAAuB,CAAC;AAClD,OAAO,EAAC,kBAAkB,EAAC,MAAM,SAAS,CAAC;AAE3C,QAAQ,CAAC,+BAA+B,EAAE,GAAG,EAAE;IAC7C,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;QACpD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,kBAAkB,CAAC;YAChC,IAAI,EAAE,kEAAkE;SACzE,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;KAiB7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,wDAAwD,EAAE,KAAK,IAAI,EAAE;QACtE,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,kBAAkB,CAAC;YAChC,IAAI,EAAE;;;;;;;+BAOmB;SAC1B,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;KAqB7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;QAC/D,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,kBAAkB,CAAC;YAChC,IAAI,EAAE;;;;;;;;;8BASkB;SACzB,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;KAwB7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {newSpecPage} from \"@stencil/core/testing\";\nimport {ZToastNotification} from \"./index\";\n\ndescribe(\"Suite test ZToastNotification\", () => {\n  it(\"Test render ZToastNotification vuoto\", async () => {\n    const page = await newSpecPage({\n      components: [ZToastNotification],\n      html: `<z-toast-notification closebutton=\"true\"></z-toast-notification>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n    <z-toast-notification closebutton=\"true\" class=\"slide-in-down\" style=\"--percentuale: 0%; undefined: rgba(0,0,0,0);\">\n      <mock:shadow-root>\n        <div id=\"external-container\" tabindex=\"0\">\n          <div id=\"text\">\n            <span class=\"title\"></span>\n            <span class=\"message\"></span>\n          </div>\n          <div id=\"button\">\n            <slot name=\"button\"></slot>\n          </div>\n          <div id=\"icon\">\n            <z-icon height=\"15\" name=\"multiply-circled\" tabindex=\"0\" width=\"15\"></z-icon>\n          </div>\n        </div>\n      </mock:shadow-root>\n    </z-toast-notification>\n    `);\n  });\n\n  it(\"Test render ZToastNotification con props e closebutton\", async () => {\n    const page = await newSpecPage({\n      components: [ZToastNotification],\n      html: `<z-toast-notification\n        heading=\"Titolo\"\n        type=\"dark\"\n        message=\"descrizione della notifica\"\n        closebutton=\"true\"\n        transition=\"slide-in-down\"\n        draggablepercentage=\"10\"\n      ></z-toast-notification>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n    <z-toast-notification class=\"slide-in-down\" closebutton=\"true\" draggablepercentage=\"10\" heading=\"Titolo\" message=\"descrizione della notifica\" transition=\"slide-in-down\" type=\"dark\" style=\"--percentuale: 0%; undefined: rgba(0,0,0,0);\">\n      <mock:shadow-root>\n        <div class=\"dark\" id=\"external-container\" tabindex=\"0\">\n          <div id=\"text\">\n            <span class=\"title\">\n              Titolo\n            </span>\n            <span class=\"message\">\n              descrizione della notifica\n            </span>\n          </div>\n          <div id=\"button\">\n            <slot name=\"button\"></slot>\n          </div>\n          <div id=\"icon\">\n            <z-icon height=\"15\" name=\"multiply-circled\" tabindex=\"0\" width=\"15\"></z-icon>\n          </div>\n        </div>\n      </mock:shadow-root>\n    </z-toast-notification>\n    `);\n  });\n\n  it(\"Test render ZToastNotification con props e slot\", async () => {\n    const page = await newSpecPage({\n      components: [ZToastNotification],\n      html: `<z-toast-notification\n        heading=\"Titolo\"\n        type=\"dark\"\n        message=\"descrizione della notifica\"\n        closebutton=\"true\"\n        transition=\"slide-in-down\"\n        draggablepercentage=\"10\"\n      >\n        <z-button slot=\"button\">button</z-button>\n      </z-toast-notification>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n    <z-toast-notification class=\"slide-in-down\" closebutton=\"true\" draggablepercentage=\"10\" heading=\"Titolo\" message=\"descrizione della notifica\" transition=\"slide-in-down\" type=\"dark\" style=\"--percentuale: 0%; undefined: rgba(0,0,0,0);\">\n      <mock:shadow-root>\n        <div class=\"dark\" id=\"external-container\" tabindex=\"0\">\n          <div id=\"text\">\n            <span class=\"title\">\n              Titolo\n            </span>\n            <span class=\"message\">\n              descrizione della notifica\n            </span>\n          </div>\n          <div id=\"button\">\n            <slot name=\"button\"></slot>\n          </div>\n          <div id=\"icon\">\n            <z-icon height=\"15\" name=\"multiply-circled\" tabindex=\"0\" width=\"15\"></z-icon>\n          </div>\n        </div>\n      </mock:shadow-root>\n      <z-button slot=\"button\">\n        button\n      </z-button>\n    </z-toast-notification>\n    `);\n  });\n});\n"]}