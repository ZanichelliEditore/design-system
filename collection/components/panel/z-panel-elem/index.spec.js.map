{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../../../../src/components/panel/z-panel-elem/index.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,WAAW,EAAC,MAAM,uBAAuB,CAAC;AAElD,OAAO,EAAC,UAAU,EAAC,MAAM,SAAS,CAAC;AAEnC,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;IACrC,EAAE,CAAC,8BAA8B,EAAE,KAAK,IAAI,EAAE;QAC5C,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,UAAU,CAAC;YACxB,IAAI,EAAE,+BAA+B;SACtC,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;KAU7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;QACjE,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,UAAU,CAAC;YACxB,IAAI,EAAE,6EAA6E;SACpF,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;KAW7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;QAClD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,UAAU,CAAC;YACxB,IAAI,EAAE,8FAA8F;SACrG,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;KAW7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;QACjE,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,UAAU,CAAC;YACxB,IAAI,EAAE,yGAAyG;SAChH,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;KAW7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE,KAAK,IAAI,EAAE;QACxD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,UAAU,CAAC;YACxB,IAAI,EAAE,6GAA6G;SACpH,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;KAW7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;QACpD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,UAAU,CAAC;YACxB,IAAI,EAAE,iHAAiH;SACxH,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;KAW7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;QAClD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,UAAU,CAAC;YACxB,IAAI,EAAE,wIAAwI;SAC/I,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;KAgB7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qDAAqD,EAAE,KAAK,IAAI,EAAE;QACnE,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,UAAU,CAAC;YACxB,IAAI,EAAE,uJAAuJ;SAC9J,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;KAgB7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;QAClD,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,UAAU,CAAC;YACxB,IAAI,EAAE,sIAAsI;SAC7I,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;KAgB7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qDAAqD,EAAE,KAAK,IAAI,EAAE;QACnE,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,UAAU,CAAC;YACxB,IAAI,EAAE,qJAAqJ;SAC5J,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;KAgB7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gDAAgD,EAAE,KAAK,IAAI,EAAE;QAC9D,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,UAAU,CAAC;YACxB,IAAI,EAAE,8KAA8K;SACrL,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;KAkB7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE;QACvE,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,UAAU,CAAC;YACxB,IAAI,EAAE,2QAA2Q;SAClR,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;;;;;KAkB7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;QACjE,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,UAAU,CAAC;YACxB,IAAI,EAAE,mJAAmJ;SAC1J,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;KAc7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;QACjE,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC;YAC7B,UAAU,EAAE,CAAC,UAAU,CAAC;YACxB,IAAI,EAAE,8JAA8J;SACrK,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;;;;;;;;;;;;;;KAc7B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {newSpecPage} from \"@stencil/core/testing\";\n\nimport {ZPanelElem} from \"./index\";\n\ndescribe(\"Suite test ZPanelElem\", () => {\n  it(\"Test render ZPanelElem vuoto\", async () => {\n    const page = await newSpecPage({\n      components: [ZPanelElem],\n      html: `<z-panel-elem></z-panel-elem>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-panel-elem>\n          <div class=\"panel-elem-container\">\n            <div class=\"panel-elem-link\">\n              <a class=\"z-link z-link-icon\" id=\"link_id\" target=\"_blank\">\n                <z-icon height=\"14\" width=\"14\"></z-icon>\n              </a>\n            </div>\n          </div>\n      </z-panel-elem>\n    `);\n  });\n\n  it(\"Test render ZPanelElem with only mandatory params\", async () => {\n    const page = await newSpecPage({\n      components: [ZPanelElem],\n      html: `<z-panel-elem linklabel=\"label\" url=\"http://www.google.it\" ></z-panel-elem>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-panel-elem linklabel=\"label\" url=\"http://www.google.it\">\n          <div class=\"panel-elem-container\">\n          <div class=\"panel-elem-link\">\n            <a class=\"z-link z-link-icon\" href=\"http://www.google.it\" id=\"link_id\" target=\"_blank\">\n              <z-icon height=\"14\" width=\"14\"></z-icon>\n              label\n            </a>\n          </div>\n        </div>\n      </z-panel-elem>\n    `);\n  });\n\n  it(\"Test render ZPanelElem with elemid\", async () => {\n    const page = await newSpecPage({\n      components: [ZPanelElem],\n      html: `<z-panel-elem elemid=\"example\" linklabel=\"label\" url=\"http://www.google.it\" ></z-panel-elem>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-panel-elem elemid=\"example\" linklabel=\"label\" url=\"http://www.google.it\">\n          <div class=\"panel-elem-container\">\n          <div class=\"panel-elem-link\">\n            <a class=\"z-link z-link-icon\" id=\"examplelink_id\" href=\"http://www.google.it\" id=\"link_id\" target=\"_blank\">\n              <z-icon height=\"14\" width=\"14\"></z-icon>\n              label\n            </a>\n          </div>\n        </div>\n      </z-panel-elem>\n    `);\n  });\n\n  it(\"Test render ZPanelElem with elemid and isdisabled\", async () => {\n    const page = await newSpecPage({\n      components: [ZPanelElem],\n      html: `<z-panel-elem isdisabled elemid=\"example\" linklabel=\"label\" url=\"http://www.google.it\" ></z-panel-elem>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-panel-elem isdisabled elemid=\"example\" linklabel=\"label\" url=\"http://www.google.it\">\n          <div class=\"panel-elem-container\">\n            <div class=\"panel-elem-link\">\n              <a class=\"z-link z-link-disabled z-link-icon\" href=\"http://www.google.it\" id=\"examplelink_id\" target=\"_blank\">\n                <z-icon height=\"14\" width=\"14\"></z-icon>\n                label\n              </a>\n            </div>\n          </div>\n      </z-panel-elem>\n    `);\n  });\n\n  it(\"Test render ZPanelElem with target=_self\", async () => {\n    const page = await newSpecPage({\n      components: [ZPanelElem],\n      html: `<z-panel-elem target=\"_self\" elemid=\"example\" linklabel=\"label\" url=\"http://www.google.it\" ></z-panel-elem>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-panel-elem target=\"_self\" elemid=\"example\" linklabel=\"label\" url=\"http://www.google.it\">\n        <div class=\"panel-elem-container\">\n          <div class=\"panel-elem-link\">\n            <a class=\"z-link z-link-icon\" href=\"http://www.google.it\" id=\"examplelink_id\" target=\"_self\">\n              <z-icon height=\"14\" width=\"14\"></z-icon>\n              label\n            </a>\n          </div>\n        </div>\n      </z-panel-elem>\n    `);\n  });\n\n  it(\"Test render ZPanelElem with linkicon\", async () => {\n    const page = await newSpecPage({\n      components: [ZPanelElem],\n      html: `<z-panel-elem linkicon=\"example\" elemid=\"example\" linklabel=\"label\" url=\"http://www.google.it\" ></z-panel-elem>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-panel-elem linkicon=\"example\" elemid=\"example\" linklabel=\"label\" url=\"http://www.google.it\">\n        <div class=\"panel-elem-container\">\n          <div class=\"panel-elem-link\">\n            <a class=\"z-link z-link-icon\" href=\"http://www.google.it\" id=\"examplelink_id\" target=\"_blank\">\n              <z-icon height=\"14\" name=\"example\" width=\"14\"></z-icon>\n              label\n            </a>\n          </div>\n        </div>\n      </z-panel-elem>\n    `);\n  });\n\n  it(\"Test render ZPanelElem with imgurl\", async () => {\n    const page = await newSpecPage({\n      components: [ZPanelElem],\n      html: `<z-panel-elem imgurl=\"exampleImgUrl\" linkicon=\"example\" elemid=\"example\" linklabel=\"label\" url=\"http://www.google.it\" ></z-panel-elem>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-panel-elem imgurl=\"exampleImgUrl\" linkicon=\"example\" elemid=\"example\" linklabel=\"label\" url=\"http://www.google.it\">\n          <div class=\"panel-elem-container\">\n          <div aria-hidden=\"true\" class=\"panel-elem-icon\">\n            <a class=\"elem-icon\" href=\"http://www.google.it\" target=\"_blank\">\n              <img src=\"exampleImgUrl\" />\n            </a>\n          </div>\n          <div class=\"panel-elem-link\">\n            <a class=\"z-link z-link-icon\" href=\"http://www.google.it\" id=\"examplelink_id\" target=\"_blank\">\n              <z-icon height=\"14\" name=\"example\" width=\"14\"></z-icon>\n              label\n            </a>\n          </div>\n        </div>\n      </z-panel-elem>\n    `);\n  });\n\n  it(\"Test render ZPanelElem with imgurl and target=_self\", async () => {\n    const page = await newSpecPage({\n      components: [ZPanelElem],\n      html: `<z-panel-elem imgurl=\"exampleImgUrl\" target=\"_self\" linkicon=\"example\" elemid=\"example\" linklabel=\"label\" url=\"http://www.google.it\" ></z-panel-elem>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-panel-elem imgurl=\"exampleImgUrl\" target=\"_self\" linkicon=\"example\" elemid=\"example\" linklabel=\"label\" url=\"http://www.google.it\">\n          <div class=\"panel-elem-container\">\n          <div aria-hidden=\"true\" class=\"panel-elem-icon\">\n            <a class=\"elem-icon\" href=\"http://www.google.it\" target=\"_self\">\n              <img src=\"exampleImgUrl\" />\n            </a>\n          </div>\n          <div class=\"panel-elem-link\">\n            <a class=\"z-link z-link-icon\" href=\"http://www.google.it\" id=\"examplelink_id\" target=\"_self\">\n              <z-icon height=\"14\" name=\"example\" width=\"14\"></z-icon>\n              label\n            </a>\n          </div>\n        </div>\n      </z-panel-elem>\n    `);\n  });\n\n  it(\"Test render ZPanelElem with imgalt\", async () => {\n    const page = await newSpecPage({\n      components: [ZPanelElem],\n      html: `<z-panel-elem imgalt=\"exampleDesc\" linkicon=\"example\" elemid=\"example\" linklabel=\"label\" url=\"http://www.google.it\" ></z-panel-elem>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-panel-elem imgalt=\"exampleDesc\" linkicon=\"example\" elemid=\"example\" linklabel=\"label\" url=\"http://www.google.it\">\n          <div class=\"panel-elem-container\">\n          <div aria-hidden=\"true\" class=\"panel-elem-icon\">\n            <a class=\"elem-icon\" href=\"http://www.google.it\" target=\"_blank\">\n              <img alt=\"exampleDesc\" />\n            </a>\n          </div>\n          <div class=\"panel-elem-link\">\n            <a class=\"z-link z-link-icon\" href=\"http://www.google.it\" id=\"examplelink_id\" target=\"_blank\">\n              <z-icon height=\"14\" name=\"example\" width=\"14\"></z-icon>\n              label\n            </a>\n          </div>\n        </div>\n      </z-panel-elem>\n    `);\n  });\n\n  it(\"Test render ZPanelElem with imgalt and target=_self\", async () => {\n    const page = await newSpecPage({\n      components: [ZPanelElem],\n      html: `<z-panel-elem imgalt=\"exampleDesc\" target=\"_self\" linkicon=\"example\" elemid=\"example\" linklabel=\"label\" url=\"http://www.google.it\" ></z-panel-elem>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-panel-elem imgalt=\"exampleDesc\" target=\"_self\" linkicon=\"example\" elemid=\"example\" linklabel=\"label\" url=\"http://www.google.it\">\n          <div class=\"panel-elem-container\">\n          <div aria-hidden=\"true\" class=\"panel-elem-icon\">\n            <a class=\"elem-icon\" href=\"http://www.google.it\" target=\"_self\">\n              <img alt=\"exampleDesc\" />\n            </a>\n          </div>\n          <div class=\"panel-elem-link\">\n            <a class=\"z-link z-link-icon\" href=\"http://www.google.it\" id=\"examplelink_id\" target=\"_self\">\n              <z-icon height=\"14\" name=\"example\" width=\"14\"></z-icon>\n              label\n            </a>\n          </div>\n        </div>\n      </z-panel-elem>\n    `);\n  });\n\n  it(\"Test render ZPanelElem with icon and slot name\", async () => {\n    const page = await newSpecPage({\n      components: [ZPanelElem],\n      html: `<z-panel-elem descr-slot-name=\"slotname\" imgurl=\"exampleUrl\" target=\"_self\" linkicon=\"example\" elemid=\"example\" linklabel=\"label\" url=\"http://www.google.it\"></z-panel-elem>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-panel-elem descr-slot-name=\"slotname\" imgurl=\"exampleUrl\" target=\"_self\" linkicon=\"example\" elemid=\"example\" linklabel=\"label\" url=\"http://www.google.it\">\n          <div class=\"panel-elem-container\">\n          <div aria-hidden=\"true\" class=\"panel-elem-icon\">\n            <a class=\"elem-icon\" href=\"http://www.google.it\" target=\"_self\">\n              <img src=\"exampleUrl\" />\n            </a>\n          </div>\n          <div class=\"panel-elem-link\">\n            <a class=\"z-link z-link-icon\" href=\"http://www.google.it\" id=\"examplelink_id\" target=\"_self\">\n              <z-icon height=\"14\" name=\"example\" width=\"14\"></z-icon>\n              label\n            </a>\n          </div>\n          <div class=\"panel-elem-desc\">\n          </div>\n        </div>\n      </z-panel-elem>\n    `);\n  });\n\n  it(\"Test render ZPanelElem with icon and complete slot data\", async () => {\n    const page = await newSpecPage({\n      components: [ZPanelElem],\n      html: `<z-panel-elem descrSlotName=\"slotname\" imgurl=\"exampleUrl\" target=\"_self\" linkicon=\"example\" elemid=\"example\" linklabel=\"label\" url=\"http://www.google.it\" ><div class=\"panel-elem-desc\"> <span slot=\"slotname\">Full application description</span> </div></z-panel-elem>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-panel-elem descrslotname=\"slotname\" imgurl=\"exampleUrl\" target=\"_self\" linkicon=\"example\" elemid=\"example\" linklabel=\"label\" url=\"http://www.google.it\">\n        <div class=\"panel-elem-desc\">\n          <span slot=\"slotname\">Full application description</span>\n        </div>\n        <div class=\"panel-elem-container\">\n          <div aria-hidden=\"true\" class=\"panel-elem-icon\">\n            <a class=\"elem-icon\" href=\"http://www.google.it\" target=\"_self\">\n              <img src=\"exampleUrl\" />\n            </a>\n          </div>\n          <div class=\"panel-elem-link\">\n            <a class=\"z-link z-link-icon\" href=\"http://www.google.it\" id=\"examplelink_id\" target=\"_self\">\n              <z-icon height=\"14\" name=\"example\" width=\"14\"></z-icon>\n              label\n            </a>\n          </div>\n      </z-panel-elem>\n    `);\n  });\n\n  it(\"Test render ZPanelElem with imgurl and isdisabled\", async () => {\n    const page = await newSpecPage({\n      components: [ZPanelElem],\n      html: `<z-panel-elem isdisabled imgurl=\"exampleImgUrl\" linkicon=\"example\" elemid=\"example\" linklabel=\"label\" url=\"http://www.google.it\" ></z-panel-elem>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-panel-elem isdisabled imgurl=\"exampleImgUrl\" linkicon=\"example\" elemid=\"example\" linklabel=\"label\" url=\"http://www.google.it\">\n          <div class=\"panel-elem-container\">\n          <div aria-hidden=\"true\" class=\"panel-elem-icon\">\n              <img src=\"exampleImgUrl\" />\n          </div>\n          <div class=\"panel-elem-link\">\n            <a class=\"z-link z-link-icon z-link-disabled\" href=\"http://www.google.it\" id=\"examplelink_id\" target=\"_blank\">\n              <z-icon height=\"14\" name=\"example\" width=\"14\"></z-icon>\n              label\n            </a>\n          </div>\n        </div>\n      </z-panel-elem>\n    `);\n  });\n\n  it(\"Test render ZPanelElem with imgalt and isdisabled\", async () => {\n    const page = await newSpecPage({\n      components: [ZPanelElem],\n      html: `<z-panel-elem isdisabled imgalt=\"exampleAlt\" linkicon=\"example\" elemid=\"example\" linklabel=\"label\" url=\"http://www.google.it\" target=\"_self\"></z-panel-elem>`,\n    });\n\n    expect(page.root).toEqualHtml(`\n      <z-panel-elem isdisabled imgalt=\"exampleAlt\" linkicon=\"example\" elemid=\"example\" linklabel=\"label\" url=\"http://www.google.it\" target=\"_self\">\n          <div class=\"panel-elem-container\">\n          <div aria-hidden=\"true\" class=\"panel-elem-icon\">\n              <img alt=\"exampleAlt\" />\n          </div>\n          <div class=\"panel-elem-link\">\n          <a class=\"z-link z-link-icon z-link-disabled\" href=\"http://www.google.it\" id=\"examplelink_id\" target=\"_self\">\n            <z-icon height=\"14\" name=\"example\" width=\"14\"></z-icon>\n            label\n          </a>\n          </div>\n        </div>\n      </z-panel-elem>\n    `);\n  });\n});\n"]}