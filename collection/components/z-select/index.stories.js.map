{"version":3,"file":"index.stories.js","sourceRoot":"","sources":["../../../../src/components/z-select/index.stories.ts"],"names":[],"mappings":"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","sourcesContent":["import {Meta, StoryObj} from \"@storybook/web-components\";\nimport {html} from \"lit\";\nimport {type ZSelect} from \".\";\nimport {ControlSize, InputStatus, SelectItem} from \"../../beans\";\nimport \"./index\";\n\nconst StoryMeta = {\n  title: \"ZSelect\",\n  component: \"z-select\",\n  argTypes: {\n    status: {\n      control: {\n        type: \"select\",\n        labels: {\n          null: \"-\",\n        },\n      },\n      options: [null, ...Object.values(InputStatus)],\n    },\n    size: {\n      control: {\n        type: \"inline-radio\",\n      },\n      options: Object.values(ControlSize),\n    },\n  },\n  args: {\n    items: [\n      {\n        id: \"item_1\",\n        name: \"item_1\",\n        selected: false,\n      },\n      {\n        id: \"item_2\",\n        name: \"item_2\",\n        selected: true,\n      },\n      {\n        id: \"item_3\",\n        name: \"item_3\",\n        selected: false,\n        disabled: true,\n      },\n      {\n        id: \"item_4\",\n        name: \"item_4\",\n        selected: false,\n      },\n    ] as SelectItem[],\n    label: \"this is the label\",\n    ariaLabel: \"\",\n    placeholder: \"select placeholder\",\n    status: null,\n    message: \"helper text\",\n    size: ControlSize.BIG,\n    disabled: false,\n    readonly: false,\n    htmlid: \"\",\n    htmltitle: \"\",\n    autocomplete: false,\n    noresultslabel: \"Nessun risultato\",\n    hasGroupItems: false,\n    resetItem: \"\",\n    isfixed: false,\n  },\n} satisfies Meta<ZSelect>;\nexport default StoryMeta;\n\ntype Story = StoryObj<ZSelect>;\n\nexport const Default = {\n  render: (args) => html`\n    <z-select\n      items=${JSON.stringify(args.items)}\n      label=${args.label}\n      aria-label=${args.ariaLabel}\n      placeholder=${args.placeholder}\n      name=${args.name}\n      status=${args.status}\n      message=${args.message}\n      autocomplete=${args.autocomplete}\n      noresultslabel=${args.noresultslabel}\n      disabled=${args.disabled}\n      readonly=${args.readonly}\n      htmlid=${args.htmlid}\n      htmltitle=${args.htmltitle}\n      reset-item=${args.resetItem}\n      isfixed=${args.isfixed}\n      size=${args.size}\n    ></z-select>\n  `,\n} satisfies Story;\n\nexport const Groups = {\n  args: {\n    hasGroupItems: true,\n    items: [\n      {\n        id: \"item_1\",\n        name: \"item_1\",\n        selected: false,\n        category: \"Gruppo 1\",\n      },\n      {\n        id: \"item_2\",\n        name: \"item_2\",\n        selected: false,\n        category: \"Gruppo 1\",\n      },\n      {\n        id: \"item_3\",\n        name: \"item_3\",\n        selected: false,\n        category: \"Gruppo 2\",\n        disabled: true,\n      },\n      {\n        id: \"item_4\",\n        name: \"item_4\",\n        selected: false,\n        category: \"Gruppo 2\",\n      },\n      {\n        id: \"item_5\",\n        name: \"item_5\",\n        selected: false,\n        category: \"Gruppo 3\",\n        disabled: true,\n      },\n      {\n        id: \"item_6\",\n        name: \"item_6\",\n        selected: false,\n        category: \"Gruppo 3\",\n      },\n    ] as SelectItem[],\n  },\n  render: (args) => html`\n    <z-select\n      items=${JSON.stringify(args.items)}\n      label=${args.label}\n      aria-label=${args.ariaLabel}\n      placeholder=${args.placeholder}\n      name=${args.name}\n      status=${args.status}\n      message=${args.message}\n      autocomplete=${args.autocomplete}\n      noresultslabel=${args.noresultslabel}\n      disabled=${args.disabled}\n      readonly=${args.readonly}\n      htmlid=${args.htmlid}\n      htmltitle=${args.htmltitle}\n      .hasGroupItems=${args.hasGroupItems}\n      reset-item=${args.resetItem}\n      isfixed=${args.isfixed}\n      size=${args.size}\n    ></z-select>\n  `,\n} satisfies Story;\n\nexport const ZSelectWithIcons = {\n  args: {\n    hasGroupItems: true,\n    items: [\n      {\n        id: \"item_1\",\n        name: \"item_1\",\n        selected: false,\n        icon: \"teacher\",\n      },\n      {\n        id: \"item_2\",\n        name: \"item_2\",\n        selected: false,\n        icon: \"teacher\",\n      },\n      {\n        id: \"item_3\",\n        name: \"item_3\",\n        selected: false,\n        disabled: true,\n        icon: \"teacher\",\n      },\n    ] as SelectItem[],\n  },\n  render: (args) => html`\n    <z-select\n      items=${JSON.stringify(args.items)}\n      label=${args.label}\n      aria-label=${args.ariaLabel}\n      placeholder=${args.placeholder}\n      name=${args.name}\n      status=${args.status}\n      message=${args.message}\n      autocomplete=${args.autocomplete}\n      noresultslabel=${args.noresultslabel}\n      disabled=${args.disabled}\n      readonly=${args.readonly}\n      htmlid=${args.htmlid}\n      htmltitle=${args.htmltitle}\n      reset-item=${args.resetItem}\n      isfixed=${args.isfixed}\n      size=${args.size}\n    ></z-select>\n  `,\n} satisfies Story;\n"]}