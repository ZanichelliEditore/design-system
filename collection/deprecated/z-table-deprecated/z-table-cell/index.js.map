{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/deprecated/z-table-deprecated/z-table-cell/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAC,MAAM,eAAe,CAAC;AACvE,OAAO,EAAC,aAAa,EAAE,UAAU,EAAC,MAAM,gBAAgB,CAAC;AAEzD;;GAEG;AAMH,MAAM,OAAO,UAAU;;;uBAS2C,QAAQ;4BAGzD,KAAK;;IAEZ,UAAU;QAChB,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;IACzC,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACzC,CAAC;IAED,MAAM;QACJ,OAAO,CACL,EAAC,IAAI;YACF,IAAI,CAAC,UAAU,IAAI,CAClB,WACE,KAAK,EAAE;oBACL,kBAAkB,EAAE,IAAI;oBACxB,SAAS,EAAE,IAAI,CAAC,YAAY;iBAC7B;gBAED,WAAK,KAAK,EAAC,gBAAgB;oBACzB,gBACE,IAAI,EAAC,iBAAiB,EACtB,OAAO,EAAE,aAAa,CAAC,QAAQ,EAC/B,IAAI,EAAE,UAAU,CAAC,OAAO,EACxB,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,GAChC;oBACF,WACE,KAAK,EAAE;4BACL,2BAA2B,EAAE,IAAI;4BACjC,SAAS,EAAE,IAAI,CAAC,YAAY;yBAC7B;wBAED,YAAM,IAAI,EAAC,iBAAiB,GAAG,CAC3B,CACF,CACF,CACP;YACD,8DAAQ,CACH,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import {Component, Element, h, Host, Prop, State} from \"@stencil/core\";\nimport {ButtonVariant, ButtonSize} from \"../../../beans\";\n\n/**\n * @deprecated\n */\n@Component({\n  tag: \"z-table-cell\",\n  styleUrl: \"styles.css\",\n  shadow: true,\n})\nexport class ZTableCell {\n  @Element() host: HTMLZTableCellElement;\n\n  /** [Optional] Show contextual menu button */\n  @Prop()\n  showButton?: boolean;\n\n  /** Set padding size of cell, if special 0px padding will be set */\n  @Prop({reflect: true})\n  padding: \"x-small\" | \"small\" | \"medium\" | \"large\" | \"special\" = \"medium\";\n\n  @State()\n  isMenuOpened = false;\n\n  private handleMenu(): void {\n    this.isMenuOpened = !this.isMenuOpened;\n  }\n\n  componentWillRender(): void {\n    this.host.setAttribute(\"role\", \"cell\");\n  }\n\n  render(): HTMLZTableCellElement {\n    return (\n      <Host>\n        {this.showButton && (\n          <div\n            class={{\n              \"button-container\": true,\n              \"visible\": this.isMenuOpened,\n            }}\n          >\n            <div class=\"button-content\">\n              <z-button\n                icon=\"contextual-menu\"\n                variant={ButtonVariant.TERTIARY}\n                size={ButtonSize.X_SMALL}\n                onClick={() => this.handleMenu()}\n              />\n              <div\n                class={{\n                  \"contextual-menu-container\": true,\n                  \"visible\": this.isMenuOpened,\n                }}\n              >\n                <slot name=\"contextual-menu\" />\n              </div>\n            </div>\n          </div>\n        )}\n        <slot />\n      </Host>\n    );\n  }\n}\n"]}