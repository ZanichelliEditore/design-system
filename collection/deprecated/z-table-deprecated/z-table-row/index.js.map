{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/deprecated/z-table-deprecated/z-table-row/index.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,EAAe,MAAM,eAAe,CAAC;AACnF,OAAO,EAAC,qBAAqB,EAAC,MAAM,gBAAgB,CAAC;AAErD;;GAEG;AAOH,MAAM,OAAO,SAAS;;4BAGkB,qBAAqB,CAAC,IAAI;wBAGrD,KAAK;;IAMR,YAAY;QAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAC,CAAC,CAAC;IAC9C,CAAC;IAEO,YAAY;QAClB,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;QAE/B,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAEO,kBAAkB;QACxB,IAAI,IAAI,CAAC,YAAY,IAAI,qBAAqB,CAAC,UAAU,EAAE,CAAC;YAC1D,OAAO,CACL,oBAAc,KAAK,EAAE,EAAC,WAAW,EAAE,MAAM,EAAC;gBACxC,cAAQ,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,cAAc,GAAI,CACrD,CAChB,CAAC;QACJ,CAAC;QAED,OAAO,CACL,oBAAc,KAAK,EAAE,EAAC,WAAW,EAAE,MAAM,EAAC;YACxC,WAAK,KAAK,EAAC,oBAAoB,GAAG,CACrB,CAChB,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,OAAO,CACL,EAAC,IAAI,qDACH,IAAI,EAAC,KAAK,EACV,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE;gBACjB,MAAM,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;gBACxE,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,KAAK,qBAAqB,CAAC,UAAU,CAAC;gBAE5E,IAAI,YAAY,IAAI,CAAC,aAAa,EAAE,CAAC;oBACnC,IAAI,CAAC,YAAY,EAAE,CAAC;gBACtB,CAAC;YACH,CAAC;YAEA,IAAI,CAAC,YAAY,KAAK,qBAAqB,CAAC,IAAI,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC9E,8DAAQ,CACH,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import {Component, Prop, State, Host, h, Event, EventEmitter} from \"@stencil/core\";\nimport {ZTableRowExpandedType} from \"../../../beans\";\n\n/**\n * @deprecated\n */\n@Component({\n  tag: \"z-table-row\",\n  styleUrl: \"styles.css\",\n  shadow: false,\n  scoped: false,\n})\nexport class ZTableRow {\n  /** Table row expanded type */\n  @Prop({reflect: true})\n  expandedType: ZTableRowExpandedType = ZTableRowExpandedType.NONE;\n\n  @State()\n  expanded = false;\n\n  /** Row has been expanded */\n  @Event()\n  expand: EventEmitter;\n\n  private emitOnExpand(): void {\n    this.expand.emit({expanded: this.expanded});\n  }\n\n  private handleExpand(): void {\n    this.expanded = !this.expanded;\n\n    this.emitOnExpand();\n  }\n\n  private renderExpandButton(): HTMLZTableCellElement {\n    if (this.expandedType == ZTableRowExpandedType.EXPANDABLE) {\n      return (\n        <z-table-cell style={{borderRight: \"none\"}}>\n          <z-icon name={this.expanded ? \"minus-circled\" : \"plus-circled\"} />\n        </z-table-cell>\n      );\n    }\n\n    return (\n      <z-table-cell style={{borderRight: \"none\"}}>\n        <div class=\"z-icon-placeholder\" />\n      </z-table-cell>\n    );\n  }\n\n  render(): HTMLZTableRowElement {\n    return (\n      <Host\n        role=\"row\"\n        expanded={this.expanded}\n        onClick={(event) => {\n          const preventExpand = event.target.classList.contains(\"prevent-expand\");\n          const isExpandable = this.expandedType === ZTableRowExpandedType.EXPANDABLE;\n\n          if (isExpandable && !preventExpand) {\n            this.handleExpand();\n          }\n        }}\n      >\n        {this.expandedType !== ZTableRowExpandedType.NONE && this.renderExpandButton()}\n        <slot />\n      </Host>\n    );\n  }\n}\n"]}