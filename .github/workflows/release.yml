name: New version release process
on:
  workflow_dispatch:
    inputs:
      type:
        description: "Select the type of release"
        required: true
        default: "rc"
        type: choice
        options:
          - rc
          - latest
      rc_branch_name:
        description: "If you selected the rc option, provide the branch to switch to in order to start the rc process"
        required: false
        type: string
      rc_version_tag:
        description: "If you selected the rc option, provide a name that will be used as version tag"
        required: false
        type: string
      rc_version_name:
        description: "If you selected the rc option, provide a name that will be used as version name"
        required: false
        type: string
      version_type:
        description: "If you selected the latest option, select the version type"
        required: false
        type: choice
        default: "patch"
        options:
          - patch
          - minor
          - major
jobs:
  rc:
    if: ${{ inputs.type == 'rc' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Prepare package
        run: |
          git checkout ${{ inputs.rc_branch_name }}
          bash ./pre-release.sh
      - uses: actions/setup-node@v3
        with:
          node-version: "20.x"
          registry-url: "https://registry.npmjs.org"
          always-auth: true
      - name: Publish to npm
        run: yarn publish --tag ${{ inputs.rc_version_tag }} --new-version ${{ inputs.rc_version_name }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  latest:
    if: ${{ inputs.type == 'latest' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Prepare package
        run: |
          git pull
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR_ID}+${GITHUB_ACTOR}@users.noreply.github.com"
          yarn
          yarn build
          yarn test
      - name: Standard version
        run: |
          yarn release --release-as ${{ inputs.version_type }}
          git push --follow-tags origin master
      - uses: actions/setup-node@v3
        with:
          node-version: "20.x"
          registry-url: "https://registry.npmjs.org"
          always-auth: true
      - name: Publish to npm
        run: yarn publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
