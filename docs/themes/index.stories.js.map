{"version":3,"file":"index.stories.js","sourceRoot":"","sources":["../../../docs/themes/index.stories.ts"],"names":[],"mappings":"AACA,OAAO,EAAC,IAAI,EAAC,MAAM,KAAK,CAAC;AACzB,OAAO,4CAA4C,CAAC;AACpD,OAAO,EAAC,WAAW,EAAE,oBAAoB,EAAE,kBAAkB,EAAC,MAAM,iCAAiC,CAAC;AACtG,OAAO,qBAAqB,CAAC;AAE7B,eAAe;IACb,KAAK,EAAE,QAAQ;IACf,QAAQ,EAAE;QACR,KAAK,EAAE;YACL,OAAO,EAAE;gBACP,IAAI,EAAE,cAAc;aACrB;YACD,OAAO,EAAE,CAAC,eAAe,EAAE,oBAAoB,EAAE,YAAY,CAAC;SAC/D;KACF;IACD,IAAI,EAAE;QACJ,KAAK,EAAE,eAAe;KACvB;IACD,UAAU,EAAE;QACV,MAAM,EAAE,YAAY;KACrB;IACD,IAAI,EAAE,CAAC,WAAW,CAAC;CACpB,CAAC;AAEF,MAAM,CAAC,MAAM,MAAM,GAAG;IACpB,MAAM,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAA;sCACc,IAAI,CAAC,KAAK;;;;;;;;;;YAUpC,oBAAoB,EAAE;SACrB,IAAI,EAAE;SACN,GAAG,CACF,CAAC,KAAK,EAAE,EAAE;;QAAC,OAAA,IAAI,CAAA;;6CAEgB,KAAK;;;;qDAIG,KAAK;;;wBAGlC,MAAA,kBAAkB,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,mCACvC,gBAAgB,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,gBAAgB,CAAC,KAAK,CAAC;;;;eAIzE,CAAA;KAAA,CACF;;;;GAIV;CACiB,CAAC;AAErB,MAAM,QAAQ,GAAG,WAAW,EAAE,CAAC;AAE/B,MAAM,CAAC,MAAM,QAAQ,GAAG;IACtB,MAAM,EAAE,GAAG,EAAE,CAAC,IAAI,CAAA;;QAEZ,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CACzB,CAAC,WAAW,EAAE,EAAE,CACd,IAAI,CAAA;;;6DAG+C,QAAQ,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAClF,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CACtB;;0CAE2B,WAAW;;;gBAGrC,QAAQ,CAAC,WAAW,CAAC,CAAC,GAAG,CACzB,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAA;;+CAEgB,KAAK;;;;uDAIG,KAAK;;;0BAGlC,gBAAgB,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,gBAAgB,CAAC,KAAK,CAAC;;;;iBAI3E,CACF;;iBAEE,CACV;;GAEJ;CACiB,CAAC","sourcesContent":["import {StoryObj} from \"@storybook/web-components\";\nimport {html} from \"lit\";\nimport \"../../src/components/z-section-title/index\";\nimport {getPalettes, getThemesColorTokens, getThemeTokenValue} from \"../../src/utils/storybook-utils\";\nimport \"./index.stories.css\";\n\nexport default {\n  title: \"Colors\",\n  argTypes: {\n    theme: {\n      control: {\n        type: \"inline-radio\",\n      },\n      options: [\"theme-default\", \"theme-black-yellow\", \"theme-dark\"],\n    },\n  },\n  args: {\n    theme: \"theme-default\",\n  },\n  parameters: {\n    layout: \"fullscreen\",\n  },\n  tags: [\"!autodocs\"],\n};\n\nexport const Themes = {\n  render: (args) => html`\n    <div class=\"colors-story themes ${args.theme}\">\n      <p>\n        Currently available color themes: <strong>default</strong>, <strong>black-yellow</strong>, <strong>dark</strong>\n      </p>\n      <p>On this page you can see the value of the color tokens for each theme, by switching it from the controls.</p>\n      <div class=\"tokens-container\">\n        <z-section-title divider-position=\"after\">\n          <div slot=\"primary-title\">Color tokens</div>\n        </z-section-title>\n        <ul>\n          ${getThemesColorTokens()\n            .sort()\n            .map(\n              (token) => html`\n                <li>\n                  <span class=\"token-name\">${token}</span>\n                  <div class=\"color\">\n                    <div\n                      class=\"color-box\"\n                      style=\"background-color: var(${token})\"\n                    ></div>\n                    <div class=\"interactive-2\">\n                      ${getThemeTokenValue(args.theme, token) ??\n                      getComputedStyle(document.documentElement).getPropertyValue(token)}\n                    </div>\n                  </div>\n                </li>\n              `\n            )}\n        </ul>\n      </div>\n    </div>\n  `,\n} satisfies StoryObj;\n\nconst palettes = getPalettes();\n\nexport const Palettes = {\n  render: () => html`\n    <div class=\"colors-story palettes\">\n      ${Object.keys(palettes).map(\n        (paletteName) =>\n          html`<div class=\"tokens-container\">\n            <z-section-title\n              divider-position=\"after\"\n              style=\"--z-section-title--divider-color: var(${palettes[paletteName].find((token) =>\n                token.includes(\"500\")\n              )})\"\n            >\n              <div slot=\"primary-title\">${paletteName}</div>\n            </z-section-title>\n            <ul>\n              ${palettes[paletteName].map(\n                (token) => html`\n                  <li>\n                    <span class=\"token-name\">${token}</span>\n                    <div class=\"color\">\n                      <div\n                        class=\"color-box\"\n                        style=\"background-color: var(${token})\"\n                      ></div>\n                      <div class=\"interactive-2\">\n                        ${getComputedStyle(document.documentElement).getPropertyValue(token)}\n                      </div>\n                    </div>\n                  </li>\n                `\n              )}\n            </ul>\n          </div>`\n      )}\n    </div>\n  `,\n} satisfies StoryObj;\n"]}