{"file":"index22.js","mappings":";;;AAAA,MAAM,SAAS,GAAG,kqBAAkqB,CAAC;AACrrB,sBAAe,SAAS;;MCUX,OAAO;;;;;;;sBASK,YAAY,CAAC,OAAO;;;IAI3C,MAAM,IAAI;QACR,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,IAAI,CAAC;KACjC;;IAID,MAAM,KAAK;QACT,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC;KACnC;IAMO,gBAAgB,CAAC,EAAU,EAAE,MAAoB;QACvD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,EAAE,EAAE,MAAM,EAAC,CAAC,CAAC;KACtC;IAGD,uBAAuB,CAAC,CAAc;QACpC,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,KAAK,IAAI,CAAC,QAAQ,EAAE;YAChD,QAAQ,IAAI,CAAC,MAAM;gBACjB,KAAK,YAAY,CAAC,OAAO,CAAC;gBAC1B,KAAK,YAAY,CAAC,MAAM;oBACtB,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,IAAI,CAAC;oBAChC,MAAM;gBACR,KAAK,YAAY,CAAC,IAAI;oBACpB,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC;oBAClC,MAAM;aACT;SACF;KACF;IAGD,qBAAqB,CAAC,CAAc;QAClC,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,KAAK,IAAI,CAAC,QAAQ,EAAE;YAChD,IAAI,CAAC,CAAC,MAAM,CAAC,SAAS,KAAK,IAAI,EAAE;gBAC/B,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,IAAI,CAAC;aACjC;iBAAM,IAAI,CAAC,CAAC,MAAM,CAAC,SAAS,KAAK,MAAM,EAAE;gBACxC,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC;aACnC;SACF;KACF;IAGD,kBAAkB,CAAC,MAAoB;QACrC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;KAC9C;IAED,iBAAiB;QACf,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KACnD;IAEO,qBAAqB,CAAC,CAAa;QACzC,IAAK,CAAC,CAAC,MAAsB,CAAC,OAAO,CAAC,MAAM,IAAI,kBAAkB,EAAE;YAClE,IAAI,CAAC,KAAK,EAAE,CAAC;SACd;KACF;IAED,MAAM;QACJ,QACE,8DACE,2EACc,kBAAkB,iBACjB,IAAI,CAAC,QAAQ,EAC1B,KAAK,EAAE,cAAc,IAAI,CAAC,MAAM,EAAE,EAClC,OAAO,EAAE,CAAC,CAAa,KAAK,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,GACzD,EACF,4DACE,EAAE,EAAE,IAAI,CAAC,QAAQ,EACjB,KAAK,EAAC,iBAAiB,IAEvB,8DACE,8DAAQ,CACJ,CACF,CACF,EACN;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/snowflakes/myz/pocket/z-pocket/styles.css?tag=z-pocket&encapsulation=shadow","src/snowflakes/myz/pocket/z-pocket/index.tsx"],"sourcesContent":[":host {\n  width: inherit;\n  height: 100%;\n  margin: inherit;\n  font-family: var(--font-family-sans);\n  font-weight: var(--font-rg);\n}\n\n:host > div {\n  width: inherit;\n  height: 100%;\n  margin: inherit;\n}\n\n:host > div > div.background {\n  position: fixed;\n  z-index: 998;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  width: 0;\n  height: 0;\n}\n\n:host > div > div.background.open {\n  width: 100%;\n  height: 100%;\n}\n\n:host > div > div.content-wrapper {\n  position: fixed;\n  z-index: 999;\n  bottom: 0;\n  left: 0;\n  width: inherit;\n  margin: inherit;\n}\n\n:host > div > div.content-wrapper > div {\n  margin: calc(var(--space-unit) * 0.5) calc(var(--space-unit) * 0.5) 0 calc(var(--space-unit) * 0.5);\n  border-radius: var(--space-unit) var(--space-unit) 0 0;\n  box-shadow: 0 -2px calc(var(--space-unit) * 0.5) 0 rgb(66 69 72 / 40%);\n}\n","import {Component, Prop, h, Method, Event, EventEmitter, Listen, Element, Watch} from \"@stencil/core\";\nimport {PocketStatus} from \"../../../../beans\";\n\n/**\n * @slot - pocket content\n */\n@Component({\n  tag: \"z-pocket\",\n  styleUrl: \"styles.css\",\n  shadow: true,\n})\nexport class ZPocket {\n  @Element() hostElement: HTMLZPocketElement;\n\n  /** pocket id */\n  @Prop()\n  pocketid: string;\n\n  /** pocket status */\n  @Prop({mutable: true})\n  status: PocketStatus = PocketStatus.PREVIEW;\n\n  /** open z-pocket */\n  @Method()\n  async open(): Promise<void> {\n    this.status = PocketStatus.OPEN;\n  }\n\n  /** close z-pocket */\n  @Method()\n  async close(): Promise<void> {\n    this.status = PocketStatus.CLOSED;\n  }\n\n  /** Emitted on pocket toggle, returns pocket id and status */\n  @Event()\n  pocketToggle: EventEmitter;\n\n  private emitPocketToggle(id: string, status: PocketStatus): void {\n    this.pocketToggle.emit({id, status});\n  }\n\n  @Listen(\"pocketHeaderClick\")\n  handlePocketHeaderClick(e: CustomEvent): void {\n    if (e.detail.id && e.detail.id === this.pocketid) {\n      switch (this.status) {\n        case PocketStatus.PREVIEW:\n        case PocketStatus.CLOSED:\n          this.status = PocketStatus.OPEN;\n          break;\n        case PocketStatus.OPEN:\n          this.status = PocketStatus.CLOSED;\n          break;\n      }\n    }\n  }\n\n  @Listen(\"pocketHeaderPan\")\n  handlePocketHeaderPan(e: CustomEvent): void {\n    if (e.detail.id && e.detail.id === this.pocketid) {\n      if (e.detail.direction === \"up\") {\n        this.status = PocketStatus.OPEN;\n      } else if (e.detail.direction === \"down\") {\n        this.status = PocketStatus.CLOSED;\n      }\n    }\n  }\n\n  @Watch(\"status\")\n  watchStatusHandler(newVal: PocketStatus): void {\n    this.emitPocketToggle(this.pocketid, newVal);\n  }\n\n  componentWillLoad(): void {\n    this.emitPocketToggle(this.pocketid, this.status);\n  }\n\n  private handleBackgroundClick(e: MouseEvent): void {\n    if ((e.target as HTMLElement).dataset.action == \"pocketBackground\") {\n      this.close();\n    }\n  }\n\n  render(): HTMLDivElement {\n    return (\n      <div>\n        <div\n          data-action=\"pocketBackground\"\n          data-pocket={this.pocketid}\n          class={`background ${this.status}`}\n          onClick={(e: MouseEvent) => this.handleBackgroundClick(e)}\n        />\n        <div\n          id={this.pocketid}\n          class=\"content-wrapper\"\n        >\n          <div>\n            <slot />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"],"version":3}